# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_Sku_Sap_Attr_Pre")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_Sku_Sap_Attr_Pre", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_ZTPIM_ART_ATTR_0


query_0 = f"""SELECT
  MANDT AS MANDT,
  MATNR AS MATNR,
  ATTNUM AS ATTNUM,
  ATTVALNUM AS ATTVALNUM,
  DEL_IND AS DEL_IND,
  CHANGED_BY AS CHANGED_BY,
  CHANGED_ON AS CHANGED_ON,
  CHANGED_AT AS CHANGED_AT
FROM
  ZTPIM_ART_ATTR"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_ZTPIM_ART_ATTR_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ZTPIM_ART_ATTR_1


query_1 = f"""SELECT
  MANDT AS MANDT,
  MATNR AS MATNR,
  ATTNUM AS ATTNUM,
  ATTVALNUM AS ATTVALNUM,
  DEL_IND AS DEL_IND,
  CHANGED_BY AS CHANGED_BY,
  CHANGED_ON AS CHANGED_ON,
  CHANGED_AT AS CHANGED_AT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_ZTPIM_ART_ATTR_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_ZTPIM_ART_ATTR_1")

# COMMAND ----------
# DBTITLE 1, Fil_ZTPIM_ART_ATTR_2


query_2 = f"""SELECT
  MATNR AS MATNR,
  ATTNUM AS ATTNUM,
  ATTVALNUM AS ATTVALNUM,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_ZTPIM_ART_ATTR_1
WHERE
  ATTNUM = 165"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Fil_ZTPIM_ART_ATTR_2")

# COMMAND ----------
# DBTITLE 1, Exp_SAP_KOI_3


query_3 = f"""SELECT
  TO_INTEGER(MATNR) AS o_MATNR,
  TO_INTEGER(ATTVALNUM) AS SKU_SAP_KOI_ID,
  IFF(TO_INTEGER(ATTVALNUM) = 1, 'Yes', 'No') AS SKU_SAP_KOI_DESC,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  Fil_ZTPIM_ART_ATTR_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("Exp_SAP_KOI_3")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_ZTPIM_MAP_4


query_4 = f"""SELECT
  MANDT AS MANDT,
  ARTICLE AS ARTICLE,
  DATAB AS DATAB,
  DATBI AS DATBI,
  MAP_PRICE AS MAP_PRICE,
  CREATED_BY AS CREATED_BY,
  LAST_CHANGED_BY AS LAST_CHANGED_BY,
  LAST_CHANGED_DATE AS LAST_CHANGED_DATE
FROM
  ZTPIM_MAP"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("Shortcut_to_ZTPIM_MAP_4")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ZTPIM_MAP_5


query_5 = f"""SELECT
  MANDT AS MANDT,
  ARTICLE AS ARTICLE,
  DATAB AS DATAB,
  DATBI AS DATBI,
  MAP_PRICE AS MAP_PRICE,
  CREATED_BY AS CREATED_BY,
  LAST_CHANGED_BY AS LAST_CHANGED_BY,
  LAST_CHANGED_DATE AS LAST_CHANGED_DATE,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_ZTPIM_MAP_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("SQ_Shortcut_to_ZTPIM_MAP_5")

# COMMAND ----------
# DBTITLE 1, FIL_DATE_IN_DATAB_DATBI_6


query_6 = f"""SELECT
  ARTICLE AS ARTICLE,
  DATAB AS DATAB,
  DATBI AS DATBI,
  MAP_PRICE AS MAP_PRICE,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_ZTPIM_MAP_5
WHERE
  now() >= DATAB
  AND now() <= DATBI"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("FIL_DATE_IN_DATAB_DATBI_6")

# COMMAND ----------
# DBTITLE 1, EXP_ZM_ARTICLE_CHANGE_TO_INTEGER_7


query_7 = f"""SELECT
  TO_INTEGER(ARTICLE) AS o_ARTICLE,
  TO_CHAR(MAP_PRICE) AS o_MAP_PRICE,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_DATE_IN_DATAB_DATBI_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("EXP_ZM_ARTICLE_CHANGE_TO_INTEGER_7")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_ZTB_PVT_LBL_GAP_8


query_8 = f"""SELECT
  MANDT AS MANDT,
  PLG_NUMBER AS PLG_NUMBER,
  MATNR AS MATNR,
  TIER AS TIER,
  PARENT_TIER AS PARENT_TIER,
  PLG_IDX AS PLG_IDX,
  MIN_PLG_IDX AS MIN_PLG_IDX,
  MAX_PLG_IDX AS MAX_PLG_IDX,
  CREATED_BY AS CREATED_BY,
  CREATED_ON AS CREATED_ON
FROM
  ZTB_PVT_LBL_GAP"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("Shortcut_to_ZTB_PVT_LBL_GAP_8")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ZTB_PVT_LBL_GAP_9


query_9 = f"""SELECT
  MANDT AS MANDT,
  PLG_NUMBER AS PLG_NUMBER,
  MATNR AS MATNR,
  TIER AS TIER,
  PARENT_TIER AS PARENT_TIER,
  PLG_IDX AS PLG_IDX,
  MIN_PLG_IDX AS MIN_PLG_IDX,
  MAX_PLG_IDX AS MAX_PLG_IDX,
  CREATED_BY AS CREATED_BY,
  CREATED_ON AS CREATED_ON,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_ZTB_PVT_LBL_GAP_8"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("SQ_Shortcut_to_ZTB_PVT_LBL_GAP_9")

# COMMAND ----------
# DBTITLE 1, EXP_ZPLG_MATNR_CHANGE_TO_INTEGER_10


query_10 = f"""SELECT
  PLG_NUMBER AS PLG_NUMBER,
  TO_INTEGER(MATNR) AS o_MATNR,
  TO_CHAR(TIER) AS o_TIER,
  TO_CHAR(PARENT_TIER) AS o_PARENT_TIER,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_ZTB_PVT_LBL_GAP_9"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("EXP_ZPLG_MATNR_CHANGE_TO_INTEGER_10")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_ZTB_PR_LABEL_11


query_11 = f"""SELECT
  MANDT AS MANDT,
  PLG_NUMBER AS PLG_NUMBER,
  PLG_DESCRIPTION AS PLG_DESCRIPTION
FROM
  ZTB_PR_LABEL"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("Shortcut_to_ZTB_PR_LABEL_11")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ZTB_PR_LABEL_12


query_12 = f"""SELECT
  MANDT AS MANDT,
  PLG_NUMBER AS PLG_NUMBER,
  PLG_DESCRIPTION AS PLG_DESCRIPTION,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_ZTB_PR_LABEL_11"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("SQ_Shortcut_to_ZTB_PR_LABEL_12")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_ZTB_SIZE_PARITY_13


query_13 = f"""SELECT
  MANDT AS MANDT,
  MATNR AS MATNR,
  SP_GRP_ID AS SP_GRP_ID,
  SP_GRP_NAME AS SP_GRP_NAME,
  CREATED_BY AS CREATED_BY,
  CREATED_ON AS CREATED_ON
FROM
  ZTB_SIZE_PARITY"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("Shortcut_to_ZTB_SIZE_PARITY_13")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ZTB_SIZE_PARITY_14


query_14 = f"""SELECT
  MANDT AS MANDT,
  MATNR AS MATNR,
  SP_GRP_ID AS SP_GRP_ID,
  SP_GRP_NAME AS SP_GRP_NAME,
  CREATED_BY AS CREATED_BY,
  CREATED_ON AS CREATED_ON,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_ZTB_SIZE_PARITY_13"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("SQ_Shortcut_to_ZTB_SIZE_PARITY_14")

# COMMAND ----------
# DBTITLE 1, EXP_ZSP_MATNR_CHANGE_TO_INTEGER_15


query_15 = f"""SELECT
  TO_INTEGER(MATNR) AS o_MATNR,
  SP_GRP_ID AS SP_GRP_ID,
  SP_GRP_NAME AS SP_GRP_NAME,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_ZTB_SIZE_PARITY_14"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("EXP_ZSP_MATNR_CHANGE_TO_INTEGER_15")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_ZTB_PR_FAM_ART_16


query_16 = f"""SELECT
  MANDT AS MANDT,
  PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  MATNR AS MATNR,
  PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  MAKTX AS MAKTX,
  CREATED_BY AS CREATED_BY,
  CREATED_ON AS CREATED_ON
FROM
  ZTB_PR_FAM_ART"""

df_16 = spark.sql(query_16)

df_16.createOrReplaceTempView("Shortcut_to_ZTB_PR_FAM_ART_16")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ZTB_PR_FAM_ART_17


query_17 = f"""SELECT
  MANDT AS MANDT,
  PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  MATNR AS MATNR,
  PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  MAKTX AS MAKTX,
  CREATED_BY AS CREATED_BY,
  CREATED_ON AS CREATED_ON,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_ZTB_PR_FAM_ART_16"""

df_17 = spark.sql(query_17)

df_17.createOrReplaceTempView("SQ_Shortcut_to_ZTB_PR_FAM_ART_17")

# COMMAND ----------
# DBTITLE 1, EXP_ZPFA_MATNR_CHANGE_TO_INTEGER_18


query_18 = f"""SELECT
  PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  TO_INTEGER(MATNR) AS o_MATNR,
  PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_ZTB_PR_FAM_ART_17"""

df_18 = spark.sql(query_18)

df_18.createOrReplaceTempView("EXP_ZPFA_MATNR_CHANGE_TO_INTEGER_18")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_ZTB_PR_GRP_ART_19


query_19 = f"""SELECT
  MANDT AS MANDT,
  KVI_CODE AS KVI_CODE,
  MATNR AS MATNR,
  ZONE_CODE AS ZONE_CODE,
  KVI_TYPE AS KVI_TYPE,
  KVI_NAME AS KVI_NAME,
  MAKTX AS MAKTX,
  CREATED_BY AS CREATED_BY,
  CREATED_ON AS CREATED_ON,
  CREATED_AT AS CREATED_AT
FROM
  ZTB_PR_GRP_ART"""

df_19 = spark.sql(query_19)

df_19.createOrReplaceTempView("Shortcut_to_ZTB_PR_GRP_ART_19")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ZTB_PR_GRP_ART_20


query_20 = f"""SELECT
  MANDT AS MANDT,
  KVI_CODE AS KVI_CODE,
  MATNR AS MATNR,
  ZONE_CODE AS ZONE_CODE,
  KVI_TYPE AS KVI_TYPE,
  KVI_NAME AS KVI_NAME,
  MAKTX AS MAKTX,
  CREATED_BY AS CREATED_BY,
  CREATED_ON AS CREATED_ON,
  CREATED_AT AS CREATED_AT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_ZTB_PR_GRP_ART_19"""

df_20 = spark.sql(query_20)

df_20.createOrReplaceTempView("SQ_Shortcut_to_ZTB_PR_GRP_ART_20")

# COMMAND ----------
# DBTITLE 1, AGG_KVI_CODE_KVI_NAME_21


query_21 = f"""SELECT
  KVI_CODE AS KVI_CODE,
  MATNR AS MATNR,
  KVI_NAME AS KVI_NAME,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_ZTB_PR_GRP_ART_20
GROUP BY
  KVI_CODE,
  MATNR,
  KVI_NAME"""

df_21 = spark.sql(query_21)

df_21.createOrReplaceTempView("AGG_KVI_CODE_KVI_NAME_21")

# COMMAND ----------
# DBTITLE 1, EXP_ZPGA_MATNR_CHANGE_TO_INTEGER_22


query_22 = f"""SELECT
  KVI_CODE AS KVI_CODE,
  KVI_NAME AS KVI_NAME,
  TO_INTEGER(MATNR) AS o_MATNR,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  AGG_KVI_CODE_KVI_NAME_21"""

df_22 = spark.sql(query_22)

df_22.createOrReplaceTempView("EXP_ZPGA_MATNR_CHANGE_TO_INTEGER_22")

# COMMAND ----------
# DBTITLE 1, Shortcut_To_SKU_PROFILE_23


query_23 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  SKU_TYPE AS SKU_TYPE,
  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  STATUS_ID AS STATUS_ID,
  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SKU_DESC AS SKU_DESC,
  ALT_DESC AS ALT_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  COUNTRY_CD AS COUNTRY_CD,
  IMPORT_FLAG AS IMPORT_FLAG,
  HTS_CODE_ID AS HTS_CODE_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SIZE_DESC AS SIZE_DESC,
  BUM_QTY AS BUM_QTY,
  UOM_CD AS UOM_CD,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  BUYER_ID AS BUYER_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_COST_AMT AS PURCH_COST_AMT,
  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  BRAND_CD AS BRAND_CD,
  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  STATELINE_FLAG AS STATELINE_FLAG,
  SIGN_TYPE_CD AS SIGN_TYPE_CD,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  INIT_MKDN_DT AS INIT_MKDN_DT,
  DISC_START_DT AS DISC_START_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  FIRST_SALE_DT AS FIRST_SALE_DT,
  LAST_SALE_DT AS LAST_SALE_DT,
  FIRST_INV_DT AS FIRST_INV_DT,
  LAST_INV_DT AS LAST_INV_DT,
  LOAD_DT AS LOAD_DT,
  BASE_NBR AS BASE_NBR,
  BP_COLOR_ID AS BP_COLOR_ID,
  BP_SIZE_ID AS BP_SIZE_ID,
  BP_BREED_ID AS BP_BREED_ID,
  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  RTV_DEPT_CD AS RTV_DEPT_CD,
  GL_ACCT_NBR AS GL_ACCT_NBR,
  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  COMPONENT_FLAG AS COMPONENT_FLAG,
  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  ZDISCO_PID_DT AS ZDISCO_PID_DT,
  ZDISCO_START_DT AS ZDISCO_START_DT,
  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  ZDISCO_DC_DT AS ZDISCO_DC_DT,
  ZDISCO_STR_DT AS ZDISCO_STR_DT,
  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT
FROM
  SKU_PROFILE"""

df_23 = spark.sql(query_23)

df_23.createOrReplaceTempView("Shortcut_To_SKU_PROFILE_23")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_To_SKU_PROFILE_24


query_24 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  SKU_TYPE AS SKU_TYPE,
  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  STATUS_ID AS STATUS_ID,
  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SKU_DESC AS SKU_DESC,
  ALT_DESC AS ALT_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  COUNTRY_CD AS COUNTRY_CD,
  IMPORT_FLAG AS IMPORT_FLAG,
  HTS_CODE_ID AS HTS_CODE_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SIZE_DESC AS SIZE_DESC,
  BUM_QTY AS BUM_QTY,
  UOM_CD AS UOM_CD,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  BUYER_ID AS BUYER_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_COST_AMT AS PURCH_COST_AMT,
  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  BRAND_CD AS BRAND_CD,
  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  STATELINE_FLAG AS STATELINE_FLAG,
  SIGN_TYPE_CD AS SIGN_TYPE_CD,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  INIT_MKDN_DT AS INIT_MKDN_DT,
  DISC_START_DT AS DISC_START_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  FIRST_SALE_DT AS FIRST_SALE_DT,
  LAST_SALE_DT AS LAST_SALE_DT,
  FIRST_INV_DT AS FIRST_INV_DT,
  LAST_INV_DT AS LAST_INV_DT,
  LOAD_DT AS LOAD_DT,
  BASE_NBR AS BASE_NBR,
  BP_COLOR_ID AS BP_COLOR_ID,
  BP_SIZE_ID AS BP_SIZE_ID,
  BP_BREED_ID AS BP_BREED_ID,
  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  RTV_DEPT_CD AS RTV_DEPT_CD,
  GL_ACCT_NBR AS GL_ACCT_NBR,
  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  COMPONENT_FLAG AS COMPONENT_FLAG,
  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  ZDISCO_PID_DT AS ZDISCO_PID_DT,
  ZDISCO_START_DT AS ZDISCO_START_DT,
  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  ZDISCO_DC_DT AS ZDISCO_DC_DT,
  ZDISCO_STR_DT AS ZDISCO_STR_DT,
  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_To_SKU_PROFILE_23"""

df_24 = spark.sql(query_24)

df_24.createOrReplaceTempView("SQ_Shortcut_To_SKU_PROFILE_24")

# COMMAND ----------
# DBTITLE 1, JNR_ZTB_PR_GRP_ART_25


query_25 = f"""SELECT
  DETAIL.PRODUCT_ID AS PRODUCT_ID,
  DETAIL.SKU_NBR AS SKU_NBR,
  MASTER.KVI_CODE AS KVI_CODE,
  MASTER.KVI_NAME AS KVI_NAME,
  MASTER.o_MATNR AS MATNR,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_ZPGA_MATNR_CHANGE_TO_INTEGER_22 MASTER
  RIGHT JOIN SQ_Shortcut_To_SKU_PROFILE_24 DETAIL ON MASTER.o_MATNR = DETAIL.SKU_NBR"""

df_25 = spark.sql(query_25)

df_25.createOrReplaceTempView("JNR_ZTB_PR_GRP_ART_25")

# COMMAND ----------
# DBTITLE 1, JNR_ZTB_PR_FAM_ART_26


query_26 = f"""SELECT
  DETAIL.PRODUCT_ID AS PRODUCT_ID,
  DETAIL.SKU_NBR AS SKU_NBR,
  DETAIL.KVI_CODE AS KVI_CODE,
  DETAIL.KVI_NAME AS KVI_NAME,
  MASTER.PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  MASTER.o_MATNR AS MATNR,
  MASTER.PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_ZPFA_MATNR_CHANGE_TO_INTEGER_18 MASTER
  RIGHT JOIN JNR_ZTB_PR_GRP_ART_25 DETAIL ON MASTER.o_MATNR = DETAIL.SKU_NBR"""

df_26 = spark.sql(query_26)

df_26.createOrReplaceTempView("JNR_ZTB_PR_FAM_ART_26")

# COMMAND ----------
# DBTITLE 1, JNR_ZTB_SIZE_PARITY_27


query_27 = f"""SELECT
  DETAIL.PRODUCT_ID AS PRODUCT_ID,
  DETAIL.SKU_NBR AS SKU_NBR,
  DETAIL.KVI_CODE AS KVI_CODE,
  DETAIL.KVI_NAME AS KVI_NAME,
  DETAIL.PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  DETAIL.PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  MASTER.o_MATNR AS MATNR,
  MASTER.SP_GRP_ID AS SP_GRP_ID,
  MASTER.SP_GRP_NAME AS SP_GRP_NAME,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_ZSP_MATNR_CHANGE_TO_INTEGER_15 MASTER
  RIGHT JOIN JNR_ZTB_PR_FAM_ART_26 DETAIL ON MASTER.o_MATNR = DETAIL.SKU_NBR"""

df_27 = spark.sql(query_27)

df_27.createOrReplaceTempView("JNR_ZTB_SIZE_PARITY_27")

# COMMAND ----------
# DBTITLE 1, JNR_ZTB_PVT_LBL_GAP_28


query_28 = f"""SELECT
  DETAIL.PRODUCT_ID AS PRODUCT_ID,
  DETAIL.SKU_NBR AS SKU_NBR,
  DETAIL.KVI_CODE AS KVI_CODE,
  DETAIL.KVI_NAME AS KVI_NAME,
  DETAIL.PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  DETAIL.PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  DETAIL.SP_GRP_ID AS SP_GRP_ID,
  DETAIL.SP_GRP_NAME AS SP_GRP_NAME,
  MASTER.PLG_NUMBER AS PLG_NUMBER,
  MASTER.o_TIER AS TIER,
  MASTER.o_PARENT_TIER AS PARENT_TIER,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_ZPLG_MATNR_CHANGE_TO_INTEGER_10 MASTER
  RIGHT JOIN JNR_ZTB_SIZE_PARITY_27 DETAIL ON MASTER.o_MATNR = DETAIL.SKU_NBR"""

df_28 = spark.sql(query_28)

df_28.createOrReplaceTempView("JNR_ZTB_PVT_LBL_GAP_28")

# COMMAND ----------
# DBTITLE 1, JNR_ZTB_PR_LABEL_29


query_29 = f"""SELECT
  DETAIL.PRODUCT_ID AS PRODUCT_ID,
  DETAIL.SKU_NBR AS SKU_NBR,
  DETAIL.KVI_CODE AS KVI_CODE,
  DETAIL.KVI_NAME AS KVI_NAME,
  DETAIL.PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  DETAIL.PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  DETAIL.SP_GRP_ID AS SP_GRP_ID,
  DETAIL.SP_GRP_NAME AS SP_GRP_NAME,
  DETAIL.PLG_NUMBER AS PLG_NUMBER,
  DETAIL.TIER AS TIER,
  DETAIL.PARENT_TIER AS PARENT_TIER,
  MASTER.PLG_DESCRIPTION AS PLG_DESCRIPTION,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_ZTB_PR_LABEL_12 MASTER
  RIGHT JOIN JNR_ZTB_PVT_LBL_GAP_28 DETAIL ON MASTER.PLG_NUMBER = DETAIL.PLG_NUMBER"""

df_29 = spark.sql(query_29)

df_29.createOrReplaceTempView("JNR_ZTB_PR_LABEL_29")

# COMMAND ----------
# DBTITLE 1, JNR_ZTPIM_MAP_30


query_30 = f"""SELECT
  DETAIL.PRODUCT_ID AS PRODUCT_ID,
  DETAIL.SKU_NBR AS SKU_NBR,
  DETAIL.KVI_CODE AS KVI_CODE,
  DETAIL.KVI_NAME AS KVI_NAME,
  DETAIL.PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  DETAIL.PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  DETAIL.SP_GRP_ID AS SP_GRP_ID,
  DETAIL.SP_GRP_NAME AS SP_GRP_NAME,
  DETAIL.PLG_NUMBER AS PLG_NUMBER,
  DETAIL.PLG_DESCRIPTION AS PLG_DESCRIPTION,
  DETAIL.TIER AS TIER,
  DETAIL.PARENT_TIER AS PARENT_TIER,
  MASTER.o_MAP_PRICE AS MAP_PRICE,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_ZM_ARTICLE_CHANGE_TO_INTEGER_7 MASTER
  RIGHT JOIN JNR_ZTB_PR_LABEL_29 DETAIL ON MASTER.o_ARTICLE = DETAIL.SKU_NBR"""

df_30 = spark.sql(query_30)

df_30.createOrReplaceTempView("JNR_ZTPIM_MAP_30")

# COMMAND ----------
# DBTITLE 1, Jnr_SAP_KOI_31


query_31 = f"""SELECT
  DETAIL.PRODUCT_ID AS PRODUCT_ID,
  DETAIL.SKU_NBR AS SKU_NBR,
  DETAIL.KVI_CODE AS KVI_CODE,
  DETAIL.KVI_NAME AS KVI_NAME,
  DETAIL.PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  DETAIL.PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  DETAIL.SP_GRP_ID AS SP_GRP_ID,
  DETAIL.SP_GRP_NAME AS SP_GRP_NAME,
  DETAIL.PLG_NUMBER AS PLG_NUMBER,
  DETAIL.PLG_DESCRIPTION AS PLG_DESCRIPTION,
  DETAIL.TIER AS TIER,
  DETAIL.PARENT_TIER AS PARENT_TIER,
  DETAIL.MAP_PRICE AS MAP_PRICE,
  MASTER.o_MATNR AS o_MATNR,
  MASTER.SKU_SAP_KOI_ID AS SKU_SAP_KOI_ID,
  MASTER.SKU_SAP_KOI_DESC AS SKU_SAP_KOI_DESC,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  Exp_SAP_KOI_3 MASTER
  RIGHT JOIN JNR_ZTPIM_MAP_30 DETAIL ON MASTER.o_MATNR = DETAIL.SKU_NBR"""

df_31 = spark.sql(query_31)

df_31.createOrReplaceTempView("Jnr_SAP_KOI_31")

# COMMAND ----------
# DBTITLE 1, EXP_LOAD_TSTMP_32


query_32 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  KVI_CODE AS KVI_CODE,
  KVI_NAME AS KVI_NAME,
  PRICE_FAMILY_NO AS PRICE_FAMILY_NO,
  PRICE_FAMILY_NAME AS PRICE_FAMILY_NAME,
  SP_GRP_ID AS SP_GRP_ID,
  SP_GRP_NAME AS SP_GRP_NAME,
  PLG_NUMBER AS PLG_NUMBER,
  PLG_DESCRIPTION AS PLG_DESCRIPTION,
  TIER AS TIER,
  PARENT_TIER AS PARENT_TIER,
  MAP_PRICE AS MAP_PRICE,
  SKU_SAP_KOI_ID AS SKU_SAP_KOI_ID,
  SKU_SAP_KOI_DESC AS SKU_SAP_KOI_DESC,
  SYSTIMESTAMP() AS LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  Jnr_SAP_KOI_31"""

df_32 = spark.sql(query_32)

df_32.createOrReplaceTempView("EXP_LOAD_TSTMP_32")

# COMMAND ----------
# DBTITLE 1, SKU_SAP_ATTR_PRE


spark.sql("""INSERT INTO
  SKU_SAP_ATTR_PRE
SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  KVI_CODE AS SKU_SAP_PROD_GROUP_ID,
  KVI_NAME AS SKU_SAP_PROD_GROUP_DESC,
  PRICE_FAMILY_NO AS SKU_SAP_FAMILY_ID,
  PRICE_FAMILY_NAME AS SKU_SAP_FAMILY_DESC,
  SP_GRP_ID AS SKU_SAP_PPU_GROUP_ID,
  SP_GRP_NAME AS SKU_SAP_PPU_GROUP_DESC,
  PLG_NUMBER AS SKU_SAP_PRVT_LABEL_ID,
  PLG_DESCRIPTION AS SKU_SAP_PRVT_LABEL_DESC,
  NULL AS SKU_SAP_PRVT_LABEL_TIER_ID,
  TIER AS SKU_SAP_PRVT_LABEL_TIER_DESC,
  NULL AS SKU_SAP_PRVT_LABEL_PARENT_TIER_ID,
  PARENT_TIER AS SKU_SAP_PRVT_LABEL_PARENT_TIER_DESC,
  NULL AS SKU_SAP_MAP_ID,
  MAP_PRICE AS SKU_SAP_MAP_DESC,
  SKU_SAP_KOI_ID AS SKU_SAP_KOI_ID,
  SKU_SAP_KOI_DESC AS SKU_SAP_KOI_DESC,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  EXP_LOAD_TSTMP_32""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_Sku_Sap_Attr_Pre")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_Sku_Sap_Attr_Pre", mainWorkflowId, parentName)
