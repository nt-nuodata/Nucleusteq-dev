# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_sku_vendor_day")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_sku_vendor_day", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_To_SKU_VENDOR_PRE_0


query_0 = f"""SELECT
  SKU_NBR AS SKU_NBR,
  VENDOR_ID AS VENDOR_ID,
  VENDOR_SUBRANGE_CD AS VENDOR_SUBRANGE_CD,
  DELETE_IND AS DELETE_IND,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  DELIV_EFF_DT AS DELIV_EFF_DT,
  DELIV_END_DT AS DELIV_END_DT,
  REGULAR_VENDOR_CD AS REGULAR_VENDOR_CD,
  COUNTRY_CD AS COUNTRY_CD,
  ROUNDING_PROFILE_CD AS ROUNDING_PROFILE_CD,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR
FROM
  SKU_VENDOR_PRE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_To_SKU_VENDOR_PRE_0")

# COMMAND ----------
# DBTITLE 1, Shortcut_To_SKU_VENDOR_DAY1_1


query_1 = f"""SELECT
  SKU_NBR AS SKU_NBR,
  VENDOR_ID AS VENDOR_ID,
  VENDOR_SUBRANGE_CD AS VENDOR_SUBRANGE_CD,
  DELETE_IND AS DELETE_IND,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  DELIV_EFF_DT AS DELIV_EFF_DT,
  DELIV_END_DT AS DELIV_END_DT,
  REGULAR_VENDOR_CD AS REGULAR_VENDOR_CD,
  ROUNDING_PROFILE_CD AS ROUNDING_PROFILE_CD,
  COUNTRY_CD AS COUNTRY_CD,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  LOAD_DT AS LOAD_DT
FROM
  SKU_VENDOR_DAY"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("Shortcut_To_SKU_VENDOR_DAY1_1")

# COMMAND ----------
# DBTITLE 1, ASQ_SHPRTCUT_TO_SKU_VENDOR_PRE_2


query_2 = f"""SELECT
  SVP.SKU_NBR AS SKU_NBR,
  SVP.VENDOR_ID AS VENDOR_ID,
  SVP.DELETE_IND AS DELETE_IND,
  SVP.UNIT_NUMERATOR AS UNIT_NUMERATOR,
  SVP.UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  SVP.DELIV_EFF_DT AS DELIV_EFF_DT,
  SVP.DELIV_END_DT AS DELIV_END_DT,
  SVP.REGULAR_VENDOR_CD AS REGULAR_VENDOR_CD,
  SVP.ROUNDING_PROFILE_CD AS ROUNDING_PROFILE_CD,
  SVP.COUNTRY_CD AS COUNTRY_CD,
  SVP.VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  SVP.VENDOR_SUBRANGE_CD AS VENDOR_SUBRANGE_CD,
  CURRENT_TIMESTAMP AS LOAD_DT,
  SVD.SKU_NBR AS OLD_SKU_NBR,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_To_SKU_VENDOR_PRE_0 SVP
  LEFT OUTER JOIN Shortcut_To_SKU_VENDOR_DAY1_1 SVD ON SVP.SKU_NBR = SVD.SKU_NBR
  AND SVP.VENDOR_ID = SVD.VENDOR_ID"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("ASQ_SHPRTCUT_TO_SKU_VENDOR_PRE_2")

# COMMAND ----------
# DBTITLE 1, UPD_SKU_VENDOR_DAY_3


query_3 = f"""SELECT
  SKU_NBR AS SKU_NBR,
  VENDOR_ID AS VENDOR_ID,
  DELETE_IND AS DELETE_IND,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  DELIV_EFF_DT AS DELIV_EFF_DT,
  DELIV_END_DT AS DELIV_END_DT,
  REGULAR_VENDOR_CD AS REGULAR_VENDOR_CD,
  COUNTRY_CD AS COUNTRY_CD,
  ROUNDING_PROFILE_CD AS ROUNDING_PROFILE_CD,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  LOAD_DT AS LOAD_DT,
  OLD_SKU_NBR AS OLD_SKU_NBR,
  VENDOR_SUBRANGE_CD AS VENDOR_SUBRANGE_CD,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  IFF(ISNULL(OLD_SKU_NBR), 'DD_INSERT', 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  ASQ_SHPRTCUT_TO_SKU_VENDOR_PRE_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("UPD_SKU_VENDOR_DAY_3")

# COMMAND ----------
# DBTITLE 1, SKU_VENDOR_DAY


spark.sql("""MERGE INTO SKU_VENDOR_DAY AS TARGET
USING
  UPD_SKU_VENDOR_DAY_3 AS SOURCE ON TARGET.SKU_NBR = SOURCE.SKU_NBR
  AND TARGET.VENDOR_ID = SOURCE.VENDOR_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.SKU_NBR = SOURCE.SKU_NBR,
  TARGET.VENDOR_ID = SOURCE.VENDOR_ID,
  TARGET.VENDOR_SUBRANGE_CD = SOURCE.VENDOR_SUBRANGE_CD,
  TARGET.DELETE_IND = SOURCE.DELETE_IND,
  TARGET.UNIT_NUMERATOR = SOURCE.UNIT_NUMERATOR,
  TARGET.UNIT_DENOMINATOR = SOURCE.UNIT_DENOMINATOR,
  TARGET.DELIV_EFF_DT = SOURCE.DELIV_EFF_DT,
  TARGET.DELIV_END_DT = SOURCE.DELIV_END_DT,
  TARGET.REGULAR_VENDOR_CD = SOURCE.REGULAR_VENDOR_CD,
  TARGET.ROUNDING_PROFILE_CD = SOURCE.ROUNDING_PROFILE_CD,
  TARGET.COUNTRY_CD = SOURCE.COUNTRY_CD,
  TARGET.VENDOR_ARTICLE_NBR = SOURCE.VENDOR_ARTICLE_NBR,
  TARGET.LOAD_DT = SOURCE.LOAD_DT
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.VENDOR_SUBRANGE_CD = SOURCE.VENDOR_SUBRANGE_CD
  AND TARGET.DELETE_IND = SOURCE.DELETE_IND
  AND TARGET.UNIT_NUMERATOR = SOURCE.UNIT_NUMERATOR
  AND TARGET.UNIT_DENOMINATOR = SOURCE.UNIT_DENOMINATOR
  AND TARGET.DELIV_EFF_DT = SOURCE.DELIV_EFF_DT
  AND TARGET.DELIV_END_DT = SOURCE.DELIV_END_DT
  AND TARGET.REGULAR_VENDOR_CD = SOURCE.REGULAR_VENDOR_CD
  AND TARGET.ROUNDING_PROFILE_CD = SOURCE.ROUNDING_PROFILE_CD
  AND TARGET.COUNTRY_CD = SOURCE.COUNTRY_CD
  AND TARGET.VENDOR_ARTICLE_NBR = SOURCE.VENDOR_ARTICLE_NBR
  AND TARGET.LOAD_DT = SOURCE.LOAD_DT THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.SKU_NBR,
    TARGET.VENDOR_ID,
    TARGET.VENDOR_SUBRANGE_CD,
    TARGET.DELETE_IND,
    TARGET.UNIT_NUMERATOR,
    TARGET.UNIT_DENOMINATOR,
    TARGET.DELIV_EFF_DT,
    TARGET.DELIV_END_DT,
    TARGET.REGULAR_VENDOR_CD,
    TARGET.ROUNDING_PROFILE_CD,
    TARGET.COUNTRY_CD,
    TARGET.VENDOR_ARTICLE_NBR,
    TARGET.LOAD_DT
  )
VALUES
  (
    SOURCE.SKU_NBR,
    SOURCE.VENDOR_ID,
    SOURCE.VENDOR_SUBRANGE_CD,
    SOURCE.DELETE_IND,
    SOURCE.UNIT_NUMERATOR,
    SOURCE.UNIT_DENOMINATOR,
    SOURCE.DELIV_EFF_DT,
    SOURCE.DELIV_END_DT,
    SOURCE.REGULAR_VENDOR_CD,
    SOURCE.ROUNDING_PROFILE_CD,
    SOURCE.COUNTRY_CD,
    SOURCE.VENDOR_ARTICLE_NBR,
    SOURCE.LOAD_DT
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_sku_vendor_day")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_sku_vendor_day", mainWorkflowId, parentName)
