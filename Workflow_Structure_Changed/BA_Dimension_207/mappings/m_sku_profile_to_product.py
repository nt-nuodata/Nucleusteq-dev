# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_sku_profile_to_product")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_sku_profile_to_product", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_To_SKU_PROFILE_0


query_0 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  SKU_TYPE AS SKU_TYPE,
  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  STATUS_ID AS STATUS_ID,
  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SKU_DESC AS SKU_DESC,
  ALT_DESC AS ALT_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  COUNTRY_CD AS COUNTRY_CD,
  IMPORT_FLAG AS IMPORT_FLAG,
  HTS_CODE_ID AS HTS_CODE_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SIZE_DESC AS SIZE_DESC,
  BUM_QTY AS BUM_QTY,
  UOM_CD AS UOM_CD,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  BUYER_ID AS BUYER_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_COST_AMT AS PURCH_COST_AMT,
  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  BRAND_CD AS BRAND_CD,
  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  STATELINE_FLAG AS STATELINE_FLAG,
  SIGN_TYPE_CD AS SIGN_TYPE_CD,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  INIT_MKDN_DT AS INIT_MKDN_DT,
  DISC_START_DT AS DISC_START_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  FIRST_SALE_DT AS FIRST_SALE_DT,
  LAST_SALE_DT AS LAST_SALE_DT,
  FIRST_INV_DT AS FIRST_INV_DT,
  LAST_INV_DT AS LAST_INV_DT,
  LOAD_DT AS LOAD_DT,
  BASE_NBR AS BASE_NBR,
  BP_COLOR_ID AS BP_COLOR_ID,
  BP_SIZE_ID AS BP_SIZE_ID,
  BP_BREED_ID AS BP_BREED_ID,
  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  RTV_DEPT_CD AS RTV_DEPT_CD,
  GL_ACCT_NBR AS GL_ACCT_NBR,
  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  COMPONENT_FLAG AS COMPONENT_FLAG,
  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  ZDISCO_PID_DT AS ZDISCO_PID_DT,
  ZDISCO_START_DT AS ZDISCO_START_DT,
  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  ZDISCO_DC_DT AS ZDISCO_DC_DT,
  ZDISCO_STR_DT AS ZDISCO_STR_DT,
  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT
FROM
  SKU_PROFILE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_To_SKU_PROFILE_0")

# COMMAND ----------
# DBTITLE 1, SQ_Sku_Profile_1


query_1 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  SKU_TYPE AS SKU_TYPE,
  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  STATUS_ID AS STATUS_ID,
  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SKU_DESC AS SKU_DESC,
  ALT_DESC AS ALT_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  COUNTRY_CD AS COUNTRY_CD,
  IMPORT_FLAG AS IMPORT_FLAG,
  HTS_CODE_ID AS HTS_CODE_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SIZE_DESC AS SIZE_DESC,
  BUM_QTY AS BUM_QTY,
  UOM_CD AS UOM_CD,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  BUYER_ID AS BUYER_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_COST_AMT AS PURCH_COST_AMT,
  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  BRAND_CD AS BRAND_CD,
  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  STATELINE_FLAG AS STATELINE_FLAG,
  SIGN_TYPE_CD AS SIGN_TYPE_CD,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  INIT_MKDN_DT AS INIT_MKDN_DT,
  DISC_START_DT AS DISC_START_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  FIRST_SALE_DT AS FIRST_SALE_DT,
  LAST_SALE_DT AS LAST_SALE_DT,
  FIRST_INV_DT AS FIRST_INV_DT,
  LAST_INV_DT AS LAST_INV_DT,
  LOAD_DT AS LOAD_DT,
  BASE_NBR AS BASE_NBR,
  BP_COLOR_ID AS BP_COLOR_ID,
  BP_SIZE_ID AS BP_SIZE_ID,
  BP_BREED_ID AS BP_BREED_ID,
  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  RTV_DEPT_CD AS RTV_DEPT_CD,
  GL_ACCT_NBR AS GL_ACCT_NBR,
  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  COMPONENT_FLAG AS COMPONENT_FLAG,
  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  ZDISCO_PID_DT AS ZDISCO_PID_DT,
  ZDISCO_START_DT AS ZDISCO_START_DT,
  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  ZDISCO_DC_DT AS ZDISCO_DC_DT,
  ZDISCO_STR_DT AS ZDISCO_STR_DT,
  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_To_SKU_PROFILE_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Sku_Profile_1")

# COMMAND ----------
# DBTITLE 1, LKp_Status_2


query_2 = f"""SELECT
  SS.STATUS_NAME AS STATUS_NAME,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN SKU_STATUS SS ON SS.STATUS_ID = SSP1.STATUS_ID"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("LKp_Status_2")

# COMMAND ----------
# DBTITLE 1, LKp_SAP_Division_3


query_3 = f"""SELECT
  SD.SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN SAP_DIVISION SD ON SD.SAP_DIVISION_ID = SSP1.SAP_DIVISION_ID"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("LKp_SAP_Division_3")

# COMMAND ----------
# DBTITLE 1, LKp_SAP_Department_4


query_4 = f"""SELECT
  SD.SAP_DEPT_DESC AS SAP_DEPT_DESC,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN SAP_DEPT SD ON SD.SAP_DEPT_ID = SSP1.SAP_DEPT_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("LKp_SAP_Department_4")

# COMMAND ----------
# DBTITLE 1, LKp_SAP_Class_5


query_5 = f"""SELECT
  SC.SAP_CLASS_DESC AS SAP_CLASS_DESC,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN SAP_CLASS SC ON SC.SAP_CLASS_ID = SSP1.SAP_CLASS_ID"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("LKp_SAP_Class_5")

# COMMAND ----------
# DBTITLE 1, Lkp_Primary_vendor_6


query_6 = f"""SELECT
  PV.PRIMARY_VENDOR_NAME AS PRIMARY_VENDOR_NAME,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN PRIMARY_VENDOR PV ON PV.PRIMARY_VENDOR_ID = SSP1.PRIMARY_VENDOR_ID"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("Lkp_Primary_vendor_6")

# COMMAND ----------
# DBTITLE 1, Lkp_Sku_Uom_7


query_7 = f"""SELECT
  SU.WIDTH_AMT AS WIDTH_AMT,
  SU.WEIGHT_GROSS_AMT AS WEIGHT_GROSS_AMT,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN SKU_UOM SU ON SU.PRODUCT_ID = SSP1.PRODUCT_ID
  AND SU.UOM_CD = SSP1.UOM_CD
  AND SU.WEIGHT_UOM_CD = SSP1.WEIGHT_UOM_CD"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("Lkp_Sku_Uom_7")

# COMMAND ----------
# DBTITLE 1, Lkp_SAP_Category_8


query_8 = f"""SELECT
  SC.SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN SAP_CATEGORY SC ON SC.SAP_CATEGORY_ID = SSP1.SAP_CATEGORY_ID"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("Lkp_SAP_Category_8")

# COMMAND ----------
# DBTITLE 1, Lkp_Purch_Group_9


query_9 = f"""SELECT
  PG.PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
  SSP1.PURCH_GROUP_ID AS PURCH_GROUP_ID1,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN PURCH_GROUP PG ON PG.PURCH_GROUP_ID = SSP1.PURCH_GROUP_ID"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("Lkp_Purch_Group_9")

# COMMAND ----------
# DBTITLE 1, Lkp_HTS_10


query_10 = f"""SELECT
  H.HTS_CODE_DESC AS HTS_CODE_DESC,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN HTS H ON H.HTS_CODE_ID = SSP1.HTS_CODE_ID"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("Lkp_HTS_10")

# COMMAND ----------
# DBTITLE 1, Lkp_Country_11


query_11 = f"""SELECT
  C.COUNTRY_NAME AS COUNTRY_NAME,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN COUNTRY C ON C.COUNTRY_CD = SSP1.COUNTRY_CD"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("Lkp_Country_11")

# COMMAND ----------
# DBTITLE 1, Lkp_Buyer_12


query_12 = f"""SELECT
  B.BUYER_NAME AS BUYER_NAME,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN BUYER B ON B.BUYER_ID = SSP1.BUYER_ID"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("Lkp_Buyer_12")

# COMMAND ----------
# DBTITLE 1, LKP_Brand_13


query_13 = f"""SELECT
  B.BRAND_NAME AS BRAND_NAME,
  SSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Sku_Profile_1 SSP1
  LEFT JOIN BRAND B ON B.BRAND_CD = SSP1.BRAND_CD"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("LKP_Brand_13")

# COMMAND ----------
# DBTITLE 1, Exp_PRODUCT_14


query_14 = f"""SELECT
  SSP1.PRODUCT_ID AS PRODUCT_ID,
  SSP1.ALT_DESC AS ALT_DESC,
  LB1.BRAND_NAME AS BRAND_NAME,
  SSP1.BUM_QTY AS BUM_QTY,
  SSP1.BUYER_ID AS BUYER_ID,
  LB1.BUYER_NAME AS BUYER_NAME,
  LC1.COUNTRY_NAME AS CTRY_ORIGIN,
  SSP1.DISC_START_DT AS DATE_DISC_START,
  SSP1.FIRST_INV_DT AS DATE_FIRST_INV,
  SSP1.FIRST_SALE_DT AS DATE_FIRST_SALE,
  SSP1.LAST_INV_DT AS DATE_LAST_INV,
  SSP1.LAST_SALE_DT AS DATE_LAST_SALE,
  SSP1.ADD_DT AS DATE_PROD_ADDED,
  SSP1.DELETE_DT AS DATE_PROD_DELETED,
  SSP1.UPDATE_DT AS DATE_PROD_REFRESHED,
  SSP1.HTS_CODE_ID AS HTS_CODE,
  LH1.HTS_CODE_DESC AS HTS_DESC,
  SSP1.IMPORT_FLAG AS IMPORT_FLAG,
  SSP1.OWNBRAND_FLAG AS OWNBRAND_FLAG,
  SSP1.PRIMARY_UPC_ID AS PRIMARY_UPC,
  SSP1.PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  SSP1.PURCH_GROUP_ID AS PURCH_GROUP_ID,
  LPG9.PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
  LSC8.SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
  SSP1.SAP_CLASS_ID AS SAP_CLASS_ID,
  SSP1.SAP_DEPT_ID AS SAP_DEPT_ID,
  SSP1.SAP_DIVISION_ID AS SAP_DIVISION_ID,
  SSP1.CONTENTS AS CONTENTS,
  SSP1.CONTENTS_UNITS AS CONTENTS_UNITS,
  SSP1.SKU_DESC AS SKU_DESC,
  SSP1.SKU_NBR AS SKU_NBR,
  SSP1.STATELINE_FLAG AS STATELINE_FLAG,
  SSP1.PURCH_COST_AMT AS SUM_COST_NTL,
  SSP1.NAT_PRICE_CA_AMT AS SUM_RETAIL_NTL,
  IFF(
    LSU7.WEIGHT_GROSS_AMT > 999999.999,
    999999.999,
    LSU7.WEIGHT_GROSS_AMT
  ) AS WEIGHT_GROSS,
  SSP1.WEIGHT_NET_AMT AS WEIGHT_NET,
  SSP1.WEIGHT_UOM_CD AS WEIGHT_UNITS,
  LSU7.WIDTH_AMT AS WIDTH,
  SSP1.VENDOR_ARTICLE_NBR AS VENDOR_STYLE_NBR,
  LPv6.PRIMARY_VENDOR_NAME AS PRIMARY_VENDOR_NAME,
  SSP1.SIZE_DESC AS PRODUCT_SIZE,
  SSP1.INIT_MKDN_DT AS DATE_INIT_MKDN,
  LSC5.SAP_CLASS_DESC AS SAP_CLASS_DESC,
  LSD4.SAP_DEPT_DESC AS SAP_DEPT_DESC,
  LSD3.SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
  SSP1.SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SSP1.STATUS_ID AS STATUS_ID,
  LS2.STATUS_NAME AS STATUS_NAME,
  SSP1.OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  SSP1.TAX_CLASS_ID AS TAX_CLASS_ID,
  IFF(
    ISNULL(SSP1.ARTICLE_CATEGORY_ID),
    0,
    SSP1.ARTICLE_CATEGORY_ID
  ) AS ARTICLE_CATEGORY_ID1,
  0 AS PLAN_GROUP_ID,
  LB1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_Brand_13 LB1
  INNER JOIN SQ_Sku_Profile_1 SSP1 ON LB1.Monotonically_Increasing_Id = SSP1.Monotonically_Increasing_Id
  INNER JOIN Lkp_Buyer_12 LB1 ON SSP1.Monotonically_Increasing_Id = LB1.Monotonically_Increasing_Id
  INNER JOIN Lkp_Country_11 LC1 ON LB1.Monotonically_Increasing_Id = LC1.Monotonically_Increasing_Id
  INNER JOIN Lkp_HTS_10 LH1 ON LC1.Monotonically_Increasing_Id = LH1.Monotonically_Increasing_Id
  INNER JOIN Lkp_Purch_Group_9 LPG9 ON LH1.Monotonically_Increasing_Id = LPG9.Monotonically_Increasing_Id
  INNER JOIN Lkp_SAP_Category_8 LSC8 ON LPG9.Monotonically_Increasing_Id = LSC8.Monotonically_Increasing_Id
  INNER JOIN Lkp_Sku_Uom_7 LSU7 ON LSC8.Monotonically_Increasing_Id = LSU7.Monotonically_Increasing_Id
  INNER JOIN Lkp_Primary_vendor_6 LPv6 ON LSU7.Monotonically_Increasing_Id = LPv6.Monotonically_Increasing_Id
  INNER JOIN LKp_SAP_Class_5 LSC5 ON LPv6.Monotonically_Increasing_Id = LSC5.Monotonically_Increasing_Id
  INNER JOIN LKp_SAP_Department_4 LSD4 ON LSC5.Monotonically_Increasing_Id = LSD4.Monotonically_Increasing_Id
  INNER JOIN LKp_SAP_Division_3 LSD3 ON LSD4.Monotonically_Increasing_Id = LSD3.Monotonically_Increasing_Id
  INNER JOIN LKp_Status_2 LS2 ON LSD3.Monotonically_Increasing_Id = LS2.Monotonically_Increasing_Id"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("Exp_PRODUCT_14")

# COMMAND ----------
# DBTITLE 1, UPS_Product_15


query_15 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  ALT_DESC AS ALT_DESC,
  BRAND_NAME AS BRAND_NAME,
  BUM_QTY AS BUM_QTY,
  BUYER_ID AS BUYER_ID,
  BUYER_NAME AS BUYER_NAME,
  CTRY_ORIGIN AS CTRY_ORIGIN,
  DATE_DISC_START AS DATE_DISC_START,
  DATE_FIRST_INV AS DATE_FIRST_INV,
  DATE_FIRST_SALE AS DATE_FIRST_SALE,
  DATE_LAST_INV AS DATE_LAST_INV,
  DATE_LAST_SALE AS DATE_LAST_SALE,
  DATE_PROD_ADDED AS DATE_PROD_ADDED,
  DATE_PROD_DELETED AS DATE_PROD_DELETED,
  DATE_PROD_REFRESHED AS DATE_PROD_REFRESHED,
  HTS_CODE AS HTS_CODE,
  HTS_DESC AS HTS_DESC,
  IMPORT_FLAG AS IMPORT_FLAG,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  PRIMARY_UPC AS PRIMARY_UPC,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
  SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  SKU_DESC AS SKU_DESC,
  SKU_NBR AS SKU_NBR,
  STATELINE_FLAG AS STATELINE_FLAG,
  SUM_COST_NTL AS SUM_COST_NTL,
  SUM_RETAIL_NTL AS SUM_RETAIL_NTL,
  NULL AS WEIGHT_GROSS_AMT,
  WEIGHT_GROSS AS WEIGHT_GROSS,
  WEIGHT_NET AS WEIGHT_NET,
  WEIGHT_UNITS AS WEIGHT_UNITS,
  WIDTH AS WIDTH,
  VENDOR_STYLE_NBR AS VENDOR_STYLE_NBR,
  PRIMARY_VENDOR_NAME AS PRIMARY_VENDOR_NAME,
  PRODUCT_SIZE AS PRODUCT_SIZE,
  DATE_INIT_MKDN AS DATE_INIT_MKDN,
  SAP_CLASS_DESC AS SAP_CLASS_DESC,
  SAP_DEPT_DESC AS SAP_DEPT_DESC,
  SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  STATUS_ID AS STATUS_ID,
  STATUS_NAME AS STATUS_NAME,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  ARTICLE_CATEGORY_ID1 AS ARTICLE_CATEGORY_ID,
  PLAN_GROUP_ID AS PLAN_GROUP_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  'DD_UPDATE' --IFF(ISNULL(:LKP.LKP_PRODUCT(PRODUCT_ID)), 'DD_INSERT', 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG FROM Exp_PRODUCT_14"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("UPS_Product_15")

# COMMAND ----------
# DBTITLE 1, PRODUCT


spark.sql("""MERGE INTO PRODUCT AS TARGET
USING
  UPS_Product_15 AS SOURCE ON TARGET.PRODUCT_ID = SOURCE.PRODUCT_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.PRODUCT_ID = SOURCE.PRODUCT_ID,
  TARGET.ALT_DESC = SOURCE.ALT_DESC,
  TARGET.BRAND_NAME = SOURCE.BRAND_NAME,
  TARGET.BUM_QTY = SOURCE.BUM_QTY,
  TARGET.BUYER_ID = SOURCE.BUYER_ID,
  TARGET.BUYER_NAME = SOURCE.BUYER_NAME,
  TARGET.CTRY_ORIGIN = SOURCE.CTRY_ORIGIN,
  TARGET.DATE_DISC_START = SOURCE.DATE_DISC_START,
  TARGET.DATE_FIRST_INV = SOURCE.DATE_FIRST_INV,
  TARGET.DATE_FIRST_SALE = SOURCE.DATE_FIRST_SALE,
  TARGET.DATE_LAST_INV = SOURCE.DATE_LAST_INV,
  TARGET.DATE_LAST_SALE = SOURCE.DATE_LAST_SALE,
  TARGET.DATE_PROD_ADDED = SOURCE.DATE_PROD_ADDED,
  TARGET.DATE_PROD_DELETED = SOURCE.DATE_PROD_DELETED,
  TARGET.DATE_PROD_REFRESHED = SOURCE.DATE_PROD_REFRESHED,
  TARGET.HTS_CODE = SOURCE.HTS_CODE,
  TARGET.HTS_DESC = SOURCE.HTS_DESC,
  TARGET.IMPORT_FLAG = SOURCE.IMPORT_FLAG,
  TARGET.OWNBRAND_FLAG = SOURCE.OWNBRAND_FLAG,
  TARGET.PRIMARY_UPC = SOURCE.PRIMARY_UPC,
  TARGET.PRIMARY_VENDOR_ID = SOURCE.PRIMARY_VENDOR_ID,
  TARGET.PURCH_GROUP_ID = SOURCE.PURCH_GROUP_ID,
  TARGET.PURCH_GROUP_NAME = SOURCE.PURCH_GROUP_NAME,
  TARGET.SAP_CATEGORY_DESC = SOURCE.SAP_CATEGORY_DESC,
  TARGET.SAP_CLASS_ID = SOURCE.SAP_CLASS_ID,
  TARGET.SAP_DEPT_ID = SOURCE.SAP_DEPT_ID,
  TARGET.SAP_DIVISION_ID = SOURCE.SAP_DIVISION_ID,
  TARGET.CONTENTS = SOURCE.CONTENTS,
  TARGET.CONTENTS_UNITS = SOURCE.CONTENTS_UNITS,
  TARGET.SKU_DESC = SOURCE.SKU_DESC,
  TARGET.SKU_NBR = SOURCE.SKU_NBR,
  TARGET.STATELINE_FLAG = SOURCE.STATELINE_FLAG,
  TARGET.SUM_COST_NTL = SOURCE.SUM_COST_NTL,
  TARGET.SUM_RETAIL_NTL = SOURCE.SUM_RETAIL_NTL,
  TARGET.WEIGHT_GROSS = SOURCE.WEIGHT_GROSS,
  TARGET.WEIGHT_NET = SOURCE.WEIGHT_NET,
  TARGET.WEIGHT_UNITS = SOURCE.WEIGHT_UNITS,
  TARGET.WIDTH = SOURCE.WIDTH,
  TARGET.CATEGORY_ID = SOURCE.ARTICLE_CATEGORY_ID,
  TARGET.VENDOR_STYLE_NBR = SOURCE.VENDOR_STYLE_NBR,
  TARGET.PRIMARY_VENDOR_NAME = SOURCE.PRIMARY_VENDOR_NAME,
  TARGET.PRODUCT_SIZE = SOURCE.PRODUCT_SIZE,
  TARGET.DATE_INIT_MKDN = SOURCE.DATE_INIT_MKDN,
  TARGET.SAP_CLASS_DESC = SOURCE.SAP_CLASS_DESC,
  TARGET.SAP_DEPT_DESC = SOURCE.SAP_DEPT_DESC,
  TARGET.SAP_DIVISION_DESC = SOURCE.SAP_DIVISION_DESC,
  TARGET.SAP_CATEGORY_ID = SOURCE.SAP_CATEGORY_ID,
  TARGET.PLAN_GROUP_ID = SOURCE.PLAN_GROUP_ID,
  TARGET.STATUS_ID = SOURCE.STATUS_ID,
  TARGET.STATUS_NAME = SOURCE.STATUS_NAME,
  TARGET.OLD_ARTICLE_NBR = SOURCE.OLD_ARTICLE_NBR,
  TARGET.TAX_CLASS_ID = SOURCE.TAX_CLASS_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.ALT_DESC = SOURCE.ALT_DESC
  AND TARGET.BRAND_NAME = SOURCE.BRAND_NAME
  AND TARGET.BUM_QTY = SOURCE.BUM_QTY
  AND TARGET.BUYER_ID = SOURCE.BUYER_ID
  AND TARGET.BUYER_NAME = SOURCE.BUYER_NAME
  AND TARGET.CTRY_ORIGIN = SOURCE.CTRY_ORIGIN
  AND TARGET.DATE_DISC_START = SOURCE.DATE_DISC_START
  AND TARGET.DATE_FIRST_INV = SOURCE.DATE_FIRST_INV
  AND TARGET.DATE_FIRST_SALE = SOURCE.DATE_FIRST_SALE
  AND TARGET.DATE_LAST_INV = SOURCE.DATE_LAST_INV
  AND TARGET.DATE_LAST_SALE = SOURCE.DATE_LAST_SALE
  AND TARGET.DATE_PROD_ADDED = SOURCE.DATE_PROD_ADDED
  AND TARGET.DATE_PROD_DELETED = SOURCE.DATE_PROD_DELETED
  AND TARGET.DATE_PROD_REFRESHED = SOURCE.DATE_PROD_REFRESHED
  AND TARGET.HTS_CODE = SOURCE.HTS_CODE
  AND TARGET.HTS_DESC = SOURCE.HTS_DESC
  AND TARGET.IMPORT_FLAG = SOURCE.IMPORT_FLAG
  AND TARGET.OWNBRAND_FLAG = SOURCE.OWNBRAND_FLAG
  AND TARGET.PRIMARY_UPC = SOURCE.PRIMARY_UPC
  AND TARGET.PRIMARY_VENDOR_ID = SOURCE.PRIMARY_VENDOR_ID
  AND TARGET.PURCH_GROUP_ID = SOURCE.PURCH_GROUP_ID
  AND TARGET.PURCH_GROUP_NAME = SOURCE.PURCH_GROUP_NAME
  AND TARGET.SAP_CATEGORY_DESC = SOURCE.SAP_CATEGORY_DESC
  AND TARGET.SAP_CLASS_ID = SOURCE.SAP_CLASS_ID
  AND TARGET.SAP_DEPT_ID = SOURCE.SAP_DEPT_ID
  AND TARGET.SAP_DIVISION_ID = SOURCE.SAP_DIVISION_ID
  AND TARGET.CONTENTS = SOURCE.CONTENTS
  AND TARGET.CONTENTS_UNITS = SOURCE.CONTENTS_UNITS
  AND TARGET.SKU_DESC = SOURCE.SKU_DESC
  AND TARGET.SKU_NBR = SOURCE.SKU_NBR
  AND TARGET.STATELINE_FLAG = SOURCE.STATELINE_FLAG
  AND TARGET.SUM_COST_NTL = SOURCE.SUM_COST_NTL
  AND TARGET.SUM_RETAIL_NTL = SOURCE.SUM_RETAIL_NTL
  AND TARGET.WEIGHT_GROSS = SOURCE.WEIGHT_GROSS
  AND TARGET.WEIGHT_NET = SOURCE.WEIGHT_NET
  AND TARGET.WEIGHT_UNITS = SOURCE.WEIGHT_UNITS
  AND TARGET.WIDTH = SOURCE.WIDTH
  AND TARGET.CATEGORY_ID = SOURCE.ARTICLE_CATEGORY_ID
  AND TARGET.VENDOR_STYLE_NBR = SOURCE.VENDOR_STYLE_NBR
  AND TARGET.PRIMARY_VENDOR_NAME = SOURCE.PRIMARY_VENDOR_NAME
  AND TARGET.PRODUCT_SIZE = SOURCE.PRODUCT_SIZE
  AND TARGET.DATE_INIT_MKDN = SOURCE.DATE_INIT_MKDN
  AND TARGET.SAP_CLASS_DESC = SOURCE.SAP_CLASS_DESC
  AND TARGET.SAP_DEPT_DESC = SOURCE.SAP_DEPT_DESC
  AND TARGET.SAP_DIVISION_DESC = SOURCE.SAP_DIVISION_DESC
  AND TARGET.SAP_CATEGORY_ID = SOURCE.SAP_CATEGORY_ID
  AND TARGET.PLAN_GROUP_ID = SOURCE.PLAN_GROUP_ID
  AND TARGET.STATUS_ID = SOURCE.STATUS_ID
  AND TARGET.STATUS_NAME = SOURCE.STATUS_NAME
  AND TARGET.OLD_ARTICLE_NBR = SOURCE.OLD_ARTICLE_NBR
  AND TARGET.TAX_CLASS_ID = SOURCE.TAX_CLASS_ID THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.PRODUCT_ID,
    TARGET.ALT_DESC,
    TARGET.BRAND_NAME,
    TARGET.BUM_QTY,
    TARGET.BUYER_ID,
    TARGET.BUYER_NAME,
    TARGET.CTRY_ORIGIN,
    TARGET.DATE_DISC_START,
    TARGET.DATE_FIRST_INV,
    TARGET.DATE_FIRST_SALE,
    TARGET.DATE_LAST_INV,
    TARGET.DATE_LAST_SALE,
    TARGET.DATE_PROD_ADDED,
    TARGET.DATE_PROD_DELETED,
    TARGET.DATE_PROD_REFRESHED,
    TARGET.HTS_CODE,
    TARGET.HTS_DESC,
    TARGET.IMPORT_FLAG,
    TARGET.OWNBRAND_FLAG,
    TARGET.PRIMARY_UPC,
    TARGET.PRIMARY_VENDOR_ID,
    TARGET.PURCH_GROUP_ID,
    TARGET.PURCH_GROUP_NAME,
    TARGET.SAP_CATEGORY_DESC,
    TARGET.SAP_CLASS_ID,
    TARGET.SAP_DEPT_ID,
    TARGET.SAP_DIVISION_ID,
    TARGET.CONTENTS,
    TARGET.CONTENTS_UNITS,
    TARGET.SKU_DESC,
    TARGET.SKU_NBR,
    TARGET.STATELINE_FLAG,
    TARGET.SUM_COST_NTL,
    TARGET.SUM_RETAIL_NTL,
    TARGET.WEIGHT_GROSS,
    TARGET.WEIGHT_NET,
    TARGET.WEIGHT_UNITS,
    TARGET.WIDTH,
    TARGET.CATEGORY_ID,
    TARGET.VENDOR_STYLE_NBR,
    TARGET.PRIMARY_VENDOR_NAME,
    TARGET.PRODUCT_SIZE,
    TARGET.DATE_INIT_MKDN,
    TARGET.SAP_CLASS_DESC,
    TARGET.SAP_DEPT_DESC,
    TARGET.SAP_DIVISION_DESC,
    TARGET.SAP_CATEGORY_ID,
    TARGET.PLAN_GROUP_ID,
    TARGET.STATUS_ID,
    TARGET.STATUS_NAME,
    TARGET.OLD_ARTICLE_NBR,
    TARGET.TAX_CLASS_ID
  )
VALUES
  (
    SOURCE.PRODUCT_ID,
    SOURCE.ALT_DESC,
    SOURCE.BRAND_NAME,
    SOURCE.BUM_QTY,
    SOURCE.BUYER_ID,
    SOURCE.BUYER_NAME,
    SOURCE.CTRY_ORIGIN,
    SOURCE.DATE_DISC_START,
    SOURCE.DATE_FIRST_INV,
    SOURCE.DATE_FIRST_SALE,
    SOURCE.DATE_LAST_INV,
    SOURCE.DATE_LAST_SALE,
    SOURCE.DATE_PROD_ADDED,
    SOURCE.DATE_PROD_DELETED,
    SOURCE.DATE_PROD_REFRESHED,
    SOURCE.HTS_CODE,
    SOURCE.HTS_DESC,
    SOURCE.IMPORT_FLAG,
    SOURCE.OWNBRAND_FLAG,
    SOURCE.PRIMARY_UPC,
    SOURCE.PRIMARY_VENDOR_ID,
    SOURCE.PURCH_GROUP_ID,
    SOURCE.PURCH_GROUP_NAME,
    SOURCE.SAP_CATEGORY_DESC,
    SOURCE.SAP_CLASS_ID,
    SOURCE.SAP_DEPT_ID,
    SOURCE.SAP_DIVISION_ID,
    SOURCE.CONTENTS,
    SOURCE.CONTENTS_UNITS,
    SOURCE.SKU_DESC,
    SOURCE.SKU_NBR,
    SOURCE.STATELINE_FLAG,
    SOURCE.SUM_COST_NTL,
    SOURCE.SUM_RETAIL_NTL,
    SOURCE.WEIGHT_GROSS,
    SOURCE.WEIGHT_NET,
    SOURCE.WEIGHT_UNITS,
    SOURCE.WIDTH,
    SOURCE.ARTICLE_CATEGORY_ID,
    SOURCE.VENDOR_STYLE_NBR,
    SOURCE.PRIMARY_VENDOR_NAME,
    SOURCE.PRODUCT_SIZE,
    SOURCE.DATE_INIT_MKDN,
    SOURCE.SAP_CLASS_DESC,
    SOURCE.SAP_DEPT_DESC,
    SOURCE.SAP_DIVISION_DESC,
    SOURCE.SAP_CATEGORY_ID,
    SOURCE.PLAN_GROUP_ID,
    SOURCE.STATUS_ID,
    SOURCE.STATUS_NAME,
    SOURCE.OLD_ARTICLE_NBR,
    SOURCE.TAX_CLASS_ID
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_sku_profile_to_product")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_sku_profile_to_product", mainWorkflowId, parentName)
