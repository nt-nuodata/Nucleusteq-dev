# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_Nz2Ora_sku_profile")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_Nz2Ora_sku_profile", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, TRUNC_PROD_TABLES


Stored Procedure Transformation not supported

# COMMAND ----------
# DBTITLE 1, Shortcut_To_SKU_PROFILE_0


query_0 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  SKU_TYPE AS SKU_TYPE,
  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  STATUS_ID AS STATUS_ID,
  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SKU_DESC AS SKU_DESC,
  ALT_DESC AS ALT_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  COUNTRY_CD AS COUNTRY_CD,
  IMPORT_FLAG AS IMPORT_FLAG,
  HTS_CODE_ID AS HTS_CODE_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SIZE_DESC AS SIZE_DESC,
  BUM_QTY AS BUM_QTY,
  UOM_CD AS UOM_CD,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  BUYER_ID AS BUYER_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_COST_AMT AS PURCH_COST_AMT,
  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  BRAND_CD AS BRAND_CD,
  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  STATELINE_FLAG AS STATELINE_FLAG,
  SIGN_TYPE_CD AS SIGN_TYPE_CD,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  INIT_MKDN_DT AS INIT_MKDN_DT,
  DISC_START_DT AS DISC_START_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  FIRST_SALE_DT AS FIRST_SALE_DT,
  LAST_SALE_DT AS LAST_SALE_DT,
  FIRST_INV_DT AS FIRST_INV_DT,
  LAST_INV_DT AS LAST_INV_DT,
  LOAD_DT AS LOAD_DT,
  BASE_NBR AS BASE_NBR,
  BP_COLOR_ID AS BP_COLOR_ID,
  BP_SIZE_ID AS BP_SIZE_ID,
  BP_BREED_ID AS BP_BREED_ID,
  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  RTV_DEPT_CD AS RTV_DEPT_CD,
  GL_ACCT_NBR AS GL_ACCT_NBR,
  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  COMPONENT_FLAG AS COMPONENT_FLAG,
  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  ZDISCO_PID_DT AS ZDISCO_PID_DT,
  ZDISCO_START_DT AS ZDISCO_START_DT,
  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  ZDISCO_DC_DT AS ZDISCO_DC_DT,
  ZDISCO_STR_DT AS ZDISCO_STR_DT,
  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT
FROM
  SKU_PROFILE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_To_SKU_PROFILE_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_SKU_PROFILE_1


query_1 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  SKU_TYPE AS SKU_TYPE,
  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  STATUS_ID AS STATUS_ID,
  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SKU_DESC AS SKU_DESC,
  ALT_DESC AS ALT_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  COUNTRY_CD AS COUNTRY_CD,
  IMPORT_FLAG AS IMPORT_FLAG,
  HTS_CODE_ID AS HTS_CODE_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SIZE_DESC AS SIZE_DESC,
  BUM_QTY AS BUM_QTY,
  UOM_CD AS UOM_CD,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  BUYER_ID AS BUYER_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_COST_AMT AS PURCH_COST_AMT,
  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  BRAND_CD AS BRAND_CD,
  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  STATELINE_FLAG AS STATELINE_FLAG,
  SIGN_TYPE_CD AS SIGN_TYPE_CD,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  INIT_MKDN_DT AS INIT_MKDN_DT,
  DISC_START_DT AS DISC_START_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  FIRST_SALE_DT AS FIRST_SALE_DT,
  LAST_SALE_DT AS LAST_SALE_DT,
  FIRST_INV_DT AS FIRST_INV_DT,
  LAST_INV_DT AS LAST_INV_DT,
  LOAD_DT AS LOAD_DT,
  BASE_NBR AS BASE_NBR,
  BP_COLOR_ID AS BP_COLOR_ID,
  BP_SIZE_ID AS BP_SIZE_ID,
  BP_BREED_ID AS BP_BREED_ID,
  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  RTV_DEPT_CD AS RTV_DEPT_CD,
  GL_ACCT_NBR AS GL_ACCT_NBR,
  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  COMPONENT_FLAG AS COMPONENT_FLAG,
  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  ZDISCO_PID_DT AS ZDISCO_PID_DT,
  ZDISCO_START_DT AS ZDISCO_START_DT,
  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  ZDISCO_DC_DT AS ZDISCO_DC_DT,
  ZDISCO_STR_DT AS ZDISCO_STR_DT,
  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_To_SKU_PROFILE_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_SKU_PROFILE_1")

# COMMAND ----------
# DBTITLE 1, Lkp_Brand_2


query_2 = f"""SELECT
  B.BRAND_NAME AS BRAND_NAME,
  SStSP1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_SKU_PROFILE_1 SStSP1
  LEFT JOIN (
    SELECT
      BRAND.BRAND_NAME as BRAND_NAME,
      BRAND.BRAND_CD as BRAND_CD
    FROM
      BRAND
    WHERE
      BRAND.DELETE_FLAG = 0
  ) AS B ON B.BRAND_CD = SStSP1.BRAND_CD"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Lkp_Brand_2")

# COMMAND ----------
# DBTITLE 1, SKU_PROFILE


spark.sql("""INSERT INTO
  SKU_PROFILE
SELECT
  SStSP1.PRODUCT_ID AS PRODUCT_ID,
  SStSP1.SKU_NBR AS SKU_NBR,
  SStSP1.SKU_TYPE AS SKU_TYPE,
  SStSP1.PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  SStSP1.STATUS_ID AS STATUS_ID,
  SStSP1.SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SStSP1.SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SStSP1.SKU_DESC AS SKU_DESC,
  SStSP1.ALT_DESC AS ALT_DESC,
  SStSP1.SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SStSP1.SAP_CLASS_ID AS SAP_CLASS_ID,
  SStSP1.SAP_DEPT_ID AS SAP_DEPT_ID,
  SStSP1.SAP_DIVISION_ID AS SAP_DIVISION_ID,
  SStSP1.PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  SStSP1.PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  SStSP1.COUNTRY_CD AS COUNTRY_CD,
  SStSP1.IMPORT_FLAG AS IMPORT_FLAG,
  SStSP1.HTS_CODE_ID AS HTS_CODE_ID,
  SStSP1.CONTENTS AS CONTENTS,
  SStSP1.CONTENTS_UNITS AS CONTENTS_UNITS,
  SStSP1.WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  SStSP1.WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SStSP1.SIZE_DESC AS SIZE_DESC,
  SStSP1.BUM_QTY AS BUM_QTY,
  SStSP1.UOM_CD AS UOM_CD,
  SStSP1.UNIT_NUMERATOR AS UNIT_NUMERATOR,
  SStSP1.UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  SStSP1.BUYER_ID AS BUYER_ID,
  SStSP1.PURCH_GROUP_ID AS PURCH_GROUP_ID,
  SStSP1.PURCH_COST_AMT AS PURCH_COST_AMT,
  SStSP1.NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  SStSP1.TAX_CLASS_ID AS TAX_CLASS_ID,
  SStSP1.VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  LB2.BRAND_NAME AS BRAND_NAME,
  SStSP1.OWNBRAND_FLAG AS OWNBRAND_FLAG,
  SStSP1.STATELINE_FLAG AS STATELINE_FLAG,
  SStSP1.SIGN_TYPE_CD AS SIGN_TYPE_CD,
  SStSP1.OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  SStSP1.VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  SStSP1.INIT_MKDN_DT AS INIT_MKDN_DT,
  SStSP1.DISC_START_DT AS DISC_START_DT,
  SStSP1.ADD_DT AS ADD_DT,
  SStSP1.DELETE_DT AS DELETE_DT,
  SStSP1.UPDATE_DT AS UPDATE_DT,
  SStSP1.FIRST_SALE_DT AS FIRST_SALE_DT,
  SStSP1.LAST_SALE_DT AS LAST_SALE_DT,
  SStSP1.FIRST_INV_DT AS FIRST_INV_DT,
  SStSP1.LAST_INV_DT AS LAST_INV_DT,
  SStSP1.LOAD_DT AS LOAD_DT,
  SStSP1.BASE_NBR AS BASE_NBR,
  SStSP1.BP_COLOR_ID AS BP_COLOR_ID,
  SStSP1.BP_SIZE_ID AS BP_SIZE_ID,
  SStSP1.BP_BREED_ID AS BP_BREED_ID,
  SStSP1.BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  SStSP1.BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  SStSP1.BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  SStSP1.CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  SStSP1.NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  SStSP1.NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  SStSP1.RTV_DEPT_CD AS RTV_DEPT_CD,
  SStSP1.GL_ACCT_NBR AS GL_ACCT_NBR,
  SStSP1.ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  SStSP1.COMPONENT_FLAG AS COMPONENT_FLAG,
  SStSP1.ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  SStSP1.ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  SStSP1.ZDISCO_PID_DT AS ZDISCO_PID_DT,
  SStSP1.ZDISCO_START_DT AS ZDISCO_START_DT,
  SStSP1.ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  SStSP1.ZDISCO_DC_DT AS ZDISCO_DC_DT,
  SStSP1.ZDISCO_STR_DT AS ZDISCO_STR_DT,
  SStSP1.ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  SStSP1.ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT
FROM
  SQ_Shortcut_to_SKU_PROFILE_1 SStSP1
  INNER JOIN Lkp_Brand_2 LB2 ON SStSP1.Monotonically_Increasing_Id = LB2.Monotonically_Increasing_Id""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_Nz2Ora_sku_profile")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_Nz2Ora_sku_profile", mainWorkflowId, parentName)
