# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_vendor_profile_rpt")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_vendor_profile_rpt", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_VENDOR_TYPE_0


query_0 = f"""SELECT
  VENDOR_TYPE_ID AS VENDOR_TYPE_ID,
  VENDOR_TYPE_DESC AS VENDOR_TYPE_DESC,
  VENDOR_ACCOUNT_GROUP_CD AS VENDOR_ACCOUNT_GROUP_CD
FROM
  VENDOR_TYPE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_VENDOR_TYPE_0")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_VENDOR_RTV_TYPE_1


query_1 = f"""SELECT
  RTV_TYPE_CD AS RTV_TYPE_CD,
  RTV_TYPE_DESC AS RTV_TYPE_DESC
FROM
  VENDOR_RTV_TYPE"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("Shortcut_to_VENDOR_RTV_TYPE_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_VENDOR_INCO_TERM_2


query_2 = f"""SELECT
  INCO_TERM_CD AS INCO_TERM_CD,
  INCO_TERM_DESC AS INCO_TERM_DESC
FROM
  VENDOR_INCO_TERM"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_VENDOR_INCO_TERM_2")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_VENDOR_PAYMENT_TERM_3


query_3 = f"""SELECT
  PAYMENT_TERM_CD AS PAYMENT_TERM_CD,
  PAYMENT_TERM_DESC AS PAYMENT_TERM_DESC
FROM
  VENDOR_PAYMENT_TERM"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("Shortcut_to_VENDOR_PAYMENT_TERM_3")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DM_PG_MGR_DVL_4


query_4 = f"""SELECT
  MGR_ID AS MGR_ID,
  MGR_DESC AS MGR_DESC,
  DVL_ID AS DVL_ID,
  DVL_DESC AS DVL_DESC,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_GROUP_NAME AS PURCH_GROUP_NAME
FROM
  DM_PG_MGR_DVL"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("Shortcut_to_DM_PG_MGR_DVL_4")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_STATE_5


query_5 = f"""SELECT
  STATE_CD AS STATE_CD,
  STATE_NAME AS STATE_NAME
FROM
  STATE"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("Shortcut_to_STATE_5")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_COUNTRY_6


query_6 = f"""SELECT
  COUNTRY_CD AS COUNTRY_CD,
  COUNTRY_NAME AS COUNTRY_NAME
FROM
  COUNTRY"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("Shortcut_to_COUNTRY_6")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_VENDOR_PROFILE_7


query_7 = f"""SELECT
  VENDOR_ID AS VENDOR_ID,
  VENDOR_NAME AS VENDOR_NAME,
  VENDOR_TYPE_ID AS VENDOR_TYPE_ID,
  VENDOR_NBR AS VENDOR_NBR,
  LOCATION_ID AS LOCATION_ID,
  SUPERIOR_VENDOR_ID AS SUPERIOR_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  PARENT_VENDOR_NAME AS PARENT_VENDOR_NAME,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  EDI_ELIG_FLAG AS EDI_ELIG_FLAG,
  PURCHASE_BLOCK AS PURCHASE_BLOCK,
  POSTING_BLOCK AS POSTING_BLOCK,
  DELETION_FLAG AS DELETION_FLAG,
  VIP_CD AS VIP_CD,
  INACTIVE_FLAG AS INACTIVE_FLAG,
  PAYMENT_TERM_CD AS PAYMENT_TERM_CD,
  INCO_TERM_CD AS INCO_TERM_CD,
  ADDRESS AS ADDRESS,
  CITY AS CITY,
  STATE AS STATE,
  COUNTRY_CD AS COUNTRY_CD,
  ZIP AS ZIP,
  CONTACT AS CONTACT,
  CONTACT_PHONE AS CONTACT_PHONE,
  PHONE AS PHONE,
  PHONE_EXT AS PHONE_EXT,
  FAX AS FAX,
  RTV_ELIG_FLAG AS RTV_ELIG_FLAG,
  RTV_TYPE_CD AS RTV_TYPE_CD,
  RTV_FREIGHT_TYPE_CD AS RTV_FREIGHT_TYPE_CD,
  INDUSTRY_CD AS INDUSTRY_CD,
  LATITUDE AS LATITUDE,
  LONGITUDE AS LONGITUDE,
  TIME_ZONE_ID AS TIME_ZONE_ID,
  ADD_DT AS ADD_DT,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  VENDOR_PROFILE"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("Shortcut_to_VENDOR_PROFILE_7")

# COMMAND ----------
# DBTITLE 1, Shortcut_To_PURCH_GROUP_8


query_8 = f"""SELECT
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
  DVL_MGR_ID AS DVL_MGR_ID,
  REPLEN_MGR_ID AS REPLEN_MGR_ID
FROM
  PURCH_GROUP"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("Shortcut_To_PURCH_GROUP_8")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_VENDOR_PROFILE_9


query_9 = f"""SELECT
  VP.VENDOR_ID AS VENDOR_ID,
  RTRIM(VP.VENDOR_NAME) AS VENDOR_NAME,
  VP.VENDOR_TYPE_ID AS VENDOR_TYPE_ID,
  RTRIM(VT.VENDOR_TYPE_DESC) AS VENDOR_TYPE_DESC,
  VP.VENDOR_NBR AS VENDOR_NBR,
  VP.LOCATION_ID AS LOCATION_ID,
  VP.Superior_vendor_id AS SUPERIOR_VENDOR_ID,
  RTRIM(VP2.VENDOR_NAME) AS VENDOR_NAME1,
  VP2.Vendor_nbr AS VENDOR_NBR1,
  VP.PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  RTRIM(VP.PARENT_VENDOR_NAME) AS PARENT_VENDOR_NAME,
  VP.PURCH_GROUP_ID AS PURCH_GROUP_ID,
  RTRIM(PG.PURCH_GROUP_NAME) AS PURCH_GROUP_NAME,
  DPMV.MGR_ID AS MGR_ID,
  RTRIM(DPMV.MGR_DESC) AS MGR_DESC,
  DPMV.DVL_ID AS DVL_ID,
  RTRIM(DPMV.DVL_DESC) AS DVL_DESC,
  VP.EDI_ELIG_FLAG AS EDI_ELIG_FLAG,
  vp.purchase_block AS PURCHASE_BLOCK,
  vp.posting_block AS POSTING_BLOCK,
  vp.deletion_flag AS DELETION_FLAG,
  vp.vip_cd AS VIP_CD,
  vp.inactive_flag AS INACTIVE_FLAG,
  VP.PAYMENT_TERM_CD AS PAYMENT_TERM_CD,
  RTRIM(VPT.PAYMENT_TERM_DESC) AS PAYMENT_TERM_DESC,
  VP.INCO_TERM_CD AS INCO_TERM_CD,
  RTRIM(VIT.INCO_TERM_DESC) AS INCO_TERM_DESC,
  RTRIM(VP.ADDRESS) AS ADDRESS,
  RTRIM(VP.CITY) AS CITY,
  VP.Shortcut_to_STATE_5 AS Shortcut_to_STATE_5,
  RTRIM(S.STATE_NAME) AS STATE_NAME,
  VP.COUNTRY_CD AS COUNTRY_CD,
  RTRIM(CN.COUNTRY_NAME) AS COUNTRY_NAME,
  VP.ZIP AS ZIP,
  RTRIM(VP.CONTACT) AS CONTACT,
  VP.CONTACT_PHONE AS CONTACT_PHONE,
  VP.PHONE AS PHONE,
  VP.PHONE_EXT AS PHONE_EXT,
  VP.FAX AS FAX,
  VP.RTV_ELIG_FLAG AS RTV_ELIG_FLAG,
  VP.RTV_TYPE_CD AS RTV_TYPE_CD,
  RTRIM(VRT.RTV_TYPE_DESC) AS RTV_TYPE_DESC,
  VP.RTV_FREIGHT_TYPE_CD AS RTV_FREIGHT_TYPE_CD,
  VP.INDUSTRY_CD AS INDUSTRY_CD,
  VP.LATITUDE AS LATITUDE,
  VP.LONGITUDE AS LONGITUDE,
  VP.TIME_ZONE_ID AS TIME_ZONE_ID,
  VP.ADD_DT AS ADD_DT,
  VP.UPDATE_DT AS UPDATE_DT,
  VP.LOAD_DT AS LOAD_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_VENDOR_PROFILE_7 VP
  LEFT OUTER JOIN Shortcut_to_VENDOR_TYPE_0 VT ON (VP.VENDOR_TYPE_ID = VT.VENDOR_TYPE_ID)
  LEFT OUTER JOIN Shortcut_To_PURCH_GROUP_8 PG ON (VP.PURCH_GROUP_ID = PG.PURCH_GROUP_ID)
  LEFT OUTER JOIN Shortcut_to_STATE_5 S ON (VP.Shortcut_to_STATE_5 = S.STATE_CD)
  LEFT OUTER JOIN Shortcut_to_COUNTRY_6 CN ON (VP.COUNTRY_CD = CN.COUNTRY_CD)
  LEFT OUTER JOIN Shortcut_to_VENDOR_INCO_TERM_2 VIT ON (VP.INCO_TERM_CD = VIT.INCO_TERM_CD)
  LEFT OUTER JOIN Shortcut_to_VENDOR_RTV_TYPE_1 VRT ON (VP.RTV_TYPE_CD = VRT.RTV_TYPE_CD)
  LEFT OUTER JOIN Shortcut_to_VENDOR_PAYMENT_TERM_3 VPT ON (VP.PAYMENT_TERM_CD = VPT.PAYMENT_TERM_CD)
  LEFT OUTER JOIN Shortcut_to_DM_PG_MGR_DVL_4 DPMV ON (VP.PURCH_GROUP_ID = DPMV.PURCH_GROUP_ID)
  LEFT OUTER JOIN Shortcut_to_VENDOR_PROFILE_7 VP2 ON VP.Superior_vendor_id = VP2.VENDOR_ID"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("SQ_Shortcut_to_VENDOR_PROFILE_9")

# COMMAND ----------
# DBTITLE 1, VENDOR_PROFILE_RPT


spark.sql("""INSERT INTO
  VENDOR_PROFILE_RPT
SELECT
  VENDOR_ID AS VENDOR_ID,
  VENDOR_NAME AS VENDOR_NAME,
  VENDOR_TYPE_ID AS VENDOR_TYPE_ID,
  VENDOR_TYPE_DESC AS VENDOR_TYPE_DESC,
  VENDOR_NBR AS VENDOR_NBR,
  LOCATION_ID AS LOCATION_ID,
  SUPERIOR_VENDOR_ID AS SUPERIOR_VENDOR_ID,
  VENDOR_NAME1 AS SUPERIOR_VENDOR_NAME,
  VENDOR_NBR1 AS SUPERIOR_VENDOR_NBR,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  PARENT_VENDOR_NAME AS PARENT_VENDOR_NAME,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
  MGR_ID AS MGR_ID,
  MGR_DESC AS MGR_DESC,
  DVL_ID AS DVL_ID,
  DVL_DESC AS DVL_DESC,
  EDI_ELIG_FLAG AS EDI_ELIG_FLAG,
  PURCHASE_BLOCK AS PURCHASE_BLOCK,
  POSTING_BLOCK AS POSTING_BLOCK,
  DELETION_FLAG AS DELETION_BLOCK,
  VIP_CD AS VIP_CD,
  INACTIVE_FLAG AS INACTIVE_FLAG,
  PAYMENT_TERM_CD AS PAYMENT_TERM_CD,
  PAYMENT_TERM_DESC AS PAYMENT_TERM_DESC,
  INCO_TERM_CD AS INCO_TERM_CD,
  INCO_TERM_DESC AS INCO_TERM_DESC,
  ADDRESS AS ADDRESS,
  CITY AS CITY,
  STATE AS STATE,
  STATE_NAME AS STATE_NAME,
  COUNTRY_CD AS COUNTRY_CD,
  COUNTRY_NAME AS COUNTRY_NAME,
  ZIP AS ZIP,
  CONTACT AS CONTACT,
  CONTACT_PHONE AS CONTACT_PHONE,
  PHONE AS PHONE,
  PHONE_EXT AS PHONE_EXT,
  FAX AS FAX,
  RTV_ELIG_FLAG AS RTV_ELIG_FLAG,
  RTV_TYPE_CD AS RTV_TYPE_CD,
  RTV_TYPE_DESC AS RTV_TYPE_DESC,
  RTV_FREIGHT_TYPE_CD AS RTV_FREIGHT_TYPE_CD,
  INDUSTRY_CD AS INDUSTRY_CD,
  LATITUDE AS LATITUDE,
  LONGITUDE AS LONGITUDE,
  TIME_ZONE_ID AS TIME_ZONE_ID,
  ADD_DT AS ADD_DT,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  SQ_Shortcut_to_VENDOR_PROFILE_9""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_vendor_profile_rpt")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_vendor_profile_rpt", mainWorkflowId, parentName)
