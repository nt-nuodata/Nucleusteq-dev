# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------
# DBTITLE 1, Shortcut_to_UDH_PCH_MEDIA_IMPRESSIONS_0


df_0 = spark.sql("""SELECT
  RECORD_GID AS RECORD_GID,
  MEDIA_TYPE AS MEDIA_TYPE,
  MEDIA_DT AS MEDIA_DT,
  MEDIA_OUTLET AS MEDIA_OUTLET,
  MEDIA_CITY AS MEDIA_CITY,
  MEDIA_STATE AS MEDIA_STATE,
  FREQUENCY AS FREQUENCY,
  IMPRESSIONS AS IMPRESSIONS,
  MEDIA_VALUE AS MEDIA_VALUE,
  HEADLINE_LEAD_IN AS HEADLINE_LEAD_IN,
  REPORT_MONTH AS REPORT_MONTH,
  ACTION AS ACTION,
  PCH_MI_GID AS PCH_MI_GID,
  USER_ID AS USER_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  UDH_PCH_MEDIA_IMPRESSIONS""")

df_0.createOrReplaceTempView("Shortcut_to_UDH_PCH_MEDIA_IMPRESSIONS_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_UDH_PCH_MEDIA_IMPRESSIONS_1


df_1 = spark.sql("""SELECT
  upmi.RECORD_GID AS RECORD_GID,
  upmi.MEDIA_TYPE AS MEDIA_TYPE,
  upmi.MEDIA_DT AS MEDIA_DT,
  upmi.MEDIA_OUTLET AS MEDIA_OUTLET,
  upmi.MEDIA_CITY AS MEDIA_CITY,
  upmi.MEDIA_STATE AS MEDIA_STATE,
  upmi.FREQUENCY AS FREQUENCY,
  upmi.IMPRESSIONS AS IMPRESSIONS,
  upmi.MEDIA_VALUE AS MEDIA_VALUE,
  upmi.HEADLINE_LEAD_IN AS HEADLINE_LEAD_IN,
  upmi.REPORT_MONTH AS REPORT_MONTH,
  upmi.USER_ID AS USER_ID,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_UDH_PCH_MEDIA_IMPRESSIONS_0 upmi
WHERE
  upmi.action = 'NEW'""")

df_1.createOrReplaceTempView("SQ_Shortcut_to_UDH_PCH_MEDIA_IMPRESSIONS_1")

# COMMAND ----------
# DBTITLE 1, LKP_TRANS_2


df_2 = spark.sql("""SELECT
  D.DAY_DT AS DAY_DT,
  D.WEEK_DT AS WEEK_DT,
  D.FISCAL_WK AS FISCAL_WK,
  D.FISCAL_MO AS FISCAL_MO,
  D.FISCAL_QTR AS FISCAL_QTR,
  D.FISCAL_YR AS FISCAL_YR,
  D.CAL_WK AS CAL_WK,
  D.CAL_MO AS CAL_MO,
  D.CAL_QTR AS CAL_QTR,
  D.CAL_YR AS CAL_YR,
  SStUPMI1.MEDIA_DT AS MEDIA_DT,
  SStUPMI1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_UDH_PCH_MEDIA_IMPRESSIONS_1 SStUPMI1
  LEFT JOIN DAYS D ON D.DAY_DT = SStUPMI1.MEDIA_DT""")

df_2.createOrReplaceTempView("LKP_TRANS_2")

# COMMAND ----------
# DBTITLE 1, EXP_TRANS_3


df_3 = spark.sql("""SELECT
  SStUPMI1.RECORD_GID AS RECORD_GID,
  SStUPMI1.MEDIA_TYPE AS MEDIA_TYPE,
  SStUPMI1.MEDIA_DT AS MEDIA_DT,
  SStUPMI1.MEDIA_OUTLET AS MEDIA_OUTLET,
  SStUPMI1.MEDIA_CITY AS MEDIA_CITY,
  SStUPMI1.MEDIA_STATE AS MEDIA_STATE,
  SStUPMI1.FREQUENCY AS FREQUENCY,
  SStUPMI1.IMPRESSIONS AS IMPRESSIONS,
  SStUPMI1.MEDIA_VALUE AS MEDIA_VALUE,
  SStUPMI1.HEADLINE_LEAD_IN AS HEADLINE_LEAD_IN,
  SStUPMI1.REPORT_MONTH AS REPORT_MONTH,
  SStUPMI1.USER_ID AS USER_ID,
  LT2.WEEK_DT AS WEEK_DT,
  LT2.FISCAL_WK AS FISCAL_WK,
  LT2.FISCAL_MO AS FISCAL_MO,
  LT2.FISCAL_QTR AS FISCAL_QTR,
  LT2.FISCAL_YR AS FISCAL_YR,
  LT2.CAL_WK AS CAL_WK,
  LT2.CAL_MO AS CAL_MO,
  LT2.CAL_QTR AS CAL_QTR,
  LT2.CAL_YR AS CAL_YR,
  0 AS DELETED_IND,
  SESSSTARTTIME AS LOAD_TSTMP,
  LT2.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_TRANS_2 LT2
  INNER JOIN SQ_Shortcut_to_UDH_PCH_MEDIA_IMPRESSIONS_1 SStUPMI1 ON LT2.Monotonically_Increasing_Id = SStUPMI1.Monotonically_Increasing_Id""")

df_3.createOrReplaceTempView("EXP_TRANS_3")

# COMMAND ----------
# DBTITLE 1, USR_PCH_MEDIA_IMPRESSIONS


spark.sql("""INSERT INTO
  USR_PCH_MEDIA_IMPRESSIONS
SELECT
  RECORD_GID AS PCH_MI_GID,
  MEDIA_TYPE AS MEDIA_TYPE,
  MEDIA_DT AS MEDIA_DT,
  MEDIA_OUTLET AS MEDIA_OUTLET,
  MEDIA_CITY AS MEDIA_CITY,
  MEDIA_STATE AS MEDIA_STATE_CD,
  FREQUENCY AS FREQUENCY,
  IMPRESSIONS AS IMPRESSIONS,
  MEDIA_VALUE AS MEDIA_VALUE_AMT,
  HEADLINE_LEAD_IN AS HEADLINE_LEAD_IN,
  REPORT_MONTH AS REPORT_MONTH,
  USER_ID AS USER_ID,
  WEEK_DT AS WEEK_DT,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_QTR AS FISCAL_QTR,
  FISCAL_YR AS FISCAL_YR,
  CAL_WK AS CAL_WK,
  CAL_MO AS CAL_MO,
  CAL_QTR AS CAL_QTR,
  CAL_YR AS CAL_YR,
  NULL AS RECORD_GID,
  DELETED_IND AS DELETED_IND,
  LOAD_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  EXP_TRANS_3""")