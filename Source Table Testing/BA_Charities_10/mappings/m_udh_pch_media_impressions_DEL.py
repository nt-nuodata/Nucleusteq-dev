# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------
# DBTITLE 1, Shortcut_to_USR_PCH_MEDIA_IMPRESSIONS_0


df_0 = spark.sql("""SELECT
  PCH_MI_GID AS PCH_MI_GID,
  MEDIA_TYPE AS MEDIA_TYPE,
  MEDIA_DT AS MEDIA_DT,
  MEDIA_OUTLET AS MEDIA_OUTLET,
  MEDIA_CITY AS MEDIA_CITY,
  MEDIA_STATE_CD AS MEDIA_STATE_CD,
  FREQUENCY AS FREQUENCY,
  IMPRESSIONS AS IMPRESSIONS,
  MEDIA_VALUE_AMT AS MEDIA_VALUE_AMT,
  HEADLINE_LEAD_IN AS HEADLINE_LEAD_IN,
  REPORT_MONTH AS REPORT_MONTH,
  USER_ID AS USER_ID,
  WEEK_DT AS WEEK_DT,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_QTR AS FISCAL_QTR,
  FISCAL_YR AS FISCAL_YR,
  CAL_WK AS CAL_WK,
  CAL_MO AS CAL_MO,
  CAL_QTR AS CAL_QTR,
  CAL_YR AS CAL_YR,
  RECORD_GID AS RECORD_GID,
  DELETED_IND AS DELETED_IND,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  USR_PCH_MEDIA_IMPRESSIONS""")

df_0.createOrReplaceTempView("Shortcut_to_USR_PCH_MEDIA_IMPRESSIONS_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_USR_PCH_MEDIA_IMPRESSIONS_1


df_1 = spark.sql("""SELECT
  CASE
    WHEN deleted_ind = 0 THEN PCH_MI_GID
    ELSE record_gid
  END AS PCH_MI_GID,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_USR_PCH_MEDIA_IMPRESSIONS_0
WHERE
  update_tstmp > CURRENT_DATE""")

df_1.createOrReplaceTempView("SQ_Shortcut_to_USR_PCH_MEDIA_IMPRESSIONS_1")

# COMMAND ----------
# DBTITLE 1, UPD_DELETE_2


df_2 = spark.sql("""SELECT
  PCH_MI_GID AS PCH_MI_GID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  0 AS UPDATE_STRATEGY_FLAG
FROM
  SQ_Shortcut_to_USR_PCH_MEDIA_IMPRESSIONS_1""")

df_2.createOrReplaceTempView("UPD_DELETE_2")

# COMMAND ----------
# DBTITLE 1, UDH_PCH_MEDIA_IMPRESSIONS


spark.sql("""MERGE INTO UDH_PCH_MEDIA_IMPRESSIONS AS TARGET
USING
  UPD_DELETE_2 AS SOURCE ON TARGET.RECORD_GID = SOURCE.PCH_MI_GID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.RECORD_GID = SOURCE.PCH_MI_GID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE" THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (TARGET.RECORD_GID)
VALUES
  (SOURCE.PCH_MI_GID)""")