# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------
# DBTITLE 1, Shortcut_to_UDH_PCH_EMERGENCY_RELIEF_0


df_0 = spark.sql("""SELECT
  ER_GRANT_ID AS ER_GRANT_ID,
  ER_DT AS ER_DT,
  ER_SEQ_NO AS ER_SEQ_NO,
  ER_RESCUE_TYPE_ID AS ER_RESCUE_TYPE_ID,
  ER_SPECIES_ID AS ER_SPECIES_ID,
  ER_PAYMENT_TYPE_ID AS ER_PAYMENT_TYPE_ID,
  ER_STATE AS ER_STATE,
  ER_REGION AS ER_REGION,
  ER_DISTRICT AS ER_DISTRICT,
  STORE AS STORE,
  NO_OF_ANIMAL AS NO_OF_ANIMAL,
  REQUESTED_AMT AS REQUESTED_AMT,
  FUNDED_AMT AS FUNDED_AMT,
  ACTION AS ACTION,
  USER_ID AS USER_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  UDH_PCH_EMERGENCY_RELIEF""")

df_0.createOrReplaceTempView("Shortcut_to_UDH_PCH_EMERGENCY_RELIEF_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_UDH_PCH_EMERGENCY_RELIEF_1


df_1 = spark.sql("""SELECT
  ER_GRANT_ID AS ER_GRANT_ID,
  ER_DT AS ER_DT,
  ER_SEQ_NO AS ER_SEQ_NO,
  ER_RESCUE_TYPE_ID AS ER_RESCUE_TYPE_ID,
  ER_SPECIES_ID AS ER_SPECIES_ID,
  ER_PAYMENT_TYPE_ID AS ER_PAYMENT_TYPE_ID,
  ER_STATE AS ER_STATE,
  ER_REGION AS ER_REGION,
  ER_DISTRICT AS ER_DISTRICT,
  STORE AS STORE,
  NO_OF_ANIMAL AS NO_OF_ANIMAL,
  REQUESTED_AMT AS REQUESTED_AMT,
  FUNDED_AMT AS FUNDED_AMT,
  ACTION AS ACTION,
  USER_ID AS USER_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_UDH_PCH_EMERGENCY_RELIEF_0
WHERE
  ACTION IN ('Insert', 'Update')""")

df_1.createOrReplaceTempView("SQ_Shortcut_to_UDH_PCH_EMERGENCY_RELIEF_1")

# COMMAND ----------
# DBTITLE 1, LKP_SITE_PROFILE_RPT_2


df_2 = spark.sql("""SELECT
  SPR.STORE_NBR AS STORE_NBR,
  SPR.STATE_CD AS STATE_CD,
  SPR.REGION_DESC AS REGION_DESC,
  SPR.DISTRICT_DESC AS DISTRICT_DESC,
  SStUPER1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_UDH_PCH_EMERGENCY_RELIEF_1 SStUPER1
  LEFT JOIN SITE_PROFILE_RPT SPR ON SPR.STORE_NBR = SStUPER1.STORE""")

df_2.createOrReplaceTempView("LKP_SITE_PROFILE_RPT_2")

# COMMAND ----------
# DBTITLE 1, LKP_USR_PCH_EMERGENCY_RELIEF_3


df_3 = spark.sql("""SELECT
  UPER.GRANT_REQ_ID AS GRANT_REQ_ID,
  UPER.ER_DT AS ER_DT,
  UPER.ER_SEQ_NO AS ER_SEQ_NO,
  UPER.LOAD_TSTMP AS LOAD_TSTMP,
  SStUPER1.ER_GRANT_ID AS in_ER_GRANT_ID,
  SStUPER1.ER_DT AS in_ER_DT,
  SStUPER1.ER_SEQ_NO AS in_ER_SEQ_NO,
  SStUPER1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_UDH_PCH_EMERGENCY_RELIEF_1 SStUPER1
  LEFT JOIN USR_PCH_EMERGENCY_RELIEF UPER ON UPER.GRANT_REQ_ID = SStUPER1.ER_GRANT_ID
  AND UPER.ER_DT = SStUPER1.ER_DT
  AND UPER.ER_SEQ_NO = SStUPER1.ER_SEQ_NO""")

df_3.createOrReplaceTempView("LKP_USR_PCH_EMERGENCY_RELIEF_3")

# COMMAND ----------
# DBTITLE 1, EXP_TRANS_4


df_4 = spark.sql("""SELECT
  SStUPER1.ER_GRANT_ID AS ER_GRANT_ID,
  SStUPER1.ER_DT AS ER_DT,
  SStUPER1.ER_SEQ_NO AS ER_SEQ_NO,
  SStUPER1.ER_RESCUE_TYPE_ID AS ER_RESCUE_TYPE_ID,
  SStUPER1.ER_SPECIES_ID AS ER_SPECIES_ID,
  SStUPER1.ER_PAYMENT_TYPE_ID AS ER_PAYMENT_TYPE_ID,
  SStUPER1.ER_STATE AS ER_STATE,
  SStUPER1.ER_REGION AS ER_REGION,
  SStUPER1.ER_DISTRICT AS ER_DISTRICT,
  SStUPER1.STORE AS STORE,
  SStUPER1.NO_OF_ANIMAL AS NO_OF_ANIMAL,
  SStUPER1.REQUESTED_AMT AS REQUESTED_AMT,
  SStUPER1.FUNDED_AMT AS FUNDED_AMT,
  SStUPER1.USER_ID AS USER_ID,
  LSPR2.STORE_NBR AS STORE_NBR,
  LSPR2.STATE_CD AS STATE_CD,
  LSPR2.REGION_DESC AS REGION_DESC,
  LSPR2.DISTRICT_DESC AS DISTRICT_DESC,
  LUPER3.GRANT_REQ_ID AS lkp_ER_GRANT_ID,
  SESSSTARTTIME AS UPDATE_TSTMP,
  IFF(
    ISNULL(LUPER3.LOAD_TSTMP),
    SESSSTARTTIME,
    LUPER3.LOAD_TSTMP
  ) AS LOAD_TSTMP,
  IFF(ISNULL(LUPER3.GRANT_REQ_ID), 'I', 'U') AS LOAD_FLAG,
  0 AS DELETED_IND,
  IFF(
    ISNULL(LSPR2.REGION_DESC),
    SStUPER1.ER_REGION,
    LSPR2.REGION_DESC
  ) AS ER_REGION_OUT,
  IFF(
    ISNULL(LSPR2.DISTRICT_DESC),
    SStUPER1.ER_DISTRICT,
    LSPR2.DISTRICT_DESC
  ) AS ER_DISTRICT_OUT,
  IFF(
    ISNULL(LSPR2.STATE_CD),
    SStUPER1.ER_STATE,
    LSPR2.STATE_CD
  ) AS ER_STATE_OUT,
  SStUPER1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_UDH_PCH_EMERGENCY_RELIEF_1 SStUPER1
  INNER JOIN LKP_USR_PCH_EMERGENCY_RELIEF_3 LUPER3 ON SStUPER1.Monotonically_Increasing_Id = LUPER3.Monotonically_Increasing_Id
  INNER JOIN LKP_SITE_PROFILE_RPT_2 LSPR2 ON LUPER3.Monotonically_Increasing_Id = LSPR2.Monotonically_Increasing_Id""")

df_4.createOrReplaceTempView("EXP_TRANS_4")

# COMMAND ----------
# DBTITLE 1, LKP_ER_RESCUE_TYPE_5


df_5 = spark.sql("""SELECT
  UPERT.ER_RESCUE_TYPE_ID AS ER_RESCUE_TYPE_ID,
  UPERT.ER_RESCUE_TYPE_DESC AS ER_RESCUE_TYPE_DESC,
  ET4.ER_RESCUE_TYPE_ID AS in_ER_RESCUE_TYPE_ID,
  ET4.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_TRANS_4 ET4
  LEFT JOIN USR_PCH_ER_RESCUE_TYPE UPERT ON UPERT.ER_RESCUE_TYPE_ID = ET4.ER_RESCUE_TYPE_ID""")

df_5.createOrReplaceTempView("LKP_ER_RESCUE_TYPE_5")

# COMMAND ----------
# DBTITLE 1, LKP_DAYS_6


df_6 = spark.sql("""SELECT
  D.DAY_DT AS DAY_DT,
  D.CAL_WK AS CAL_WK,
  D.CAL_MO AS CAL_MO,
  D.CAL_QTR AS CAL_QTR,
  D.CAL_YR AS CAL_YR,
  D.FISCAL_WK AS FISCAL_WK,
  D.FISCAL_MO AS FISCAL_MO,
  D.FISCAL_QTR AS FISCAL_QTR,
  D.FISCAL_YR AS FISCAL_YR,
  D.WEEK_DT AS WEEK_DT,
  ET4.ER_DT AS in_ER_DT,
  ET4.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_TRANS_4 ET4
  LEFT JOIN DAYS D ON D.DAY_DT = ET4.ER_DT""")

df_6.createOrReplaceTempView("LKP_DAYS_6")

# COMMAND ----------
# DBTITLE 1, LKP_ER_PAYMENT_TYPE_7


df_7 = spark.sql("""SELECT
  UPEPT.ER_PAYMENT_TYPE_ID AS ER_PAYMENT_TYPE_ID,
  UPEPT.ER_PAYMENT_TYPE_DESC AS ER_PAYMENT_TYPE_DESC,
  ET4.ER_PAYMENT_TYPE_ID AS in_ER_PAYMENT_TYPE_ID,
  ET4.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_TRANS_4 ET4
  LEFT JOIN USR_PCH_ER_PAYMENT_TYPE UPEPT ON UPEPT.ER_PAYMENT_TYPE_ID = ET4.ER_PAYMENT_TYPE_ID""")

df_7.createOrReplaceTempView("LKP_ER_PAYMENT_TYPE_7")

# COMMAND ----------
# DBTITLE 1, LKP_ER_SPECIES_8


df_8 = spark.sql("""SELECT
  UPES.ER_SPECIES_ID AS ER_SPECIES_ID,
  UPES.ER_SPECIES_DESC AS ER_SPECIES_DESC,
  ET4.ER_SPECIES_ID AS in_ER_SPECIES_ID,
  ET4.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_TRANS_4 ET4
  LEFT JOIN USR_PCH_ER_SPECIES UPES ON UPES.ER_SPECIES_ID = ET4.ER_SPECIES_ID""")

df_8.createOrReplaceTempView("LKP_ER_SPECIES_8")

# COMMAND ----------
# DBTITLE 1, UPD_ins_upd_9


df_9 = spark.sql("""SELECT
  ET4.ER_GRANT_ID AS ER_GRANT_ID1,
  ET4.ER_DT AS ER_DT1,
  ET4.ER_SEQ_NO AS ER_SEQ_NO1,
  ET4.ER_RESCUE_TYPE_ID AS ER_RESCUE_TYPE_ID1,
  LERT5.ER_RESCUE_TYPE_DESC AS ER_RESCUE_TYPE_DESC1,
  ET4.ER_SPECIES_ID AS ER_SPECIES_ID1,
  LES8.ER_SPECIES_DESC AS ER_SPECIES_DESC1,
  ET4.ER_PAYMENT_TYPE_ID AS ER_PAYMENT_TYPE_ID1,
  LEPT7.ER_PAYMENT_TYPE_DESC AS ER_PAYMENT_TYPE_DESC1,
  ET4.ER_STATE AS ER_STATE1,
  ET4.ER_REGION AS ER_REGION1,
  ET4.ER_DISTRICT AS ER_DISTRICT1,
  ET4.STORE AS STORE1,
  ET4.NO_OF_ANIMAL AS NO_OF_ANIMAL1,
  ET4.REQUESTED_AMT AS REQUESTED_AMT1,
  ET4.FUNDED_AMT AS FUNDED_AMT1,
  ET4.USER_ID AS USER_ID1,
  LD6.WEEK_DT AS WEEK_DT1,
  LD6.FISCAL_WK AS FISCAL_WK1,
  LD6.FISCAL_MO AS FISCAL_MO1,
  LD6.FISCAL_QTR AS FISCAL_QTR1,
  LD6.FISCAL_YR AS FISCAL_YR1,
  LD6.CAL_WK AS CAL_WK1,
  LD6.CAL_MO AS CAL_MO1,
  LD6.CAL_QTR AS CAL_QTR1,
  LD6.CAL_YR AS CAL_YR1,
  ET4.DELETED_IND AS DELETED_IND1,
  ET4.UPDATE_TSTMP AS UPDATE_TSTMP,
  ET4.LOAD_FLAG AS LOAD_FLAG,
  ET4.LOAD_TSTMP AS LOAD_TSTMP1,
  LES8.Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  IFF(ET4.LOAD_FLAG = 'I', 'DD_INSERT', 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  LKP_ER_SPECIES_8 LES8
  INNER JOIN LKP_ER_PAYMENT_TYPE_7 LEPT7 ON LES8.Monotonically_Increasing_Id = LEPT7.Monotonically_Increasing_Id
  INNER JOIN LKP_DAYS_6 LD6 ON LEPT7.Monotonically_Increasing_Id = LD6.Monotonically_Increasing_Id
  INNER JOIN LKP_ER_RESCUE_TYPE_5 LERT5 ON LD6.Monotonically_Increasing_Id = LERT5.Monotonically_Increasing_Id
  INNER JOIN EXP_TRANS_4 ET4 ON LERT5.Monotonically_Increasing_Id = ET4.Monotonically_Increasing_Id""")

df_9.createOrReplaceTempView("UPD_ins_upd_9")

# COMMAND ----------
# DBTITLE 1, USR_PCH_EMERGENCY_RELIEF


spark.sql("""MERGE INTO USR_PCH_EMERGENCY_RELIEF AS TARGET
USING
  UPD_ins_upd_9 AS SOURCE ON TARGET.ER_SEQ_NO = SOURCE.ER_SEQ_NO1
  AND TARGET.ER_DT = SOURCE.ER_DT1
  AND TARGET.GRANT_REQ_ID = SOURCE.ER_GRANT_ID1
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.GRANT_REQ_ID = SOURCE.ER_GRANT_ID1,
  TARGET.ER_DT = SOURCE.ER_DT1,
  TARGET.ER_SEQ_NO = SOURCE.ER_SEQ_NO1,
  TARGET.ER_RESCUE_TYPE_ID = SOURCE.ER_RESCUE_TYPE_ID1,
  TARGET.ER_RESCUE_TYPE_DESC = SOURCE.ER_RESCUE_TYPE_DESC1,
  TARGET.ER_SPECIES_ID = SOURCE.ER_SPECIES_ID1,
  TARGET.ER_SPECIES_DESC = SOURCE.ER_SPECIES_DESC1,
  TARGET.ER_PAYMENT_TYPE_ID = SOURCE.ER_PAYMENT_TYPE_ID1,
  TARGET.ER_PAYMENT_TYPE_DESC = SOURCE.ER_PAYMENT_TYPE_DESC1,
  TARGET.ER_STATE_CD = SOURCE.ER_STATE1,
  TARGET.ER_REGION = SOURCE.ER_REGION1,
  TARGET.ER_DISTRICT = SOURCE.ER_DISTRICT1,
  TARGET.STORE_NBR = SOURCE.STORE1,
  TARGET.ANIMAL_CNT = SOURCE.NO_OF_ANIMAL1,
  TARGET.REQUESTED_AMT = SOURCE.REQUESTED_AMT1,
  TARGET.FUNDED_AMT = SOURCE.FUNDED_AMT1,
  TARGET.USER_ID = SOURCE.USER_ID1,
  TARGET.WEEK_DT = SOURCE.WEEK_DT1,
  TARGET.FISCAL_WK = SOURCE.FISCAL_WK1,
  TARGET.FISCAL_MO = SOURCE.FISCAL_MO1,
  TARGET.FISCAL_QTR = SOURCE.FISCAL_QTR1,
  TARGET.FISCAL_YR = SOURCE.FISCAL_YR1,
  TARGET.CAL_WK = SOURCE.CAL_WK1,
  TARGET.CAL_MO = SOURCE.CAL_MO1,
  TARGET.CAL_QTR = SOURCE.CAL_QTR1,
  TARGET.CAL_YR = SOURCE.CAL_YR1,
  TARGET.DELETED_IND = SOURCE.DELETED_IND1,
  TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP1
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.ER_RESCUE_TYPE_ID = SOURCE.ER_RESCUE_TYPE_ID1
  AND TARGET.ER_RESCUE_TYPE_DESC = SOURCE.ER_RESCUE_TYPE_DESC1
  AND TARGET.ER_SPECIES_ID = SOURCE.ER_SPECIES_ID1
  AND TARGET.ER_SPECIES_DESC = SOURCE.ER_SPECIES_DESC1
  AND TARGET.ER_PAYMENT_TYPE_ID = SOURCE.ER_PAYMENT_TYPE_ID1
  AND TARGET.ER_PAYMENT_TYPE_DESC = SOURCE.ER_PAYMENT_TYPE_DESC1
  AND TARGET.ER_STATE_CD = SOURCE.ER_STATE1
  AND TARGET.ER_REGION = SOURCE.ER_REGION1
  AND TARGET.ER_DISTRICT = SOURCE.ER_DISTRICT1
  AND TARGET.STORE_NBR = SOURCE.STORE1
  AND TARGET.ANIMAL_CNT = SOURCE.NO_OF_ANIMAL1
  AND TARGET.REQUESTED_AMT = SOURCE.REQUESTED_AMT1
  AND TARGET.FUNDED_AMT = SOURCE.FUNDED_AMT1
  AND TARGET.USER_ID = SOURCE.USER_ID1
  AND TARGET.WEEK_DT = SOURCE.WEEK_DT1
  AND TARGET.FISCAL_WK = SOURCE.FISCAL_WK1
  AND TARGET.FISCAL_MO = SOURCE.FISCAL_MO1
  AND TARGET.FISCAL_QTR = SOURCE.FISCAL_QTR1
  AND TARGET.FISCAL_YR = SOURCE.FISCAL_YR1
  AND TARGET.CAL_WK = SOURCE.CAL_WK1
  AND TARGET.CAL_MO = SOURCE.CAL_MO1
  AND TARGET.CAL_QTR = SOURCE.CAL_QTR1
  AND TARGET.CAL_YR = SOURCE.CAL_YR1
  AND TARGET.DELETED_IND = SOURCE.DELETED_IND1
  AND TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP1 THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.GRANT_REQ_ID,
    TARGET.ER_DT,
    TARGET.ER_SEQ_NO,
    TARGET.ER_RESCUE_TYPE_ID,
    TARGET.ER_RESCUE_TYPE_DESC,
    TARGET.ER_SPECIES_ID,
    TARGET.ER_SPECIES_DESC,
    TARGET.ER_PAYMENT_TYPE_ID,
    TARGET.ER_PAYMENT_TYPE_DESC,
    TARGET.ER_STATE_CD,
    TARGET.ER_REGION,
    TARGET.ER_DISTRICT,
    TARGET.STORE_NBR,
    TARGET.ANIMAL_CNT,
    TARGET.REQUESTED_AMT,
    TARGET.FUNDED_AMT,
    TARGET.USER_ID,
    TARGET.WEEK_DT,
    TARGET.FISCAL_WK,
    TARGET.FISCAL_MO,
    TARGET.FISCAL_QTR,
    TARGET.FISCAL_YR,
    TARGET.CAL_WK,
    TARGET.CAL_MO,
    TARGET.CAL_QTR,
    TARGET.CAL_YR,
    TARGET.DELETED_IND,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.ER_GRANT_ID1,
    SOURCE.ER_DT1,
    SOURCE.ER_SEQ_NO1,
    SOURCE.ER_RESCUE_TYPE_ID1,
    SOURCE.ER_RESCUE_TYPE_DESC1,
    SOURCE.ER_SPECIES_ID1,
    SOURCE.ER_SPECIES_DESC1,
    SOURCE.ER_PAYMENT_TYPE_ID1,
    SOURCE.ER_PAYMENT_TYPE_DESC1,
    SOURCE.ER_STATE1,
    SOURCE.ER_REGION1,
    SOURCE.ER_DISTRICT1,
    SOURCE.STORE1,
    SOURCE.NO_OF_ANIMAL1,
    SOURCE.REQUESTED_AMT1,
    SOURCE.FUNDED_AMT1,
    SOURCE.USER_ID1,
    SOURCE.WEEK_DT1,
    SOURCE.FISCAL_WK1,
    SOURCE.FISCAL_MO1,
    SOURCE.FISCAL_QTR1,
    SOURCE.FISCAL_YR1,
    SOURCE.CAL_WK1,
    SOURCE.CAL_MO1,
    SOURCE.CAL_QTR1,
    SOURCE.CAL_YR1,
    SOURCE.DELETED_IND1,
    SOURCE.UPDATE_TSTMP,
    SOURCE.LOAD_TSTMP1
  )""")