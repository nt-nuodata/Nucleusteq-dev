# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Order_Line_Item")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_Order_Line_Item", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDER_LINE_ITEM_PRE_0


query_0 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  UNIT_TAX_AMOUNT AS UNIT_TAX_AMOUNT,
  SHIPPED_QTY AS SHIPPED_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DO_DTL_STATUS AS DO_DTL_STATUS,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  UNIT_COST AS UNIT_COST,
  UNIT_PRICE_AMOUNT AS UNIT_PRICE_AMOUNT,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  EVENT_CODE AS EVENT_CODE,
  REASON_CODE AS REASON_CODE,
  EXP_INFO_CODE AS EXP_INFO_CODE,
  PARTL_FILL AS PARTL_FILL,
  ORDER_QTY AS ORDER_QTY,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  RETAIL_PRICE AS RETAIL_PRICE,
  ITEM_ID AS ITEM_ID,
  TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  IS_CANCELLED AS IS_CANCELLED,
  ITEM_NAME AS ITEM_NAME,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  FREIGHT_REVENUE_CURRENCY_CODE AS FREIGHT_REVENUE_CURRENCY_CODE,
  FREIGHT_REVENUE AS FREIGHT_REVENUE,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDER_LINE_ITEM_PRE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_ORDER_LINE_ITEM_PRE_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDER_LINE_ITEM_PRE_1


query_1 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  UNIT_TAX_AMOUNT AS UNIT_TAX_AMOUNT,
  SHIPPED_QTY AS SHIPPED_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DO_DTL_STATUS AS DO_DTL_STATUS,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  UNIT_COST AS UNIT_COST,
  UNIT_PRICE_AMOUNT AS UNIT_PRICE_AMOUNT,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  EVENT_CODE AS EVENT_CODE,
  REASON_CODE AS REASON_CODE,
  EXP_INFO_CODE AS EXP_INFO_CODE,
  PARTL_FILL AS PARTL_FILL,
  ORDER_QTY AS ORDER_QTY,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  RETAIL_PRICE AS RETAIL_PRICE,
  ITEM_ID AS ITEM_ID,
  TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  IS_CANCELLED AS IS_CANCELLED,
  ITEM_NAME AS ITEM_NAME,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  FREIGHT_REVENUE_CURRENCY_CODE AS FREIGHT_REVENUE_CURRENCY_CODE,
  FREIGHT_REVENUE AS FREIGHT_REVENUE,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDER_LINE_ITEM_PRE_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDER_LINE_ITEM_PRE_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDER_LINE_ITEM_2


query_2 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_LINE_ITEM_ID AS OMS_LINE_ITEM_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_MASTER_ORDER_ID AS OMS_MASTER_ORDER_ID,
  OMS_MO_LINE_ITEM_ID AS OMS_MO_LINE_ITEM_ID,
  OMS_TC_ORDER_LINE_ID AS OMS_TC_ORDER_LINE_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_PURCHASE_ORDER_LINE_NBR AS OMS_PURCHASE_ORDER_LINE_NBR,
  OMS_ITEM_ID AS OMS_ITEM_ID,
  OMS_ITEM_NAME AS OMS_ITEM_NAME,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  OMS_DO_DTL_STATUS_ID AS OMS_DO_DTL_STATUS_ID,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  OMS_EVENT_CD AS OMS_EVENT_CD,
  OMS_REASON_CD AS OMS_REASON_CD,
  OMS_EXP_INFO_CD AS OMS_EXP_INFO_CD,
  PARTIAL_FILL_FLAG AS PARTIAL_FILL_FLAG,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  ORDER_QTY AS ORDER_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  RETAIL_PRICE_AMT AS RETAIL_PRICE_AMT,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  UNIT_COST_AMT AS UNIT_COST_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  FREIGHT_REVENUE_CURRENCY_CD AS FREIGHT_REVENUE_CURRENCY_CD,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDER_LINE_ITEM"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_ORDER_LINE_ITEM_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDER_LINE_ITEM_3


query_3 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_LINE_ITEM_ID AS OMS_LINE_ITEM_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_MASTER_ORDER_ID AS OMS_MASTER_ORDER_ID,
  OMS_MO_LINE_ITEM_ID AS OMS_MO_LINE_ITEM_ID,
  OMS_TC_ORDER_LINE_ID AS OMS_TC_ORDER_LINE_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_PURCHASE_ORDER_LINE_NBR AS OMS_PURCHASE_ORDER_LINE_NBR,
  OMS_ITEM_ID AS OMS_ITEM_ID,
  OMS_ITEM_NAME AS OMS_ITEM_NAME,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  OMS_DO_DTL_STATUS_ID AS OMS_DO_DTL_STATUS_ID,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  OMS_EVENT_CD AS OMS_EVENT_CD,
  OMS_REASON_CD AS OMS_REASON_CD,
  OMS_EXP_INFO_CD AS OMS_EXP_INFO_CD,
  PARTIAL_FILL_FLAG AS PARTIAL_FILL_FLAG,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  ORDER_QTY AS ORDER_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  RETAIL_PRICE_AMT AS RETAIL_PRICE_AMT,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  UNIT_COST_AMT AS UNIT_COST_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  FREIGHT_REVENUE_CURRENCY_CD AS FREIGHT_REVENUE_CURRENCY_CD,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDER_LINE_ITEM_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDER_LINE_ITEM_3")

# COMMAND ----------
# DBTITLE 1, JNR_ORDER_LINE_ITEM_4


query_4 = f"""SELECT
  DETAIL.ORDER_ID AS ORDER_ID,
  DETAIL.LINE_ITEM_ID AS LINE_ITEM_ID,
  DETAIL.TC_COMPANY_ID AS TC_COMPANY_ID,
  DETAIL.MASTER_ORDER_ID AS MASTER_ORDER_ID,
  DETAIL.MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  DETAIL.TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  DETAIL.UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  DETAIL.UNIT_TAX_AMOUNT AS UNIT_TAX_AMOUNT,
  DETAIL.SHIPPED_QTY AS SHIPPED_QTY,
  DETAIL.RECEIVED_QTY AS RECEIVED_QTY,
  DETAIL.CREATED_SOURCE AS CREATED_SOURCE,
  DETAIL.CREATED_DTTM AS CREATED_DTTM,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.DO_DTL_STATUS AS DO_DTL_STATUS,
  DETAIL.ALLOCATED_QTY AS ALLOCATED_QTY,
  DETAIL.UNIT_COST AS UNIT_COST,
  DETAIL.UNIT_PRICE_AMOUNT AS UNIT_PRICE_AMOUNT,
  DETAIL.USER_CANCELED_QTY AS USER_CANCELED_QTY,
  DETAIL.DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  DETAIL.DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DETAIL.EVENT_CODE AS EVENT_CODE,
  DETAIL.REASON_CODE AS REASON_CODE,
  DETAIL.EXP_INFO_CODE AS EXP_INFO_CODE,
  DETAIL.PARTL_FILL AS PARTL_FILL,
  DETAIL.ORDER_QTY AS ORDER_QTY,
  DETAIL.ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  DETAIL.RETAIL_PRICE AS RETAIL_PRICE,
  DETAIL.ITEM_ID AS ITEM_ID,
  DETAIL.TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  DETAIL.ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  DETAIL.PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DETAIL.PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  DETAIL.PICKUP_START_DTTM AS PICKUP_START_DTTM,
  DETAIL.IS_CANCELLED AS IS_CANCELLED,
  DETAIL.ITEM_NAME AS ITEM_NAME,
  DETAIL.PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  DETAIL.FREIGHT_REVENUE_CURRENCY_CODE AS FREIGHT_REVENUE_CURRENCY_CODE,
  DETAIL.FREIGHT_REVENUE AS FREIGHT_REVENUE,
  DETAIL.ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  MASTER.OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  MASTER.OMS_LINE_ITEM_ID AS lkp_OMS_LINE_ITEM_ID,
  MASTER.OMS_TC_COMPANY_ID AS lkp_OMS_TC_COMPANY_ID,
  MASTER.OMS_MASTER_ORDER_ID AS lkp_OMS_MASTER_ORDER_ID,
  MASTER.OMS_MO_LINE_ITEM_ID AS lkp_OMS_MO_LINE_ITEM_ID,
  MASTER.OMS_TC_ORDER_LINE_ID AS lkp_OMS_TC_ORDER_LINE_ID,
  MASTER.OMS_PURCHASE_ORDER_NBR AS lkp_OMS_PURCHASE_ORDER_NBR,
  MASTER.OMS_PURCHASE_ORDER_LINE_NBR AS lkp_OMS_PURCHASE_ORDER_LINE_NBR,
  MASTER.OMS_ITEM_ID AS lkp_OMS_ITEM_ID,
  MASTER.OMS_ITEM_NAME AS lkp_OMS_ITEM_NAME,
  MASTER.OMS_PICKUP_START_TSTMP AS lkp_OMS_PICKUP_START_TSTMP,
  MASTER.OMS_PICKUP_END_TSTMP AS lkp_OMS_PICKUP_END_TSTMP,
  MASTER.OMS_DELIVERY_START_TSTMP AS lkp_OMS_DELIVERY_START_TSTMP,
  MASTER.OMS_DELIVERY_END_TSTMP AS lkp_OMS_DELIVERY_END_TSTMP,
  MASTER.OMS_ACTUAL_SHIPPED_TSTMP AS lkp_OMS_ACTUAL_SHIPPED_TSTMP,
  MASTER.OMS_DO_DTL_STATUS_ID AS lkp_OMS_DO_DTL_STATUS_ID,
  MASTER.CANCELLED_FLAG AS lkp_CANCELLED_FLAG,
  MASTER.OMS_EVENT_CD AS lkp_OMS_EVENT_CD,
  MASTER.OMS_REASON_CD AS lkp_OMS_REASON_CD,
  MASTER.OMS_EXP_INFO_CD AS lkp_OMS_EXP_INFO_CD,
  MASTER.PARTIAL_FILL_FLAG AS lkp_PARTIAL_FILL_FLAG,
  MASTER.ORIG_ORDER_QTY AS lkp_ORIG_ORDER_QTY,
  MASTER.ADJUSTED_ORDER_QTY AS lkp_ADJUSTED_ORDER_QTY,
  MASTER.USER_CANCELED_QTY AS lkp_USER_CANCELED_QTY,
  MASTER.ORDER_QTY AS lkp_ORDER_QTY,
  MASTER.RECEIVED_QTY AS lkp_RECEIVED_QTY,
  MASTER.ALLOCATED_QTY AS lkp_ALLOCATED_QTY,
  MASTER.SHIPPED_QTY AS lkp_SHIPPED_QTY,
  MASTER.RETAIL_PRICE_AMT AS lkp_RETAIL_PRICE_AMT,
  MASTER.UNIT_PRICE_AMT AS lkp_UNIT_PRICE_AMT,
  MASTER.UNIT_COST_AMT AS lkp_UNIT_COST_AMT,
  MASTER.UNIT_TAX_AMT AS lkp_UNIT_TAX_AMT,
  MASTER.UNIT_MONETARY_VALUE AS lkp_UNIT_MONETARY_VALUE,
  MASTER.TOTAL_MONETARY_VALUE AS lkp_TOTAL_MONETARY_VALUE,
  MASTER.FREIGHT_REVENUE_AMT AS lkp_FREIGHT_REVENUE_AMT,
  MASTER.FREIGHT_REVENUE_CURRENCY_CD AS lkp_FREIGHT_REVENUE_CURRENCY_CD,
  MASTER.OMS_CREATED_SOURCE AS lkp_OMS_CREATED_SOURCE,
  MASTER.OMS_CREATED_TSTMP AS lkp_OMS_CREATED_TSTMP,
  MASTER.OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ORDER_LINE_ITEM_3 MASTER
  RIGHT JOIN SQ_Shortcut_to_OMS_ORDER_LINE_ITEM_PRE_1 DETAIL ON MASTER.OMS_LINE_ITEM_ID = DETAIL.LINE_ITEM_ID
  AND MASTER.OMS_ORDER_ID = DETAIL.ORDER_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_ORDER_LINE_ITEM_4")

# COMMAND ----------
# DBTITLE 1, EXP_VALID_FLAG_5


query_5 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  UNIT_TAX_AMOUNT AS UNIT_TAX_AMOUNT,
  SHIPPED_QTY AS SHIPPED_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DO_DTL_STATUS AS DO_DTL_STATUS,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  UNIT_COST AS UNIT_COST,
  UNIT_PRICE_AMOUNT AS UNIT_PRICE_AMOUNT,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  EVENT_CODE AS EVENT_CODE,
  REASON_CODE AS REASON_CODE,
  EXP_INFO_CODE AS EXP_INFO_CODE,
  PARTL_FILL AS PARTL_FILL,
  ORDER_QTY AS ORDER_QTY,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  RETAIL_PRICE AS RETAIL_PRICE,
  ITEM_ID AS ITEM_ID,
  TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  IS_CANCELLED AS IS_CANCELLED,
  ITEM_NAME AS ITEM_NAME,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  FREIGHT_REVENUE_CURRENCY_CODE AS FREIGHT_REVENUE_CURRENCY_CODE,
  FREIGHT_REVENUE AS FREIGHT_REVENUE,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  lkp_OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  lkp_OMS_LINE_ITEM_ID AS lkp_OMS_LINE_ITEM_ID,
  lkp_OMS_TC_COMPANY_ID AS lkp_OMS_TC_COMPANY_ID,
  lkp_OMS_MASTER_ORDER_ID AS lkp_OMS_MASTER_ORDER_ID,
  lkp_OMS_MO_LINE_ITEM_ID AS lkp_OMS_MO_LINE_ITEM_ID,
  lkp_OMS_TC_ORDER_LINE_ID AS lkp_OMS_TC_ORDER_LINE_ID,
  lkp_OMS_PURCHASE_ORDER_NBR AS lkp_OMS_PURCHASE_ORDER_NBR,
  lkp_OMS_PURCHASE_ORDER_LINE_NBR AS lkp_OMS_PURCHASE_ORDER_LINE_NBR,
  lkp_OMS_ITEM_ID AS lkp_OMS_ITEM_ID,
  lkp_OMS_ITEM_NAME AS lkp_OMS_ITEM_NAME,
  lkp_OMS_PICKUP_START_TSTMP AS lkp_OMS_PICKUP_START_TSTMP,
  lkp_OMS_PICKUP_END_TSTMP AS lkp_OMS_PICKUP_END_TSTMP,
  lkp_OMS_DELIVERY_START_TSTMP AS lkp_OMS_DELIVERY_START_TSTMP,
  lkp_OMS_DELIVERY_END_TSTMP AS lkp_OMS_DELIVERY_END_TSTMP,
  lkp_OMS_ACTUAL_SHIPPED_TSTMP AS lkp_OMS_ACTUAL_SHIPPED_TSTMP,
  lkp_OMS_DO_DTL_STATUS_ID AS lkp_OMS_DO_DTL_STATUS_ID,
  lkp_CANCELLED_FLAG AS lkp_CANCELLED_FLAG,
  lkp_OMS_EVENT_CD AS lkp_OMS_EVENT_CD,
  lkp_OMS_REASON_CD AS lkp_OMS_REASON_CD,
  lkp_OMS_EXP_INFO_CD AS lkp_OMS_EXP_INFO_CD,
  lkp_PARTIAL_FILL_FLAG AS lkp_PARTIAL_FILL_FLAG,
  lkp_ORIG_ORDER_QTY AS lkp_ORIG_ORDER_QTY,
  lkp_ADJUSTED_ORDER_QTY AS lkp_ADJUSTED_ORDER_QTY,
  lkp_USER_CANCELED_QTY AS lkp_USER_CANCELED_QTY,
  lkp_ORDER_QTY AS lkp_ORDER_QTY,
  lkp_RECEIVED_QTY AS lkp_RECEIVED_QTY,
  lkp_ALLOCATED_QTY AS lkp_ALLOCATED_QTY,
  lkp_SHIPPED_QTY AS lkp_SHIPPED_QTY,
  lkp_RETAIL_PRICE_AMT AS lkp_RETAIL_PRICE_AMT,
  lkp_UNIT_PRICE_AMT AS lkp_UNIT_PRICE_AMT,
  lkp_UNIT_COST_AMT AS lkp_UNIT_COST_AMT,
  lkp_UNIT_TAX_AMT AS lkp_UNIT_TAX_AMT,
  lkp_UNIT_MONETARY_VALUE AS lkp_UNIT_MONETARY_VALUE,
  lkp_TOTAL_MONETARY_VALUE AS lkp_TOTAL_MONETARY_VALUE,
  lkp_FREIGHT_REVENUE_AMT AS lkp_FREIGHT_REVENUE_AMT,
  lkp_FREIGHT_REVENUE_CURRENCY_CD AS lkp_FREIGHT_REVENUE_CURRENCY_CD,
  lkp_OMS_CREATED_SOURCE AS lkp_OMS_CREATED_SOURCE,
  lkp_OMS_CREATED_TSTMP AS lkp_OMS_CREATED_TSTMP,
  lkp_OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  lkp_LOAD_TSTMP AS lkp_LOAD_TSTMP,
  now() AS UPDATE_TSTMP_exp,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS LOAD_TSTMP_exp,
  IFF(
    ISNULL(lkp_OMS_LINE_ITEM_ID),
    'INSERT',
    IFF(
      TC_COMPANY_ID != lkp_OMS_TC_COMPANY_ID
      OR MASTER_ORDER_ID != lkp_OMS_MASTER_ORDER_ID
      OR MO_LINE_ITEM_ID != lkp_OMS_MO_LINE_ITEM_ID
      OR TOTAL_MONETARY_VALUE != lkp_TOTAL_MONETARY_VALUE
      OR UNIT_MONETARY_VALUE != lkp_UNIT_MONETARY_VALUE
      OR UNIT_TAX_AMOUNT != lkp_UNIT_TAX_AMT
      OR SHIPPED_QTY != lkp_SHIPPED_QTY
      OR RECEIVED_QTY != lkp_RECEIVED_QTY
      OR CREATED_SOURCE != lkp_OMS_CREATED_SOURCE
      OR CREATED_DTTM != lkp_OMS_CREATED_TSTMP
      OR LAST_UPDATED_DTTM != lkp_OMS_LAST_UPDATED_TSTMP
      OR DELIVERY_START_DTTM != lkp_OMS_DELIVERY_START_TSTMP
      OR DELIVERY_END_DTTM != lkp_OMS_DELIVERY_END_TSTMP
      OR ACTUAL_SHIPPED_DTTM != lkp_OMS_ACTUAL_SHIPPED_TSTMP
      OR PICKUP_START_DTTM != lkp_OMS_PICKUP_START_TSTMP
      OR PICKUP_END_DTTM != lkp_OMS_PICKUP_END_TSTMP
      OR DO_DTL_STATUS != lkp_OMS_DO_DTL_STATUS_ID
      OR ALLOCATED_QTY != lkp_ALLOCATED_QTY
      OR UNIT_COST != lkp_UNIT_COST_AMT
      OR UNIT_PRICE_AMOUNT != lkp_UNIT_PRICE_AMT
      OR USER_CANCELED_QTY != lkp_USER_CANCELED_QTY
      OR EVENT_CODE != lkp_OMS_EVENT_CD
      OR REASON_CODE != lkp_OMS_REASON_CD
      OR EXP_INFO_CODE != lkp_OMS_EXP_INFO_CD
      OR PARTL_FILL != lkp_PARTIAL_FILL_FLAG
      OR ORDER_QTY != lkp_ORDER_QTY
      OR ORIG_ORDER_QTY != lkp_ORIG_ORDER_QTY
      OR RETAIL_PRICE != lkp_RETAIL_PRICE_AMT
      OR ITEM_ID != lkp_OMS_ITEM_ID
      OR PURCHASE_ORDER_LINE_NUMBER != lkp_OMS_PURCHASE_ORDER_LINE_NBR
      OR TC_ORDER_LINE_ID != lkp_OMS_TC_ORDER_LINE_ID
      OR IS_CANCELLED != lkp_CANCELLED_FLAG
      OR ITEM_NAME != lkp_OMS_ITEM_NAME
      OR PURCHASE_ORDER_NUMBER != lkp_OMS_PURCHASE_ORDER_NBR
      OR FREIGHT_REVENUE_CURRENCY_CODE != lkp_FREIGHT_REVENUE_CURRENCY_CD
      OR FREIGHT_REVENUE != lkp_FREIGHT_REVENUE_AMT
      OR CREATED_DTTM != lkp_OMS_CREATED_TSTMP
      OR LAST_UPDATED_DTTM != lkp_OMS_LAST_UPDATED_TSTMP
      OR ADJUSTED_ORDER_QTY != lkp_ADJUSTED_ORDER_QTY,
      'UPDATE',
      'REJECT'
    )
  ) AS o_VALID_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_ORDER_LINE_ITEM_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("EXP_VALID_FLAG_5")

# COMMAND ----------
# DBTITLE 1, FTR_UNCHANGED_REC_6


query_6 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  UNIT_TAX_AMOUNT AS UNIT_TAX_AMOUNT,
  SHIPPED_QTY AS SHIPPED_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DO_DTL_STATUS AS DO_DTL_STATUS,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  UNIT_COST AS UNIT_COST,
  UNIT_PRICE_AMOUNT AS UNIT_PRICE_AMOUNT,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  EVENT_CODE AS EVENT_CODE,
  REASON_CODE AS REASON_CODE,
  EXP_INFO_CODE AS EXP_INFO_CODE,
  PARTL_FILL AS PARTL_FILL,
  ORDER_QTY AS ORDER_QTY,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  RETAIL_PRICE AS RETAIL_PRICE,
  ITEM_ID AS ITEM_ID,
  TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  IS_CANCELLED AS IS_CANCELLED,
  ITEM_NAME AS ITEM_NAME,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  FREIGHT_REVENUE_CURRENCY_CODE AS FREIGHT_REVENUE_CURRENCY_CODE,
  FREIGHT_REVENUE AS FREIGHT_REVENUE,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  UPDATE_TSTMP_exp AS UPDATE_TSTMP_exp,
  LOAD_TSTMP_exp AS LOAD_TSTMP_exp,
  o_VALID_FLAG AS o_VALID_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_VALID_FLAG_5
WHERE
  IN(o_VALID_FLAG, 'INSERT', 'UPDATE')"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("FTR_UNCHANGED_REC_6")

# COMMAND ----------
# DBTITLE 1, UPD_INS_UPD_7


query_7 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  ITEM_ID AS ITEM_ID,
  ITEM_NAME AS ITEM_NAME,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  DO_DTL_STATUS AS DO_DTL_STATUS,
  IS_CANCELLED AS IS_CANCELLED,
  EVENT_CODE AS EVENT_CODE,
  REASON_CODE AS REASON_CODE,
  EXP_INFO_CODE AS EXP_INFO_CODE,
  PARTL_FILL AS PARTL_FILL,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  ORDER_QTY AS ORDER_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  RETAIL_PRICE AS RETAIL_PRICE,
  UNIT_PRICE_AMOUNT AS UNIT_PRICE_AMOUNT,
  UNIT_COST AS UNIT_COST,
  UNIT_TAX_AMOUNT AS UNIT_TAX_AMOUNT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  FREIGHT_REVENUE AS FREIGHT_REVENUE,
  FREIGHT_REVENUE_CURRENCY_CODE AS FREIGHT_REVENUE_CURRENCY_CODE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  UPDATE_TSTMP_exp AS UPDATE_TSTMP_exp,
  LOAD_TSTMP_exp AS LOAD_TSTMP_exp,
  o_VALID_FLAG AS o_VALID_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  IFF(o_VALID_FLAG = 'INSERT', 'DD_INSERT', 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  FTR_UNCHANGED_REC_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("UPD_INS_UPD_7")

# COMMAND ----------
# DBTITLE 1, OMS_ORDER_LINE_ITEM


spark.sql("""MERGE INTO OMS_ORDER_LINE_ITEM AS TARGET
USING
  UPD_INS_UPD_7 AS SOURCE ON TARGET.OMS_LINE_ITEM_ID = SOURCE.LINE_ITEM_ID
  AND TARGET.OMS_ORDER_ID = SOURCE.ORDER_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_ORDER_ID = SOURCE.ORDER_ID,
  TARGET.OMS_LINE_ITEM_ID = SOURCE.LINE_ITEM_ID,
  TARGET.OMS_TC_COMPANY_ID = SOURCE.TC_COMPANY_ID,
  TARGET.OMS_MASTER_ORDER_ID = SOURCE.MASTER_ORDER_ID,
  TARGET.OMS_MO_LINE_ITEM_ID = SOURCE.MO_LINE_ITEM_ID,
  TARGET.OMS_TC_ORDER_LINE_ID = SOURCE.TC_ORDER_LINE_ID,
  TARGET.OMS_PURCHASE_ORDER_NBR = SOURCE.PURCHASE_ORDER_NUMBER,
  TARGET.OMS_PURCHASE_ORDER_LINE_NBR = SOURCE.PURCHASE_ORDER_LINE_NUMBER,
  TARGET.OMS_ITEM_ID = SOURCE.ITEM_ID,
  TARGET.OMS_ITEM_NAME = SOURCE.ITEM_NAME,
  TARGET.OMS_PICKUP_START_TSTMP = SOURCE.PICKUP_START_DTTM,
  TARGET.OMS_PICKUP_END_TSTMP = SOURCE.PICKUP_END_DTTM,
  TARGET.OMS_DELIVERY_START_TSTMP = SOURCE.DELIVERY_START_DTTM,
  TARGET.OMS_DELIVERY_END_TSTMP = SOURCE.DELIVERY_END_DTTM,
  TARGET.OMS_ACTUAL_SHIPPED_TSTMP = SOURCE.ACTUAL_SHIPPED_DTTM,
  TARGET.OMS_DO_DTL_STATUS_ID = SOURCE.DO_DTL_STATUS,
  TARGET.CANCELLED_FLAG = SOURCE.IS_CANCELLED,
  TARGET.OMS_EVENT_CD = SOURCE.EVENT_CODE,
  TARGET.OMS_REASON_CD = SOURCE.REASON_CODE,
  TARGET.OMS_EXP_INFO_CD = SOURCE.EXP_INFO_CODE,
  TARGET.PARTIAL_FILL_FLAG = SOURCE.PARTL_FILL,
  TARGET.ORIG_ORDER_QTY = SOURCE.ORIG_ORDER_QTY,
  TARGET.ADJUSTED_ORDER_QTY = SOURCE.ADJUSTED_ORDER_QTY,
  TARGET.USER_CANCELED_QTY = SOURCE.USER_CANCELED_QTY,
  TARGET.ORDER_QTY = SOURCE.ORDER_QTY,
  TARGET.RECEIVED_QTY = SOURCE.RECEIVED_QTY,
  TARGET.ALLOCATED_QTY = SOURCE.ALLOCATED_QTY,
  TARGET.SHIPPED_QTY = SOURCE.SHIPPED_QTY,
  TARGET.RETAIL_PRICE_AMT = SOURCE.RETAIL_PRICE,
  TARGET.UNIT_PRICE_AMT = SOURCE.UNIT_PRICE_AMOUNT,
  TARGET.UNIT_COST_AMT = SOURCE.UNIT_COST,
  TARGET.UNIT_TAX_AMT = SOURCE.UNIT_TAX_AMOUNT,
  TARGET.UNIT_MONETARY_VALUE = SOURCE.UNIT_MONETARY_VALUE,
  TARGET.TOTAL_MONETARY_VALUE = SOURCE.TOTAL_MONETARY_VALUE,
  TARGET.FREIGHT_REVENUE_AMT = SOURCE.FREIGHT_REVENUE,
  TARGET.FREIGHT_REVENUE_CURRENCY_CD = SOURCE.FREIGHT_REVENUE_CURRENCY_CODE,
  TARGET.OMS_CREATED_SOURCE = SOURCE.CREATED_SOURCE,
  TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM,
  TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM,
  TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP_exp,
  TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP_exp
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_TC_COMPANY_ID = SOURCE.TC_COMPANY_ID
  AND TARGET.OMS_MASTER_ORDER_ID = SOURCE.MASTER_ORDER_ID
  AND TARGET.OMS_MO_LINE_ITEM_ID = SOURCE.MO_LINE_ITEM_ID
  AND TARGET.OMS_TC_ORDER_LINE_ID = SOURCE.TC_ORDER_LINE_ID
  AND TARGET.OMS_PURCHASE_ORDER_NBR = SOURCE.PURCHASE_ORDER_NUMBER
  AND TARGET.OMS_PURCHASE_ORDER_LINE_NBR = SOURCE.PURCHASE_ORDER_LINE_NUMBER
  AND TARGET.OMS_ITEM_ID = SOURCE.ITEM_ID
  AND TARGET.OMS_ITEM_NAME = SOURCE.ITEM_NAME
  AND TARGET.OMS_PICKUP_START_TSTMP = SOURCE.PICKUP_START_DTTM
  AND TARGET.OMS_PICKUP_END_TSTMP = SOURCE.PICKUP_END_DTTM
  AND TARGET.OMS_DELIVERY_START_TSTMP = SOURCE.DELIVERY_START_DTTM
  AND TARGET.OMS_DELIVERY_END_TSTMP = SOURCE.DELIVERY_END_DTTM
  AND TARGET.OMS_ACTUAL_SHIPPED_TSTMP = SOURCE.ACTUAL_SHIPPED_DTTM
  AND TARGET.OMS_DO_DTL_STATUS_ID = SOURCE.DO_DTL_STATUS
  AND TARGET.CANCELLED_FLAG = SOURCE.IS_CANCELLED
  AND TARGET.OMS_EVENT_CD = SOURCE.EVENT_CODE
  AND TARGET.OMS_REASON_CD = SOURCE.REASON_CODE
  AND TARGET.OMS_EXP_INFO_CD = SOURCE.EXP_INFO_CODE
  AND TARGET.PARTIAL_FILL_FLAG = SOURCE.PARTL_FILL
  AND TARGET.ORIG_ORDER_QTY = SOURCE.ORIG_ORDER_QTY
  AND TARGET.ADJUSTED_ORDER_QTY = SOURCE.ADJUSTED_ORDER_QTY
  AND TARGET.USER_CANCELED_QTY = SOURCE.USER_CANCELED_QTY
  AND TARGET.ORDER_QTY = SOURCE.ORDER_QTY
  AND TARGET.RECEIVED_QTY = SOURCE.RECEIVED_QTY
  AND TARGET.ALLOCATED_QTY = SOURCE.ALLOCATED_QTY
  AND TARGET.SHIPPED_QTY = SOURCE.SHIPPED_QTY
  AND TARGET.RETAIL_PRICE_AMT = SOURCE.RETAIL_PRICE
  AND TARGET.UNIT_PRICE_AMT = SOURCE.UNIT_PRICE_AMOUNT
  AND TARGET.UNIT_COST_AMT = SOURCE.UNIT_COST
  AND TARGET.UNIT_TAX_AMT = SOURCE.UNIT_TAX_AMOUNT
  AND TARGET.UNIT_MONETARY_VALUE = SOURCE.UNIT_MONETARY_VALUE
  AND TARGET.TOTAL_MONETARY_VALUE = SOURCE.TOTAL_MONETARY_VALUE
  AND TARGET.FREIGHT_REVENUE_AMT = SOURCE.FREIGHT_REVENUE
  AND TARGET.FREIGHT_REVENUE_CURRENCY_CD = SOURCE.FREIGHT_REVENUE_CURRENCY_CODE
  AND TARGET.OMS_CREATED_SOURCE = SOURCE.CREATED_SOURCE
  AND TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM
  AND TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM
  AND TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP_exp
  AND TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP_exp THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_ORDER_ID,
    TARGET.OMS_LINE_ITEM_ID,
    TARGET.OMS_TC_COMPANY_ID,
    TARGET.OMS_MASTER_ORDER_ID,
    TARGET.OMS_MO_LINE_ITEM_ID,
    TARGET.OMS_TC_ORDER_LINE_ID,
    TARGET.OMS_PURCHASE_ORDER_NBR,
    TARGET.OMS_PURCHASE_ORDER_LINE_NBR,
    TARGET.OMS_ITEM_ID,
    TARGET.OMS_ITEM_NAME,
    TARGET.OMS_PICKUP_START_TSTMP,
    TARGET.OMS_PICKUP_END_TSTMP,
    TARGET.OMS_DELIVERY_START_TSTMP,
    TARGET.OMS_DELIVERY_END_TSTMP,
    TARGET.OMS_ACTUAL_SHIPPED_TSTMP,
    TARGET.OMS_DO_DTL_STATUS_ID,
    TARGET.CANCELLED_FLAG,
    TARGET.OMS_EVENT_CD,
    TARGET.OMS_REASON_CD,
    TARGET.OMS_EXP_INFO_CD,
    TARGET.PARTIAL_FILL_FLAG,
    TARGET.ORIG_ORDER_QTY,
    TARGET.ADJUSTED_ORDER_QTY,
    TARGET.USER_CANCELED_QTY,
    TARGET.ORDER_QTY,
    TARGET.RECEIVED_QTY,
    TARGET.ALLOCATED_QTY,
    TARGET.SHIPPED_QTY,
    TARGET.RETAIL_PRICE_AMT,
    TARGET.UNIT_PRICE_AMT,
    TARGET.UNIT_COST_AMT,
    TARGET.UNIT_TAX_AMT,
    TARGET.UNIT_MONETARY_VALUE,
    TARGET.TOTAL_MONETARY_VALUE,
    TARGET.FREIGHT_REVENUE_AMT,
    TARGET.FREIGHT_REVENUE_CURRENCY_CD,
    TARGET.OMS_CREATED_SOURCE,
    TARGET.OMS_CREATED_TSTMP,
    TARGET.OMS_LAST_UPDATED_TSTMP,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.ORDER_ID,
    SOURCE.LINE_ITEM_ID,
    SOURCE.TC_COMPANY_ID,
    SOURCE.MASTER_ORDER_ID,
    SOURCE.MO_LINE_ITEM_ID,
    SOURCE.TC_ORDER_LINE_ID,
    SOURCE.PURCHASE_ORDER_NUMBER,
    SOURCE.PURCHASE_ORDER_LINE_NUMBER,
    SOURCE.ITEM_ID,
    SOURCE.ITEM_NAME,
    SOURCE.PICKUP_START_DTTM,
    SOURCE.PICKUP_END_DTTM,
    SOURCE.DELIVERY_START_DTTM,
    SOURCE.DELIVERY_END_DTTM,
    SOURCE.ACTUAL_SHIPPED_DTTM,
    SOURCE.DO_DTL_STATUS,
    SOURCE.IS_CANCELLED,
    SOURCE.EVENT_CODE,
    SOURCE.REASON_CODE,
    SOURCE.EXP_INFO_CODE,
    SOURCE.PARTL_FILL,
    SOURCE.ORIG_ORDER_QTY,
    SOURCE.ADJUSTED_ORDER_QTY,
    SOURCE.USER_CANCELED_QTY,
    SOURCE.ORDER_QTY,
    SOURCE.RECEIVED_QTY,
    SOURCE.ALLOCATED_QTY,
    SOURCE.SHIPPED_QTY,
    SOURCE.RETAIL_PRICE,
    SOURCE.UNIT_PRICE_AMOUNT,
    SOURCE.UNIT_COST,
    SOURCE.UNIT_TAX_AMOUNT,
    SOURCE.UNIT_MONETARY_VALUE,
    SOURCE.TOTAL_MONETARY_VALUE,
    SOURCE.FREIGHT_REVENUE,
    SOURCE.FREIGHT_REVENUE_CURRENCY_CODE,
    SOURCE.CREATED_SOURCE,
    SOURCE.CREATED_DTTM,
    SOURCE.LAST_UPDATED_DTTM,
    SOURCE.UPDATE_TSTMP_exp,
    SOURCE.LOAD_TSTMP_exp
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Order_Line_Item")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_Order_Line_Item", mainWorkflowId, parentName)
