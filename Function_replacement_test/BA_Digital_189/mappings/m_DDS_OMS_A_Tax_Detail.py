# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Tax_Detail")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_A_Tax_Detail", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_TAX_DETAIL_PRE_0


query_0 = f"""SELECT
  TAX_DETAIL_ID AS TAX_DETAIL_ID,
  COMPANY_ID AS COMPANY_ID,
  ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  ENTITY_ID AS ENTITY_ID,
  ENTITY_LINE_ID AS ENTITY_LINE_ID,
  TAX_NAME AS TAX_NAME,
  TAX_AMOUNT AS TAX_AMOUNT,
  TAX_RATE AS TAX_RATE,
  TAXABLE_AMOUNT AS TAXABLE_AMOUNT,
  TAX_DTTM AS TAX_DTTM,
  MARK_FOR_DELETION AS MARK_FOR_DELETION,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TAX_TYPE AS TAX_TYPE,
  TAX_CATEGORY AS TAX_CATEGORY,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_TAX_DETAIL_PRE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_A_TAX_DETAIL_PRE_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_A_TAX_DETAIL_PRE_1


query_1 = f"""SELECT
  TAX_DETAIL_ID AS TAX_DETAIL_ID,
  COMPANY_ID AS COMPANY_ID,
  ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  ENTITY_ID AS ENTITY_ID,
  ENTITY_LINE_ID AS ENTITY_LINE_ID,
  TAX_NAME AS TAX_NAME,
  TAX_AMOUNT AS TAX_AMOUNT,
  TAX_RATE AS TAX_RATE,
  TAXABLE_AMOUNT AS TAXABLE_AMOUNT,
  TAX_DTTM AS TAX_DTTM,
  MARK_FOR_DELETION AS MARK_FOR_DELETION,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TAX_TYPE AS TAX_TYPE,
  TAX_CATEGORY AS TAX_CATEGORY,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_TAX_DETAIL_PRE_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_A_TAX_DETAIL_PRE_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_TAX_DETAIL_2


query_2 = f"""SELECT
  OMS_TAX_DETAIL_ID AS OMS_TAX_DETAIL_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  OMS_ENTITY_TYPE_ID AS OMS_ENTITY_TYPE_ID,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_LINE_ID AS OMS_ENTITY_LINE_ID,
  OMS_TAX_TYPE AS OMS_TAX_TYPE,
  OMS_TAX_CATEGORY AS OMS_TAX_CATEGORY,
  OMS_TAX_NAME AS OMS_TAX_NAME,
  TAX_TSTMP AS TAX_TSTMP,
  TAXABLE_AMT AS TAXABLE_AMT,
  TAX_RATE AS TAX_RATE,
  TAX_AMT AS TAX_AMT,
  MARK_FOR_DELETION_FLAG AS MARK_FOR_DELETION_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_TAX_DETAIL"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_A_TAX_DETAIL_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_A_TAX_DETAIL_3


query_3 = f"""SELECT
  OMS_TAX_DETAIL_ID AS OMS_TAX_DETAIL_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  OMS_ENTITY_TYPE_ID AS OMS_ENTITY_TYPE_ID,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_LINE_ID AS OMS_ENTITY_LINE_ID,
  OMS_TAX_TYPE AS OMS_TAX_TYPE,
  OMS_TAX_CATEGORY AS OMS_TAX_CATEGORY,
  OMS_TAX_NAME AS OMS_TAX_NAME,
  TAX_TSTMP AS TAX_TSTMP,
  TAXABLE_AMT AS TAXABLE_AMT,
  TAX_RATE AS TAX_RATE,
  TAX_AMT AS TAX_AMT,
  MARK_FOR_DELETION_FLAG AS MARK_FOR_DELETION_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_TAX_DETAIL_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_A_TAX_DETAIL_3")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_A_TAX_DETAIL_4


query_4 = f"""SELECT
  DETAIL.TAX_DETAIL_ID AS TAX_DETAIL_ID,
  DETAIL.COMPANY_ID AS COMPANY_ID,
  DETAIL.ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  DETAIL.ENTITY_ID AS ENTITY_ID,
  DETAIL.ENTITY_LINE_ID AS ENTITY_LINE_ID,
  DETAIL.TAX_NAME AS TAX_NAME,
  DETAIL.TAX_AMOUNT AS TAX_AMOUNT,
  DETAIL.TAX_RATE AS TAX_RATE,
  DETAIL.TAXABLE_AMOUNT AS TAXABLE_AMOUNT,
  DETAIL.TAX_DTTM AS TAX_DTTM,
  DETAIL.MARK_FOR_DELETION AS MARK_FOR_DELETION,
  DETAIL.CREATED_DTTM AS CREATED_DTTM,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.TAX_TYPE AS TAX_TYPE,
  DETAIL.TAX_CATEGORY AS TAX_CATEGORY,
  MASTER.OMS_TAX_DETAIL_ID AS lkp_OMS_TAX_DETAIL_ID,
  MASTER.OMS_COMPANY_ID AS lkp_OMS_COMPANY_ID,
  MASTER.OMS_ENTITY_TYPE_ID AS lkp_OMS_ENTITY_TYPE_ID,
  MASTER.OMS_ENTITY_ID AS lkp_OMS_ENTITY_ID,
  MASTER.OMS_ENTITY_LINE_ID AS lkp_OMS_ENTITY_LINE_ID,
  MASTER.OMS_TAX_TYPE AS lkp_OMS_TAX_TYPE,
  MASTER.OMS_TAX_CATEGORY AS lkp_OMS_TAX_CATEGORY,
  MASTER.OMS_TAX_NAME AS lkp_OMS_TAX_NAME,
  MASTER.TAX_TSTMP AS lkp_TAX_TSTMP,
  MASTER.TAXABLE_AMT AS lkp_TAXABLE_AMT,
  MASTER.TAX_RATE AS lkp_TAX_RATE1,
  MASTER.TAX_AMT AS lkp_TAX_AMT,
  MASTER.MARK_FOR_DELETION_FLAG AS lkp_MARK_FOR_DELETION_FLAG,
  MASTER.OMS_CREATED_TSTMP AS lkp_OMS_CREATED_TSTMP,
  MASTER.OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_A_TAX_DETAIL_3 MASTER
  RIGHT JOIN SQ_Shortcut_to_OMS_A_TAX_DETAIL_PRE_1 DETAIL ON MASTER.OMS_TAX_DETAIL_ID = DETAIL.TAX_DETAIL_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_OMS_A_TAX_DETAIL_4")

# COMMAND ----------
# DBTITLE 1, FIL_UNCHANGED_RECORDS_5


query_5 = f"""SELECT
  TAX_DETAIL_ID AS TAX_DETAIL_ID,
  COMPANY_ID AS COMPANY_ID,
  ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  ENTITY_ID AS ENTITY_ID,
  ENTITY_LINE_ID AS ENTITY_LINE_ID,
  TAX_NAME AS TAX_NAME,
  TAX_AMOUNT AS TAX_AMOUNT,
  TAX_RATE AS TAX_RATE,
  TAXABLE_AMOUNT AS TAXABLE_AMOUNT,
  TAX_DTTM AS TAX_DTTM,
  MARK_FOR_DELETION AS MARK_FOR_DELETION,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TAX_TYPE AS TAX_TYPE,
  TAX_CATEGORY AS TAX_CATEGORY,
  lkp_OMS_TAX_DETAIL_ID AS lkp_OMS_TAX_DETAIL_ID,
  lkp_OMS_COMPANY_ID AS lkp_OMS_COMPANY_ID,
  lkp_OMS_ENTITY_TYPE_ID AS lkp_OMS_ENTITY_TYPE_ID,
  lkp_OMS_ENTITY_ID AS lkp_OMS_ENTITY_ID,
  lkp_OMS_ENTITY_LINE_ID AS lkp_OMS_ENTITY_LINE_ID,
  lkp_OMS_TAX_TYPE AS lkp_OMS_TAX_TYPE,
  lkp_OMS_TAX_CATEGORY AS lkp_OMS_TAX_CATEGORY,
  lkp_OMS_TAX_NAME AS lkp_OMS_TAX_NAME,
  lkp_TAX_TSTMP AS lkp_TAX_TSTMP,
  lkp_TAXABLE_AMT AS lkp_TAXABLE_AMT,
  lkp_TAX_RATE1 AS lkp_TAX_RATE1,
  lkp_TAX_AMT AS lkp_TAX_AMT,
  lkp_MARK_FOR_DELETION_FLAG AS lkp_MARK_FOR_DELETION_FLAG,
  lkp_OMS_CREATED_TSTMP AS lkp_OMS_CREATED_TSTMP,
  lkp_OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  lkp_LOAD_TSTMP AS lkp_LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_A_TAX_DETAIL_4
WHERE
  ISNULL(lkp_OMS_TAX_DETAIL_ID)
  OR (
    NOT ISNULL(lkp_OMS_TAX_DETAIL_ID)
    AND (
      IFF(ISNULL(COMPANY_ID), 9999, COMPANY_ID) <> IFF(
        ISNULL(lkp_OMS_COMPANY_ID),
        9999,
        lkp_OMS_COMPANY_ID
      )
      OR IFF(ISNULL(ENTITY_TYPE_ID), 9999, ENTITY_TYPE_ID) <> IFF(
        ISNULL(lkp_OMS_ENTITY_TYPE_ID),
        9999,
        lkp_OMS_ENTITY_TYPE_ID
      )
      OR IFF(ISNULL(ENTITY_ID), 9999, ENTITY_ID) <> IFF(ISNULL(lkp_OMS_ENTITY_ID), 9999, lkp_OMS_ENTITY_ID)
      OR IFF(ISNULL(ENTITY_LINE_ID), 9999, ENTITY_LINE_ID) <> IFF(
        ISNULL(lkp_OMS_ENTITY_LINE_ID),
        9999,
        lkp_OMS_ENTITY_LINE_ID
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(TAX_TYPE))),
        ' ',
        LTRIM(RTRIM(TAX_TYPE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_TAX_TYPE))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_TAX_TYPE))
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(TAX_CATEGORY))),
        ' ',
        LTRIM(RTRIM(TAX_CATEGORY))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_TAX_CATEGORY))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_TAX_CATEGORY))
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(TAX_NAME))),
        ' ',
        LTRIM(RTRIM(TAX_NAME))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_TAX_NAME))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_TAX_NAME))
      )
      OR IFF(
        ISNULL(TAX_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        TAX_DTTM
      ) <> IFF(
        ISNULL(lkp_TAX_TSTMP),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        lkp_TAX_TSTMP
      )
      OR IFF(ISNULL(TAXABLE_AMOUNT), 9999, TAXABLE_AMOUNT) <> IFF(ISNULL(lkp_TAXABLE_AMT), 9999, lkp_TAXABLE_AMT)
      OR IFF(ISNULL(TAX_RATE), 9999, TAX_RATE) <> IFF(ISNULL(lkp_TAX_RATE1), 9999, lkp_TAX_RATE1)
      OR IFF(ISNULL(TAX_AMOUNT), 9999, TAX_AMOUNT) <> IFF(ISNULL(lkp_TAX_AMT), 9999, lkp_TAX_AMT)
      OR IFF(ISNULL(MARK_FOR_DELETION), 9999, MARK_FOR_DELETION) <> IFF(
        ISNULL(lkp_MARK_FOR_DELETION_FLAG),
        9999,
        lkp_MARK_FOR_DELETION_FLAG
      )
      OR IFF(
        ISNULL(CREATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        CREATED_DTTM
      ) <> IFF(
        ISNULL(lkp_OMS_CREATED_TSTMP),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        lkp_OMS_CREATED_TSTMP
      )
      OR IFF(
        ISNULL(LAST_UPDATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        LAST_UPDATED_DTTM
      ) <> IFF(
        ISNULL(lkp_OMS_LAST_UPDATED_TSTMP),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        lkp_OMS_LAST_UPDATED_TSTMP
      )
    )
  )"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("FIL_UNCHANGED_RECORDS_5")

# COMMAND ----------
# DBTITLE 1, EXP_UPDATE_FLAG_6


query_6 = f"""SELECT
  TAX_DETAIL_ID AS TAX_DETAIL_ID,
  COMPANY_ID AS COMPANY_ID,
  ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  ENTITY_ID AS ENTITY_ID,
  ENTITY_LINE_ID AS ENTITY_LINE_ID,
  TAX_NAME AS TAX_NAME,
  TAX_AMOUNT AS TAX_AMOUNT,
  TAX_RATE AS TAX_RATE,
  TAXABLE_AMOUNT AS TAXABLE_AMOUNT,
  TAX_DTTM AS TAX_DTTM,
  MARK_FOR_DELETION AS MARK_FOR_DELETION,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TAX_TYPE AS TAX_TYPE,
  TAX_CATEGORY AS TAX_CATEGORY,
  now() AS o_UPDATE_TSTMP,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS o_LOAD_TSTMP,
  IFF(ISNULL(lkp_OMS_TAX_DETAIL_ID), 1, 2) AS o_UPDATE_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_UNCHANGED_RECORDS_5"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("EXP_UPDATE_FLAG_6")

# COMMAND ----------
# DBTITLE 1, UPD_INSERT_UPDATE_7


query_7 = f"""SELECT
  TAX_DETAIL_ID AS TAX_DETAIL_ID,
  COMPANY_ID AS COMPANY_ID,
  ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  ENTITY_ID AS ENTITY_ID,
  ENTITY_LINE_ID AS ENTITY_LINE_ID,
  TAX_NAME AS TAX_NAME,
  TAX_AMOUNT AS TAX_AMOUNT,
  TAX_RATE AS TAX_RATE,
  TAXABLE_AMOUNT AS TAXABLE_AMOUNT,
  TAX_DTTM AS TAX_DTTM,
  MARK_FOR_DELETION AS MARK_FOR_DELETION,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TAX_TYPE AS TAX_TYPE,
  TAX_CATEGORY AS TAX_CATEGORY,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  o_UPDATE_FLAG AS o_UPDATE_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(o_UPDATE_FLAG, 1, 'DD_INSERT', 2, 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  EXP_UPDATE_FLAG_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("UPD_INSERT_UPDATE_7")

# COMMAND ----------
# DBTITLE 1, OMS_A_TAX_DETAIL


spark.sql("""MERGE INTO OMS_A_TAX_DETAIL AS TARGET
USING
  UPD_INSERT_UPDATE_7 AS SOURCE ON TARGET.OMS_TAX_DETAIL_ID = SOURCE.TAX_DETAIL_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_TAX_DETAIL_ID = SOURCE.TAX_DETAIL_ID,
  TARGET.OMS_COMPANY_ID = SOURCE.COMPANY_ID,
  TARGET.OMS_ENTITY_TYPE_ID = SOURCE.ENTITY_TYPE_ID,
  TARGET.OMS_ENTITY_ID = SOURCE.ENTITY_ID,
  TARGET.OMS_ENTITY_LINE_ID = SOURCE.ENTITY_LINE_ID,
  TARGET.OMS_TAX_TYPE = SOURCE.TAX_TYPE,
  TARGET.OMS_TAX_CATEGORY = SOURCE.TAX_CATEGORY,
  TARGET.OMS_TAX_NAME = SOURCE.TAX_NAME,
  TARGET.TAX_TSTMP = SOURCE.TAX_DTTM,
  TARGET.TAXABLE_AMT = SOURCE.TAXABLE_AMOUNT,
  TARGET.TAX_RATE = SOURCE.TAX_RATE,
  TARGET.TAX_AMT = SOURCE.TAX_AMOUNT,
  TARGET.MARK_FOR_DELETION_FLAG = SOURCE.MARK_FOR_DELETION,
  TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM,
  TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM,
  TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_COMPANY_ID = SOURCE.COMPANY_ID
  AND TARGET.OMS_ENTITY_TYPE_ID = SOURCE.ENTITY_TYPE_ID
  AND TARGET.OMS_ENTITY_ID = SOURCE.ENTITY_ID
  AND TARGET.OMS_ENTITY_LINE_ID = SOURCE.ENTITY_LINE_ID
  AND TARGET.OMS_TAX_TYPE = SOURCE.TAX_TYPE
  AND TARGET.OMS_TAX_CATEGORY = SOURCE.TAX_CATEGORY
  AND TARGET.OMS_TAX_NAME = SOURCE.TAX_NAME
  AND TARGET.TAX_TSTMP = SOURCE.TAX_DTTM
  AND TARGET.TAXABLE_AMT = SOURCE.TAXABLE_AMOUNT
  AND TARGET.TAX_RATE = SOURCE.TAX_RATE
  AND TARGET.TAX_AMT = SOURCE.TAX_AMOUNT
  AND TARGET.MARK_FOR_DELETION_FLAG = SOURCE.MARK_FOR_DELETION
  AND TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM
  AND TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM
  AND TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_TAX_DETAIL_ID,
    TARGET.OMS_COMPANY_ID,
    TARGET.OMS_ENTITY_TYPE_ID,
    TARGET.OMS_ENTITY_ID,
    TARGET.OMS_ENTITY_LINE_ID,
    TARGET.OMS_TAX_TYPE,
    TARGET.OMS_TAX_CATEGORY,
    TARGET.OMS_TAX_NAME,
    TARGET.TAX_TSTMP,
    TARGET.TAXABLE_AMT,
    TARGET.TAX_RATE,
    TARGET.TAX_AMT,
    TARGET.MARK_FOR_DELETION_FLAG,
    TARGET.OMS_CREATED_TSTMP,
    TARGET.OMS_LAST_UPDATED_TSTMP,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.TAX_DETAIL_ID,
    SOURCE.COMPANY_ID,
    SOURCE.ENTITY_TYPE_ID,
    SOURCE.ENTITY_ID,
    SOURCE.ENTITY_LINE_ID,
    SOURCE.TAX_TYPE,
    SOURCE.TAX_CATEGORY,
    SOURCE.TAX_NAME,
    SOURCE.TAX_DTTM,
    SOURCE.TAXABLE_AMOUNT,
    SOURCE.TAX_RATE,
    SOURCE.TAX_AMOUNT,
    SOURCE.MARK_FOR_DELETION,
    SOURCE.CREATED_DTTM,
    SOURCE.LAST_UPDATED_DTTM,
    SOURCE.o_UPDATE_TSTMP,
    SOURCE.o_LOAD_TSTMP
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Tax_Detail")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_A_Tax_Detail", mainWorkflowId, parentName)
