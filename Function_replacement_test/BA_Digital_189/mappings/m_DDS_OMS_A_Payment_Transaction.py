# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Payment_Transaction")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_A_Payment_Transaction", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_PAYMENT_TRANSACTION_0


query_0 = f"""SELECT
  OMS_PAYMENT_TRANSACTION_ID AS OMS_PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  OMS_CREATED_DTTM AS OMS_CREATED_DTTM,
  OMS_LAST_UPDATED_DTTM AS OMS_LAST_UPDATED_DTTM,
  UPDATED_DTTM AS UPDATED_DTTM,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_PAYMENT_TRANSACTION"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_A_PAYMENT_TRANSACTION_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_A_PAYMENT_TRANSACTION_1


query_1 = f"""SELECT
  OMS_PAYMENT_TRANSACTION_ID AS OMS_PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  OMS_CREATED_DTTM AS OMS_CREATED_DTTM,
  OMS_LAST_UPDATED_DTTM AS OMS_LAST_UPDATED_DTTM,
  UPDATED_DTTM AS UPDATED_DTTM,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_PAYMENT_TRANSACTION_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_A_PAYMENT_TRANSACTION_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_PAYMENT_TRANSACTION_PRE_2


query_2 = f"""SELECT
  PAYMENT_TRANSACTION_ID AS PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_PAYMENT_TRANSACTION_PRE"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_A_PAYMENT_TRANSACTION_PRE_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_A_PAYMENT_TRANSACTION_PRE_3


query_3 = f"""SELECT
  PAYMENT_TRANSACTION_ID AS PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_PAYMENT_TRANSACTION_PRE_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_A_PAYMENT_TRANSACTION_PRE_3")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_A_Payment_Transaction_4


query_4 = f"""SELECT
  DETAIL.PAYMENT_TRANSACTION_ID AS PRE_PAYMENT_TRANSACTION_ID,
  DETAIL.EXTERNAL_PAYMENT_TRANS_ID AS PRE_EXTERNAL_PAYMENT_TRANS_ID,
  DETAIL.COMPANY_ID AS PRE_COMPANY_ID,
  DETAIL.PAYMENT_TRANS_TYPE AS PRE_PAYMENT_TRANS_TYPE,
  DETAIL.PAYMENT_DETAIL_ID AS PRE_PAYMENT_DETAIL_ID,
  DETAIL.MERCH_ID AS PRE_MERCH_ID,
  DETAIL.MERCH_PASSWORD AS PRE_MERCH_PASSWORD,
  DETAIL.REQUESTED_AMOUNT AS PRE_REQUESTED_AMOUNT,
  DETAIL.REQUEST_ID AS PRE_REQUEST_ID,
  DETAIL.REQUEST_TOKEN AS PRE_REQUEST_TOKEN,
  DETAIL.REQUESTED_DTTM AS PRE_REQUESTED_DTTM,
  DETAIL.FOLLOW_ON_ID AS PRE_FOLLOW_ON_ID,
  DETAIL.FOLLOW_ON_TOKEN AS PRE_FOLLOW_ON_TOKEN,
  DETAIL.PROCESSED_AMOUNT AS PRE_PROCESSED_AMOUNT,
  DETAIL.TRANSACTION_DTTM AS PRE_TRANSACTION_DTTM,
  DETAIL.TRANSACTION_EXP_DATE AS PRE_TRANSACTION_EXP_DATE,
  DETAIL.NO_OF_TRIES_LEFT AS PRE_NO_OF_TRIES_LEFT,
  DETAIL.RECONCILLATION_ID AS PRE_RECONCILLATION_ID,
  DETAIL.TRANS_RESP_DECISION AS PRE_TRANS_RESP_DECISION,
  DETAIL.TRANS_RESP_DECISION_DESC AS PRE_TRANS_RESP_DECISION_DESC,
  DETAIL.EXTERNAL_RESPONSE_CODE AS PRE_EXTERNAL_RESPONSE_CODE,
  DETAIL.EXTERNAL_RESPONSE_MSG AS PRE_EXTERNAL_RESPONSE_MSG,
  DETAIL.RECORD_STATUS AS PRE_RECORD_STATUS,
  DETAIL.PROCESS_COUNT AS PRE_PROCESS_COUNT,
  DETAIL.CREATED_SOURCE AS PRE_CREATED_SOURCE,
  DETAIL.CREATED_SOURCE_TYPE AS PRE_CREATED_SOURCE_TYPE,
  DETAIL.CREATED_DTTM AS PRE_CREATED_DTTM,
  DETAIL.LAST_UPDATED_SOURCE AS PRE_LAST_UPDATED_SOURCE,
  DETAIL.LAST_UPDATED_SOURCE_TYPE AS PRE_LAST_UPDATED_SOURCE_TYPE,
  DETAIL.LAST_UPDATED_DTTM AS PRE_LAST_UPDATED_DTTM,
  DETAIL.IS_DELETED AS PRE_IS_DELETED,
  DETAIL.COMBO_REQUESTED_ID AS PRE_COMBO_REQUESTED_ID,
  DETAIL.COMBO_REQUESTED_TOKEN AS PRE_COMBO_REQUESTED_TOKEN,
  DETAIL.PAYMENT_PROCESS_PARAMETER AS PRE_PAYMENT_PROCESS_PARAMETER,
  DETAIL.BYPASS AS PRE_BYPASS,
  DETAIL.LAST_UPDATED_PROCESS AS PRE_LAST_UPDATED_PROCESS,
  DETAIL.TRANS_RESP_DECISION_CODE AS PRE_TRANS_RESP_DECISION_CODE,
  DETAIL.MERCH_SIGNATURE AS PRE_MERCH_SIGNATURE,
  DETAIL.FD_BANK_RESPONSE_CODE AS PRE_FD_BANK_RESPONSE_CODE,
  DETAIL.IS_AUTHORIZED AS PRE_IS_AUTHORIZED,
  MASTER.OMS_PAYMENT_TRANSACTION_ID AS TGT_OMS_PAYMENT_TRANSACTION_ID,
  MASTER.EXTERNAL_PAYMENT_TRANS_ID AS TGT_EXTERNAL_PAYMENT_TRANS_ID,
  MASTER.COMPANY_ID AS TGT_COMPANY_ID,
  MASTER.PAYMENT_TRANS_TYPE AS TGT_PAYMENT_TRANS_TYPE,
  MASTER.PAYMENT_DETAIL_ID AS TGT_PAYMENT_DETAIL_ID,
  MASTER.MERCH_ID AS TGT_MERCH_ID,
  MASTER.MERCH_PASSWORD AS TGT_MERCH_PASSWORD,
  MASTER.REQUESTED_AMOUNT AS TGT_REQUESTED_AMOUNT,
  MASTER.REQUEST_ID AS TGT_REQUEST_ID,
  MASTER.REQUEST_TOKEN AS TGT_REQUEST_TOKEN,
  MASTER.REQUESTED_DTTM AS TGT_REQUESTED_DTTM,
  MASTER.FOLLOW_ON_ID AS TGT_FOLLOW_ON_ID,
  MASTER.FOLLOW_ON_TOKEN AS TGT_FOLLOW_ON_TOKEN,
  MASTER.PROCESSED_AMOUNT AS TGT_PROCESSED_AMOUNT,
  MASTER.TRANSACTION_DTTM AS TGT_TRANSACTION_DTTM,
  MASTER.TRANSACTION_EXP_DATE AS TGT_TRANSACTION_EXP_DATE,
  MASTER.NO_OF_TRIES_LEFT AS TGT_NO_OF_TRIES_LEFT,
  MASTER.RECONCILLATION_ID AS TGT_RECONCILLATION_ID,
  MASTER.TRANS_RESP_DECISION AS TGT_TRANS_RESP_DECISION,
  MASTER.TRANS_RESP_DECISION_DESC AS TGT_TRANS_RESP_DECISION_DESC,
  MASTER.EXTERNAL_RESPONSE_CODE AS TGT_EXTERNAL_RESPONSE_CODE,
  MASTER.EXTERNAL_RESPONSE_MSG AS TGT_EXTERNAL_RESPONSE_MSG,
  MASTER.RECORD_STATUS AS TGT_RECORD_STATUS,
  MASTER.PROCESS_COUNT AS TGT_PROCESS_COUNT,
  MASTER.CREATED_SOURCE AS TGT_CREATED_SOURCE,
  MASTER.CREATED_SOURCE_TYPE AS TGT_CREATED_SOURCE_TYPE,
  MASTER.LAST_UPDATED_SOURCE AS TGT_LAST_UPDATED_SOURCE,
  MASTER.LAST_UPDATED_SOURCE_TYPE AS TGT_LAST_UPDATED_SOURCE_TYPE,
  MASTER.IS_DELETED AS TGT_IS_DELETED,
  MASTER.COMBO_REQUESTED_ID AS TGT_COMBO_REQUESTED_ID,
  MASTER.COMBO_REQUESTED_TOKEN AS TGT_COMBO_REQUESTED_TOKEN,
  MASTER.PAYMENT_PROCESS_PARAMETER AS TGT_PAYMENT_PROCESS_PARAMETER,
  MASTER.BYPASS AS TGT_BYPASS,
  MASTER.LAST_UPDATED_PROCESS AS TGT_LAST_UPDATED_PROCESS,
  MASTER.TRANS_RESP_DECISION_CODE AS TGT_TRANS_RESP_DECISION_CODE,
  MASTER.MERCH_SIGNATURE AS TGT_MERCH_SIGNATURE,
  MASTER.FD_BANK_RESPONSE_CODE AS TGT_FD_BANK_RESPONSE_CODE,
  MASTER.IS_AUTHORIZED AS TGT_IS_AUTHORIZED,
  MASTER.OMS_CREATED_DTTM AS TGT_OMS_CREATED_DTTM,
  MASTER.OMS_LAST_UPDATED_DTTM AS TGT_OMS_LAST_UPDATED_DTTM,
  MASTER.UPDATED_DTTM AS TGT_UPDATED_DTTM,
  MASTER.LOAD_TSTMP AS TGT_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_A_PAYMENT_TRANSACTION_1 MASTER
  RIGHT JOIN SQ_Shortcut_to_OMS_A_PAYMENT_TRANSACTION_PRE_3 DETAIL ON MASTER.OMS_PAYMENT_TRANSACTION_ID = DETAIL.PAYMENT_TRANSACTION_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_OMS_A_Payment_Transaction_4")

# COMMAND ----------
# DBTITLE 1, FLT_Insert_Update_Records_5


query_5 = f"""SELECT
  PRE_PAYMENT_TRANSACTION_ID AS PRE_PAYMENT_TRANSACTION_ID,
  PRE_EXTERNAL_PAYMENT_TRANS_ID AS PRE_EXTERNAL_PAYMENT_TRANS_ID,
  PRE_COMPANY_ID AS PRE_COMPANY_ID,
  PRE_PAYMENT_TRANS_TYPE AS PRE_PAYMENT_TRANS_TYPE,
  PRE_PAYMENT_DETAIL_ID AS PRE_PAYMENT_DETAIL_ID,
  PRE_MERCH_ID AS PRE_MERCH_ID,
  PRE_MERCH_PASSWORD AS PRE_MERCH_PASSWORD,
  PRE_REQUESTED_AMOUNT AS PRE_REQUESTED_AMOUNT,
  PRE_REQUEST_ID AS PRE_REQUEST_ID,
  PRE_REQUEST_TOKEN AS PRE_REQUEST_TOKEN,
  PRE_REQUESTED_DTTM AS PRE_REQUESTED_DTTM,
  PRE_FOLLOW_ON_ID AS PRE_FOLLOW_ON_ID,
  PRE_FOLLOW_ON_TOKEN AS PRE_FOLLOW_ON_TOKEN,
  PRE_PROCESSED_AMOUNT AS PRE_PROCESSED_AMOUNT,
  PRE_TRANSACTION_DTTM AS PRE_TRANSACTION_DTTM,
  PRE_TRANSACTION_EXP_DATE AS PRE_TRANSACTION_EXP_DATE,
  PRE_NO_OF_TRIES_LEFT AS PRE_NO_OF_TRIES_LEFT,
  PRE_RECONCILLATION_ID AS PRE_RECONCILLATION_ID,
  PRE_TRANS_RESP_DECISION AS PRE_TRANS_RESP_DECISION,
  PRE_TRANS_RESP_DECISION_DESC AS PRE_TRANS_RESP_DECISION_DESC,
  PRE_EXTERNAL_RESPONSE_CODE AS PRE_EXTERNAL_RESPONSE_CODE,
  PRE_EXTERNAL_RESPONSE_MSG AS PRE_EXTERNAL_RESPONSE_MSG,
  PRE_RECORD_STATUS AS PRE_RECORD_STATUS,
  PRE_PROCESS_COUNT AS PRE_PROCESS_COUNT,
  PRE_CREATED_SOURCE AS PRE_CREATED_SOURCE,
  PRE_CREATED_SOURCE_TYPE AS PRE_CREATED_SOURCE_TYPE,
  PRE_CREATED_DTTM AS PRE_CREATED_DTTM,
  PRE_LAST_UPDATED_SOURCE AS PRE_LAST_UPDATED_SOURCE,
  PRE_LAST_UPDATED_SOURCE_TYPE AS PRE_LAST_UPDATED_SOURCE_TYPE,
  PRE_LAST_UPDATED_DTTM AS PRE_LAST_UPDATED_DTTM,
  PRE_IS_DELETED AS PRE_IS_DELETED,
  PRE_COMBO_REQUESTED_ID AS PRE_COMBO_REQUESTED_ID,
  PRE_COMBO_REQUESTED_TOKEN AS PRE_COMBO_REQUESTED_TOKEN,
  PRE_PAYMENT_PROCESS_PARAMETER AS PRE_PAYMENT_PROCESS_PARAMETER,
  PRE_BYPASS AS PRE_BYPASS,
  PRE_LAST_UPDATED_PROCESS AS PRE_LAST_UPDATED_PROCESS,
  PRE_TRANS_RESP_DECISION_CODE AS PRE_TRANS_RESP_DECISION_CODE,
  PRE_MERCH_SIGNATURE AS PRE_MERCH_SIGNATURE,
  PRE_FD_BANK_RESPONSE_CODE AS PRE_FD_BANK_RESPONSE_CODE,
  PRE_IS_AUTHORIZED AS PRE_IS_AUTHORIZED,
  TGT_OMS_PAYMENT_TRANSACTION_ID AS TGT_OMS_PAYMENT_TRANSACTION_ID,
  TGT_EXTERNAL_PAYMENT_TRANS_ID AS TGT_EXTERNAL_PAYMENT_TRANS_ID,
  TGT_COMPANY_ID AS TGT_COMPANY_ID,
  TGT_PAYMENT_TRANS_TYPE AS TGT_PAYMENT_TRANS_TYPE,
  TGT_PAYMENT_DETAIL_ID AS TGT_PAYMENT_DETAIL_ID,
  TGT_MERCH_ID AS TGT_MERCH_ID,
  TGT_MERCH_PASSWORD AS TGT_MERCH_PASSWORD,
  TGT_REQUESTED_AMOUNT AS TGT_REQUESTED_AMOUNT,
  TGT_REQUEST_ID AS TGT_REQUEST_ID,
  TGT_REQUEST_TOKEN AS TGT_REQUEST_TOKEN,
  TGT_REQUESTED_DTTM AS TGT_REQUESTED_DTTM,
  TGT_FOLLOW_ON_ID AS TGT_FOLLOW_ON_ID,
  TGT_FOLLOW_ON_TOKEN AS TGT_FOLLOW_ON_TOKEN,
  TGT_PROCESSED_AMOUNT AS TGT_PROCESSED_AMOUNT,
  TGT_TRANSACTION_DTTM AS TGT_TRANSACTION_DTTM,
  TGT_TRANSACTION_EXP_DATE AS TGT_TRANSACTION_EXP_DATE,
  TGT_NO_OF_TRIES_LEFT AS TGT_NO_OF_TRIES_LEFT,
  TGT_RECONCILLATION_ID AS TGT_RECONCILLATION_ID,
  TGT_TRANS_RESP_DECISION AS TGT_TRANS_RESP_DECISION,
  TGT_TRANS_RESP_DECISION_DESC AS TGT_TRANS_RESP_DECISION_DESC,
  TGT_EXTERNAL_RESPONSE_CODE AS TGT_EXTERNAL_RESPONSE_CODE,
  TGT_EXTERNAL_RESPONSE_MSG AS TGT_EXTERNAL_RESPONSE_MSG,
  TGT_RECORD_STATUS AS TGT_RECORD_STATUS,
  TGT_PROCESS_COUNT AS TGT_PROCESS_COUNT,
  TGT_CREATED_SOURCE AS TGT_CREATED_SOURCE,
  TGT_CREATED_SOURCE_TYPE AS TGT_CREATED_SOURCE_TYPE,
  TGT_LAST_UPDATED_SOURCE AS TGT_LAST_UPDATED_SOURCE,
  TGT_LAST_UPDATED_SOURCE_TYPE AS TGT_LAST_UPDATED_SOURCE_TYPE,
  TGT_IS_DELETED AS TGT_IS_DELETED,
  TGT_COMBO_REQUESTED_ID AS TGT_COMBO_REQUESTED_ID,
  TGT_COMBO_REQUESTED_TOKEN AS TGT_COMBO_REQUESTED_TOKEN,
  TGT_PAYMENT_PROCESS_PARAMETER AS TGT_PAYMENT_PROCESS_PARAMETER,
  TGT_BYPASS AS TGT_BYPASS,
  TGT_LAST_UPDATED_PROCESS AS TGT_LAST_UPDATED_PROCESS,
  TGT_TRANS_RESP_DECISION_CODE AS TGT_TRANS_RESP_DECISION_CODE,
  TGT_MERCH_SIGNATURE AS TGT_MERCH_SIGNATURE,
  TGT_FD_BANK_RESPONSE_CODE AS TGT_FD_BANK_RESPONSE_CODE,
  TGT_IS_AUTHORIZED AS TGT_IS_AUTHORIZED,
  TGT_OMS_CREATED_DTTM AS TGT_OMS_CREATED_DTTM,
  TGT_OMS_LAST_UPDATED_DTTM AS TGT_OMS_LAST_UPDATED_DTTM,
  TGT_UPDATED_DTTM AS TGT_UPDATED_DTTM,
  TGT_LOAD_TSTMP AS TGT_LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_A_Payment_Transaction_4
WHERE
  ISNULL(TGT_OMS_PAYMENT_TRANSACTION_ID)
  OR (
    NOT ISNULL(TGT_OMS_PAYMENT_TRANSACTION_ID)
    AND (
      IFF(
        ISNULL(TGT_REQUESTED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        TGT_REQUESTED_DTTM
      ) <> IFF(
        ISNULL(PRE_REQUESTED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        PRE_REQUESTED_DTTM
      )
      OR IFF(
        ISNULL(TGT_TRANSACTION_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        TGT_TRANSACTION_DTTM
      ) <> IFF(
        ISNULL(PRE_TRANSACTION_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        PRE_TRANSACTION_DTTM
      )
      OR IFF(
        ISNULL(TGT_TRANSACTION_EXP_DATE),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        TGT_TRANSACTION_EXP_DATE
      ) <> IFF(
        ISNULL(PRE_TRANSACTION_EXP_DATE),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        PRE_TRANSACTION_EXP_DATE
      )
      OR IFF(
        ISNULL(TGT_OMS_CREATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        TGT_OMS_CREATED_DTTM
      ) <> IFF(
        ISNULL(PRE_CREATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        PRE_CREATED_DTTM
      )
      OR IFF(
        ISNULL(TGT_OMS_LAST_UPDATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        TGT_OMS_LAST_UPDATED_DTTM
      ) <> IFF(
        ISNULL(PRE_LAST_UPDATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        PRE_LAST_UPDATED_DTTM
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_EXTERNAL_PAYMENT_TRANS_ID))),
        ' ',
        LTRIM(RTRIM(TGT_EXTERNAL_PAYMENT_TRANS_ID))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_EXTERNAL_PAYMENT_TRANS_ID))),
        ' ',
        LTRIM(RTRIM(PRE_EXTERNAL_PAYMENT_TRANS_ID))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_MERCH_ID))),
        ' ',
        LTRIM(RTRIM(TGT_MERCH_ID))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_MERCH_ID))),
        ' ',
        LTRIM(RTRIM(PRE_MERCH_ID))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_MERCH_PASSWORD))),
        ' ',
        LTRIM(RTRIM(TGT_MERCH_PASSWORD))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_MERCH_PASSWORD))),
        ' ',
        LTRIM(RTRIM(PRE_MERCH_PASSWORD))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_REQUEST_ID))),
        ' ',
        LTRIM(RTRIM(TGT_REQUEST_ID))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_REQUEST_ID))),
        ' ',
        LTRIM(RTRIM(PRE_REQUEST_ID))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_REQUEST_TOKEN))),
        ' ',
        LTRIM(RTRIM(TGT_REQUEST_TOKEN))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_REQUEST_TOKEN))),
        ' ',
        LTRIM(RTRIM(PRE_REQUEST_TOKEN))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_FOLLOW_ON_ID))),
        ' ',
        LTRIM(RTRIM(TGT_FOLLOW_ON_ID))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_FOLLOW_ON_ID))),
        ' ',
        LTRIM(RTRIM(PRE_FOLLOW_ON_ID))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_RECONCILLATION_ID))),
        ' ',
        LTRIM(RTRIM(TGT_RECONCILLATION_ID))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_RECONCILLATION_ID))),
        ' ',
        LTRIM(RTRIM(PRE_RECONCILLATION_ID))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_TRANS_RESP_DECISION_DESC))),
        ' ',
        LTRIM(RTRIM(TGT_TRANS_RESP_DECISION_DESC))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_TRANS_RESP_DECISION_DESC))),
        ' ',
        LTRIM(RTRIM(PRE_TRANS_RESP_DECISION_DESC))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_EXTERNAL_RESPONSE_CODE))),
        ' ',
        LTRIM(RTRIM(TGT_EXTERNAL_RESPONSE_CODE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_EXTERNAL_RESPONSE_CODE))),
        ' ',
        LTRIM(RTRIM(PRE_EXTERNAL_RESPONSE_CODE))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_CREATED_SOURCE))),
        ' ',
        LTRIM(RTRIM(TGT_CREATED_SOURCE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_CREATED_SOURCE))),
        ' ',
        LTRIM(RTRIM(PRE_CREATED_SOURCE))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_LAST_UPDATED_SOURCE))),
        ' ',
        LTRIM(RTRIM(TGT_LAST_UPDATED_SOURCE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_LAST_UPDATED_SOURCE))),
        ' ',
        LTRIM(RTRIM(PRE_LAST_UPDATED_SOURCE))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_COMBO_REQUESTED_ID))),
        ' ',
        LTRIM(RTRIM(TGT_COMBO_REQUESTED_ID))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_COMBO_REQUESTED_ID))),
        ' ',
        LTRIM(RTRIM(PRE_COMBO_REQUESTED_ID))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_COMBO_REQUESTED_TOKEN))),
        ' ',
        LTRIM(RTRIM(TGT_COMBO_REQUESTED_TOKEN))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_COMBO_REQUESTED_TOKEN))),
        ' ',
        LTRIM(RTRIM(PRE_COMBO_REQUESTED_TOKEN))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_LAST_UPDATED_PROCESS))),
        ' ',
        LTRIM(RTRIM(TGT_LAST_UPDATED_PROCESS))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_LAST_UPDATED_PROCESS))),
        ' ',
        LTRIM(RTRIM(PRE_LAST_UPDATED_PROCESS))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_TRANS_RESP_DECISION_CODE))),
        ' ',
        LTRIM(RTRIM(TGT_TRANS_RESP_DECISION_CODE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_TRANS_RESP_DECISION_CODE))),
        ' ',
        LTRIM(RTRIM(PRE_TRANS_RESP_DECISION_CODE))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_MERCH_SIGNATURE))),
        ' ',
        LTRIM(RTRIM(TGT_MERCH_SIGNATURE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_MERCH_SIGNATURE))),
        ' ',
        LTRIM(RTRIM(PRE_MERCH_SIGNATURE))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_FD_BANK_RESPONSE_CODE))),
        ' ',
        LTRIM(RTRIM(TGT_FD_BANK_RESPONSE_CODE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_FD_BANK_RESPONSE_CODE))),
        ' ',
        LTRIM(RTRIM(PRE_FD_BANK_RESPONSE_CODE))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_EXTERNAL_RESPONSE_MSG))),
        ' ',
        LTRIM(RTRIM(TGT_EXTERNAL_RESPONSE_MSG))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_EXTERNAL_RESPONSE_MSG))),
        ' ',
        LTRIM(RTRIM(PRE_EXTERNAL_RESPONSE_MSG))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TGT_FOLLOW_ON_TOKEN))),
        ' ',
        LTRIM(RTRIM(TGT_FOLLOW_ON_TOKEN))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(PRE_FOLLOW_ON_TOKEN))),
        ' ',
        LTRIM(RTRIM(PRE_FOLLOW_ON_TOKEN))
      )
      OR IFF(
        ISNULL(TGT_COMPANY_ID),
        TO_INTEGER(999999999),
        TGT_COMPANY_ID
      ) <> IFF(
        ISNULL(PRE_COMPANY_ID),
        TO_INTEGER(999999999),
        PRE_COMPANY_ID
      )
      OR IFF(
        ISNULL(TGT_PAYMENT_DETAIL_ID),
        TO_INTEGER(999999999),
        TGT_PAYMENT_DETAIL_ID
      ) <> IFF(
        ISNULL(PRE_PAYMENT_DETAIL_ID),
        TO_INTEGER(999999999),
        PRE_PAYMENT_DETAIL_ID
      )
      OR IFF(
        ISNULL(TGT_PAYMENT_TRANS_TYPE),
        TO_INTEGER(999999999),
        TGT_PAYMENT_TRANS_TYPE
      ) <> IFF(
        ISNULL(PRE_PAYMENT_TRANS_TYPE),
        TO_INTEGER(999999999),
        PRE_PAYMENT_TRANS_TYPE
      )
      OR IFF(
        ISNULL(TGT_REQUESTED_AMOUNT),
        TO_INTEGER(999999999),
        TGT_REQUESTED_AMOUNT
      ) <> IFF(
        ISNULL(PRE_REQUESTED_AMOUNT),
        TO_INTEGER(999999999),
        PRE_REQUESTED_AMOUNT
      )
      OR IFF(
        ISNULL(TGT_PROCESSED_AMOUNT),
        TO_INTEGER(999999999),
        TGT_PROCESSED_AMOUNT
      ) <> IFF(
        ISNULL(PRE_PROCESSED_AMOUNT),
        TO_INTEGER(999999999),
        PRE_PROCESSED_AMOUNT
      )
      OR IFF(
        ISNULL(TGT_NO_OF_TRIES_LEFT),
        TO_INTEGER(999999999),
        TGT_NO_OF_TRIES_LEFT
      ) <> IFF(
        ISNULL(PRE_NO_OF_TRIES_LEFT),
        TO_INTEGER(999999999),
        PRE_NO_OF_TRIES_LEFT
      )
      OR IFF(
        ISNULL(TGT_TRANS_RESP_DECISION),
        TO_INTEGER(999999999),
        TGT_TRANS_RESP_DECISION
      ) <> IFF(
        ISNULL(PRE_TRANS_RESP_DECISION),
        TO_INTEGER(999999999),
        PRE_TRANS_RESP_DECISION
      )
      OR IFF(
        ISNULL(TGT_RECORD_STATUS),
        TO_INTEGER(999999999),
        TGT_RECORD_STATUS
      ) <> IFF(
        ISNULL(PRE_RECORD_STATUS),
        TO_INTEGER(999999999),
        PRE_RECORD_STATUS
      )
      OR IFF(
        ISNULL(TGT_PROCESS_COUNT),
        TO_INTEGER(999999999),
        TGT_PROCESS_COUNT
      ) <> IFF(
        ISNULL(PRE_PROCESS_COUNT),
        TO_INTEGER(999999999),
        PRE_PROCESS_COUNT
      )
      OR IFF(
        ISNULL(TGT_CREATED_SOURCE_TYPE),
        TO_INTEGER(999999999),
        TGT_CREATED_SOURCE_TYPE
      ) <> IFF(
        ISNULL(PRE_CREATED_SOURCE_TYPE),
        TO_INTEGER(999999999),
        PRE_CREATED_SOURCE_TYPE
      )
      OR IFF(
        ISNULL(TGT_IS_DELETED),
        TO_INTEGER(999999999),
        TGT_IS_DELETED
      ) <> IFF(
        ISNULL(PRE_IS_DELETED),
        TO_INTEGER(999999999),
        PRE_IS_DELETED
      )
      OR IFF(
        ISNULL(TGT_LAST_UPDATED_SOURCE_TYPE),
        TO_INTEGER(999999999),
        TGT_LAST_UPDATED_SOURCE_TYPE
      ) <> IFF(
        ISNULL(PRE_LAST_UPDATED_SOURCE_TYPE),
        TO_INTEGER(999999999),
        PRE_LAST_UPDATED_SOURCE_TYPE
      )
      OR IFF(
        ISNULL(TGT_PAYMENT_PROCESS_PARAMETER),
        TO_INTEGER(999999999),
        TGT_PAYMENT_PROCESS_PARAMETER
      ) <> IFF(
        ISNULL(PRE_PAYMENT_PROCESS_PARAMETER),
        TO_INTEGER(999999999),
        PRE_PAYMENT_PROCESS_PARAMETER
      )
      OR IFF(
        ISNULL(TGT_BYPASS),
        TO_INTEGER(999999999),
        TGT_BYPASS
      ) <> IFF(
        ISNULL(PRE_BYPASS),
        TO_INTEGER(999999999),
        PRE_BYPASS
      )
      OR IFF(
        ISNULL(TGT_IS_AUTHORIZED),
        TO_INTEGER(999999999),
        TGT_IS_AUTHORIZED
      ) <> IFF(
        ISNULL(PRE_IS_AUTHORIZED),
        TO_INTEGER(999999999),
        PRE_IS_AUTHORIZED
      )
    )
  )"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("FLT_Insert_Update_Records_5")

# COMMAND ----------
# DBTITLE 1, EXP_OMS_A_Payment_Transaction_6


query_6 = f"""SELECT
  PRE_PAYMENT_TRANSACTION_ID AS PAYMENT_TRANSACTION_ID,
  PRE_EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  PRE_COMPANY_ID AS COMPANY_ID,
  PRE_PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PRE_PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  PRE_MERCH_ID AS MERCH_ID,
  PRE_MERCH_PASSWORD AS MERCH_PASSWORD,
  PRE_REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  PRE_REQUEST_ID AS REQUEST_ID,
  PRE_REQUEST_TOKEN AS REQUEST_TOKEN,
  PRE_REQUESTED_DTTM AS REQUESTED_DTTM,
  PRE_FOLLOW_ON_ID AS FOLLOW_ON_ID,
  PRE_FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PRE_PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  PRE_TRANSACTION_DTTM AS TRANSACTION_DTTM,
  PRE_TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  PRE_NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  PRE_RECONCILLATION_ID AS RECONCILLATION_ID,
  PRE_TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  PRE_TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  PRE_EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  PRE_EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  PRE_RECORD_STATUS AS RECORD_STATUS,
  PRE_PROCESS_COUNT AS PROCESS_COUNT,
  PRE_CREATED_SOURCE AS CREATED_SOURCE,
  PRE_CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  PRE_LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  PRE_LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  PRE_IS_DELETED AS IS_DELETED,
  PRE_COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  PRE_COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PRE_PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  PRE_BYPASS AS BYPASS,
  PRE_LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  PRE_TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  PRE_MERCH_SIGNATURE AS MERCH_SIGNATURE,
  PRE_FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  PRE_IS_AUTHORIZED AS IS_AUTHORIZED,
  PRE_CREATED_DTTM AS OMS_CREATED_DTTM,
  PRE_LAST_UPDATED_DTTM AS OMS_LAST_UPDATED_DTTM,
  now() AS UPDATED_DTTM,
  IFF(ISNULL(TGT_LOAD_TSTMP), now(), TGT_LOAD_TSTMP) AS LOAD_TSTMP,
  IFF(ISNULL(TGT_OMS_PAYMENT_TRANSACTION_ID), 'I', 'U') AS RECORD_TYPE,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FLT_Insert_Update_Records_5"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("EXP_OMS_A_Payment_Transaction_6")

# COMMAND ----------
# DBTITLE 1, UPD_Insert_Update_Records_7


query_7 = f"""SELECT
  PAYMENT_TRANSACTION_ID AS PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  OMS_CREATED_DTTM AS OMS_CREATED_DTTM,
  OMS_LAST_UPDATED_DTTM AS OMS_LAST_UPDATED_DTTM,
  UPDATED_DTTM AS UPDATED_DTTM,
  LOAD_TSTMP AS LOAD_TSTMP,
  RECORD_TYPE AS RECORD_TYPE,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(RECORD_TYPE, 'I', 'DD_INSERT', 'U', 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  EXP_OMS_A_Payment_Transaction_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("UPD_Insert_Update_Records_7")

# COMMAND ----------
# DBTITLE 1, OMS_A_PAYMENT_TRANSACTION


spark.sql("""MERGE INTO OMS_A_PAYMENT_TRANSACTION AS TARGET
USING
  UPD_Insert_Update_Records_7 AS SOURCE ON TARGET.OMS_PAYMENT_TRANSACTION_ID = SOURCE.PAYMENT_TRANSACTION_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_PAYMENT_TRANSACTION_ID = SOURCE.PAYMENT_TRANSACTION_ID,
  TARGET.EXTERNAL_PAYMENT_TRANS_ID = SOURCE.EXTERNAL_PAYMENT_TRANS_ID,
  TARGET.COMPANY_ID = SOURCE.COMPANY_ID,
  TARGET.PAYMENT_TRANS_TYPE = SOURCE.PAYMENT_TRANS_TYPE,
  TARGET.PAYMENT_DETAIL_ID = SOURCE.PAYMENT_DETAIL_ID,
  TARGET.MERCH_ID = SOURCE.MERCH_ID,
  TARGET.MERCH_PASSWORD = SOURCE.MERCH_PASSWORD,
  TARGET.REQUESTED_AMOUNT = SOURCE.REQUESTED_AMOUNT,
  TARGET.REQUEST_ID = SOURCE.REQUEST_ID,
  TARGET.REQUEST_TOKEN = SOURCE.REQUEST_TOKEN,
  TARGET.REQUESTED_DTTM = SOURCE.REQUESTED_DTTM,
  TARGET.FOLLOW_ON_ID = SOURCE.FOLLOW_ON_ID,
  TARGET.FOLLOW_ON_TOKEN = SOURCE.FOLLOW_ON_TOKEN,
  TARGET.PROCESSED_AMOUNT = SOURCE.PROCESSED_AMOUNT,
  TARGET.TRANSACTION_DTTM = SOURCE.TRANSACTION_DTTM,
  TARGET.TRANSACTION_EXP_DATE = SOURCE.TRANSACTION_EXP_DATE,
  TARGET.NO_OF_TRIES_LEFT = SOURCE.NO_OF_TRIES_LEFT,
  TARGET.RECONCILLATION_ID = SOURCE.RECONCILLATION_ID,
  TARGET.TRANS_RESP_DECISION = SOURCE.TRANS_RESP_DECISION,
  TARGET.TRANS_RESP_DECISION_DESC = SOURCE.TRANS_RESP_DECISION_DESC,
  TARGET.EXTERNAL_RESPONSE_CODE = SOURCE.EXTERNAL_RESPONSE_CODE,
  TARGET.EXTERNAL_RESPONSE_MSG = SOURCE.EXTERNAL_RESPONSE_MSG,
  TARGET.RECORD_STATUS = SOURCE.RECORD_STATUS,
  TARGET.PROCESS_COUNT = SOURCE.PROCESS_COUNT,
  TARGET.CREATED_SOURCE = SOURCE.CREATED_SOURCE,
  TARGET.CREATED_SOURCE_TYPE = SOURCE.CREATED_SOURCE_TYPE,
  TARGET.LAST_UPDATED_SOURCE = SOURCE.LAST_UPDATED_SOURCE,
  TARGET.LAST_UPDATED_SOURCE_TYPE = SOURCE.LAST_UPDATED_SOURCE_TYPE,
  TARGET.IS_DELETED = SOURCE.IS_DELETED,
  TARGET.COMBO_REQUESTED_ID = SOURCE.COMBO_REQUESTED_ID,
  TARGET.COMBO_REQUESTED_TOKEN = SOURCE.COMBO_REQUESTED_TOKEN,
  TARGET.PAYMENT_PROCESS_PARAMETER = SOURCE.PAYMENT_PROCESS_PARAMETER,
  TARGET.BYPASS = SOURCE.BYPASS,
  TARGET.LAST_UPDATED_PROCESS = SOURCE.LAST_UPDATED_PROCESS,
  TARGET.TRANS_RESP_DECISION_CODE = SOURCE.TRANS_RESP_DECISION_CODE,
  TARGET.MERCH_SIGNATURE = SOURCE.MERCH_SIGNATURE,
  TARGET.FD_BANK_RESPONSE_CODE = SOURCE.FD_BANK_RESPONSE_CODE,
  TARGET.IS_AUTHORIZED = SOURCE.IS_AUTHORIZED,
  TARGET.OMS_CREATED_DTTM = SOURCE.OMS_CREATED_DTTM,
  TARGET.OMS_LAST_UPDATED_DTTM = SOURCE.OMS_LAST_UPDATED_DTTM,
  TARGET.UPDATED_DTTM = SOURCE.UPDATED_DTTM,
  TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.EXTERNAL_PAYMENT_TRANS_ID = SOURCE.EXTERNAL_PAYMENT_TRANS_ID
  AND TARGET.COMPANY_ID = SOURCE.COMPANY_ID
  AND TARGET.PAYMENT_TRANS_TYPE = SOURCE.PAYMENT_TRANS_TYPE
  AND TARGET.PAYMENT_DETAIL_ID = SOURCE.PAYMENT_DETAIL_ID
  AND TARGET.MERCH_ID = SOURCE.MERCH_ID
  AND TARGET.MERCH_PASSWORD = SOURCE.MERCH_PASSWORD
  AND TARGET.REQUESTED_AMOUNT = SOURCE.REQUESTED_AMOUNT
  AND TARGET.REQUEST_ID = SOURCE.REQUEST_ID
  AND TARGET.REQUEST_TOKEN = SOURCE.REQUEST_TOKEN
  AND TARGET.REQUESTED_DTTM = SOURCE.REQUESTED_DTTM
  AND TARGET.FOLLOW_ON_ID = SOURCE.FOLLOW_ON_ID
  AND TARGET.FOLLOW_ON_TOKEN = SOURCE.FOLLOW_ON_TOKEN
  AND TARGET.PROCESSED_AMOUNT = SOURCE.PROCESSED_AMOUNT
  AND TARGET.TRANSACTION_DTTM = SOURCE.TRANSACTION_DTTM
  AND TARGET.TRANSACTION_EXP_DATE = SOURCE.TRANSACTION_EXP_DATE
  AND TARGET.NO_OF_TRIES_LEFT = SOURCE.NO_OF_TRIES_LEFT
  AND TARGET.RECONCILLATION_ID = SOURCE.RECONCILLATION_ID
  AND TARGET.TRANS_RESP_DECISION = SOURCE.TRANS_RESP_DECISION
  AND TARGET.TRANS_RESP_DECISION_DESC = SOURCE.TRANS_RESP_DECISION_DESC
  AND TARGET.EXTERNAL_RESPONSE_CODE = SOURCE.EXTERNAL_RESPONSE_CODE
  AND TARGET.EXTERNAL_RESPONSE_MSG = SOURCE.EXTERNAL_RESPONSE_MSG
  AND TARGET.RECORD_STATUS = SOURCE.RECORD_STATUS
  AND TARGET.PROCESS_COUNT = SOURCE.PROCESS_COUNT
  AND TARGET.CREATED_SOURCE = SOURCE.CREATED_SOURCE
  AND TARGET.CREATED_SOURCE_TYPE = SOURCE.CREATED_SOURCE_TYPE
  AND TARGET.LAST_UPDATED_SOURCE = SOURCE.LAST_UPDATED_SOURCE
  AND TARGET.LAST_UPDATED_SOURCE_TYPE = SOURCE.LAST_UPDATED_SOURCE_TYPE
  AND TARGET.IS_DELETED = SOURCE.IS_DELETED
  AND TARGET.COMBO_REQUESTED_ID = SOURCE.COMBO_REQUESTED_ID
  AND TARGET.COMBO_REQUESTED_TOKEN = SOURCE.COMBO_REQUESTED_TOKEN
  AND TARGET.PAYMENT_PROCESS_PARAMETER = SOURCE.PAYMENT_PROCESS_PARAMETER
  AND TARGET.BYPASS = SOURCE.BYPASS
  AND TARGET.LAST_UPDATED_PROCESS = SOURCE.LAST_UPDATED_PROCESS
  AND TARGET.TRANS_RESP_DECISION_CODE = SOURCE.TRANS_RESP_DECISION_CODE
  AND TARGET.MERCH_SIGNATURE = SOURCE.MERCH_SIGNATURE
  AND TARGET.FD_BANK_RESPONSE_CODE = SOURCE.FD_BANK_RESPONSE_CODE
  AND TARGET.IS_AUTHORIZED = SOURCE.IS_AUTHORIZED
  AND TARGET.OMS_CREATED_DTTM = SOURCE.OMS_CREATED_DTTM
  AND TARGET.OMS_LAST_UPDATED_DTTM = SOURCE.OMS_LAST_UPDATED_DTTM
  AND TARGET.UPDATED_DTTM = SOURCE.UPDATED_DTTM
  AND TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_PAYMENT_TRANSACTION_ID,
    TARGET.EXTERNAL_PAYMENT_TRANS_ID,
    TARGET.COMPANY_ID,
    TARGET.PAYMENT_TRANS_TYPE,
    TARGET.PAYMENT_DETAIL_ID,
    TARGET.MERCH_ID,
    TARGET.MERCH_PASSWORD,
    TARGET.REQUESTED_AMOUNT,
    TARGET.REQUEST_ID,
    TARGET.REQUEST_TOKEN,
    TARGET.REQUESTED_DTTM,
    TARGET.FOLLOW_ON_ID,
    TARGET.FOLLOW_ON_TOKEN,
    TARGET.PROCESSED_AMOUNT,
    TARGET.TRANSACTION_DTTM,
    TARGET.TRANSACTION_EXP_DATE,
    TARGET.NO_OF_TRIES_LEFT,
    TARGET.RECONCILLATION_ID,
    TARGET.TRANS_RESP_DECISION,
    TARGET.TRANS_RESP_DECISION_DESC,
    TARGET.EXTERNAL_RESPONSE_CODE,
    TARGET.EXTERNAL_RESPONSE_MSG,
    TARGET.RECORD_STATUS,
    TARGET.PROCESS_COUNT,
    TARGET.CREATED_SOURCE,
    TARGET.CREATED_SOURCE_TYPE,
    TARGET.LAST_UPDATED_SOURCE,
    TARGET.LAST_UPDATED_SOURCE_TYPE,
    TARGET.IS_DELETED,
    TARGET.COMBO_REQUESTED_ID,
    TARGET.COMBO_REQUESTED_TOKEN,
    TARGET.PAYMENT_PROCESS_PARAMETER,
    TARGET.BYPASS,
    TARGET.LAST_UPDATED_PROCESS,
    TARGET.TRANS_RESP_DECISION_CODE,
    TARGET.MERCH_SIGNATURE,
    TARGET.FD_BANK_RESPONSE_CODE,
    TARGET.IS_AUTHORIZED,
    TARGET.OMS_CREATED_DTTM,
    TARGET.OMS_LAST_UPDATED_DTTM,
    TARGET.UPDATED_DTTM,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.PAYMENT_TRANSACTION_ID,
    SOURCE.EXTERNAL_PAYMENT_TRANS_ID,
    SOURCE.COMPANY_ID,
    SOURCE.PAYMENT_TRANS_TYPE,
    SOURCE.PAYMENT_DETAIL_ID,
    SOURCE.MERCH_ID,
    SOURCE.MERCH_PASSWORD,
    SOURCE.REQUESTED_AMOUNT,
    SOURCE.REQUEST_ID,
    SOURCE.REQUEST_TOKEN,
    SOURCE.REQUESTED_DTTM,
    SOURCE.FOLLOW_ON_ID,
    SOURCE.FOLLOW_ON_TOKEN,
    SOURCE.PROCESSED_AMOUNT,
    SOURCE.TRANSACTION_DTTM,
    SOURCE.TRANSACTION_EXP_DATE,
    SOURCE.NO_OF_TRIES_LEFT,
    SOURCE.RECONCILLATION_ID,
    SOURCE.TRANS_RESP_DECISION,
    SOURCE.TRANS_RESP_DECISION_DESC,
    SOURCE.EXTERNAL_RESPONSE_CODE,
    SOURCE.EXTERNAL_RESPONSE_MSG,
    SOURCE.RECORD_STATUS,
    SOURCE.PROCESS_COUNT,
    SOURCE.CREATED_SOURCE,
    SOURCE.CREATED_SOURCE_TYPE,
    SOURCE.LAST_UPDATED_SOURCE,
    SOURCE.LAST_UPDATED_SOURCE_TYPE,
    SOURCE.IS_DELETED,
    SOURCE.COMBO_REQUESTED_ID,
    SOURCE.COMBO_REQUESTED_TOKEN,
    SOURCE.PAYMENT_PROCESS_PARAMETER,
    SOURCE.BYPASS,
    SOURCE.LAST_UPDATED_PROCESS,
    SOURCE.TRANS_RESP_DECISION_CODE,
    SOURCE.MERCH_SIGNATURE,
    SOURCE.FD_BANK_RESPONSE_CODE,
    SOURCE.IS_AUTHORIZED,
    SOURCE.OMS_CREATED_DTTM,
    SOURCE.OMS_LAST_UPDATED_DTTM,
    SOURCE.UPDATED_DTTM,
    SOURCE.LOAD_TSTMP
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Payment_Transaction")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_A_Payment_Transaction", mainWorkflowId, parentName)
