# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Dist_Order_Reason_Code")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_OMS_Dist_Order_Reason_Code", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_FACILITY_0


query_0 = f"""SELECT
  OMS_FACILITY_ID AS OMS_FACILITY_ID,
  FACILITY_TYPE_BITS AS FACILITY_TYPE_BITS,
  MARK_FOR_DELETION_FLAG AS MARK_FOR_DELETION_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_FACILITY"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_FACILITY_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_FACILITY_1


query_1 = f"""SELECT
  OMS_FACILITY_ID AS OMS_FACILITY_ID,
  FACILITY_TYPE_BITS AS FACILITY_TYPE_BITS,
  MARK_FOR_DELETION_FLAG AS MARK_FOR_DELETION_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_FACILITY_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_FACILITY_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDERS_2


query_2 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_ORDER_ID AS OMS_TC_ORDER_ID,
  OMS_PURCHASE_ORDER_ID AS OMS_PURCHASE_ORDER_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_EXT_PURCHASE_ORDER AS OMS_EXT_PURCHASE_ORDER,
  OMS_ORDER_TYPE AS OMS_ORDER_TYPE,
  OMS_ORDER_STATUS_ID AS OMS_ORDER_STATUS_ID,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  OMS_DO_STATUS_ID AS OMS_DO_STATUS_ID,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_BILLING_METHOD_ID AS OMS_BILLING_METHOD_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  OMS_DELIVERY_OPTIONS_ID AS OMS_DELIVERY_OPTIONS_ID,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  PARTIAL_SHIP_CONFIRMATION_FLAG AS PARTIAL_SHIP_CONFIRMATION_FLAG,
  PARTIAL_SHIP_CONFIRMATION_STATUS AS PARTIAL_SHIP_CONFIRMATION_STATUS,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  HAS_SPLIT_FLAG AS HAS_SPLIT_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  BACK_ORDERED_FLAG AS BACK_ORDERED_FLAG,
  OMS_INBOUND_REGION_ID AS OMS_INBOUND_REGION_ID,
  OMS_OUTBOUND_REGION_ID AS OMS_OUTBOUND_REGION_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_CUSTOMER_ID AS OMS_CUSTOMER_ID,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ORDER_DT_TSTMP AS OMS_ORDER_DT_TSTMP,
  OMS_ORDER_RECON_TSTMP AS OMS_ORDER_RECON_TSTMP,
  OMS_SCHED_PICKUP_TSTMP AS OMS_SCHED_PICKUP_TSTMP,
  OMS_SCHED_DELIVERY_TSTMP AS OMS_SCHED_DELIVERY_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  BASELINE_COST AS BASELINE_COST,
  ACTUAL_COST AS ACTUAL_COST,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  REF_NUM1 AS REF_NUM1,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDERS"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_ORDERS_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDERS_3


query_3 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_ORDER_ID AS OMS_TC_ORDER_ID,
  OMS_PURCHASE_ORDER_ID AS OMS_PURCHASE_ORDER_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_EXT_PURCHASE_ORDER AS OMS_EXT_PURCHASE_ORDER,
  OMS_ORDER_TYPE AS OMS_ORDER_TYPE,
  OMS_ORDER_STATUS_ID AS OMS_ORDER_STATUS_ID,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  OMS_DO_STATUS_ID AS OMS_DO_STATUS_ID,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_BILLING_METHOD_ID AS OMS_BILLING_METHOD_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  OMS_DELIVERY_OPTIONS_ID AS OMS_DELIVERY_OPTIONS_ID,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  HAS_SPLIT_FLAG AS HAS_SPLIT_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  BACK_ORDERED_FLAG AS BACK_ORDERED_FLAG,
  OMS_INBOUND_REGION_ID AS OMS_INBOUND_REGION_ID,
  OMS_OUTBOUND_REGION_ID AS OMS_OUTBOUND_REGION_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_CUSTOMER_ID AS OMS_CUSTOMER_ID,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ORDER_DT_TSTMP AS OMS_ORDER_DT_TSTMP,
  OMS_ORDER_RECON_TSTMP AS OMS_ORDER_RECON_TSTMP,
  OMS_SCHED_PICKUP_TSTMP AS OMS_SCHED_PICKUP_TSTMP,
  OMS_SCHED_DELIVERY_TSTMP AS OMS_SCHED_DELIVERY_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  BASELINE_COST AS BASELINE_COST,
  ACTUAL_COST AS ACTUAL_COST,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  REF_NUM1 AS REF_NUM1,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDERS_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDERS_3")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_4


query_4 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  OMS_TC_PO_LINE_ID AS OMS_TC_PO_LINE_ID,
  OMS_PARENT_PO_LINE_ITEM_ID AS OMS_PARENT_PO_LINE_ITEM_ID,
  OMS_ORIGINAL_PO_LINE_ITEM_ID AS OMS_ORIGINAL_PO_LINE_ITEM_ID,
  OMS_PURCHASE_ORDERS_LINE_STATUS_ID AS OMS_PURCHASE_ORDERS_LINE_STATUS_ID,
  ORDER_FULFILLMENT_OPTION_ID AS ORDER_FULFILLMENT_OPTION_ID,
  SKU AS SKU,
  CUST_SKU AS CUST_SKU,
  OMS_PRODUCT_CLASS_ID AS OMS_PRODUCT_CLASS_ID,
  RETURNABLE_FLAG AS RETURNABLE_FLAG,
  EXCHANGEABLE_FLAG AS EXCHANGEABLE_FLAG,
  PRICE_OVERRIDE_FLAG AS PRICE_OVERRIDE_FLAG,
  OMS_STORE_FACILITY_ALIAS_ID AS OMS_STORE_FACILITY_ALIAS_ID,
  OMS_STORE_FACILITY_ID AS OMS_STORE_FACILITY_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  D_FIRST_NAME AS D_FIRST_NAME,
  D_LAST_NAME AS D_LAST_NAME,
  D_ADDR_1 AS D_ADDR_1,
  D_ADDR_2 AS D_ADDR_2,
  D_ADDR_3 AS D_ADDR_3,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CD AS D_POSTAL_CD,
  D_COUNTY AS D_COUNTY,
  D_COUNTRY_CD AS D_COUNTRY_CD,
  D_PHONE_NBR AS D_PHONE_NBR,
  D_EMAIL AS D_EMAIL,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_ALLOC_FINALIZER AS OMS_ALLOC_FINALIZER,
  OMS_DSG_CARRIER_ID AS OMS_DSG_CARRIER_ID,
  DSG_SHIP_VIA AS DSG_SHIP_VIA,
  DO_CREATED_FLAG AS DO_CREATED_FLAG,
  READY_TO_SHIP_FLAG AS READY_TO_SHIP_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  DELETED_FLAG AS DELETED_FLAG,
  OMS_REASON_ID AS OMS_REASON_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  OMS_BACK_ORD_REASON_ID AS OMS_BACK_ORD_REASON_ID,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_REQ_DLVR_TSTMP AS OMS_REQ_DLVR_TSTMP,
  OMS_MUST_DLVR_TSTMP AS OMS_MUST_DLVR_TSTMP,
  OMS_SHIP_BY_DT AS OMS_SHIP_BY_DT,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ORDER_QTY AS ORDER_QTY,
  CANCELLED_QTY AS CANCELLED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  RELEASED_QTY AS RELEASED_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  PPACK_QTY AS PPACK_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  ORIGINAL_PRICE_AMT AS ORIGINAL_PRICE_AMT,
  RETAIL_PRICE_AMT AS RETAIL_PRICE_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  LINE_TOTAL_AMT AS LINE_TOTAL_AMT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  OMS_EXT_CREATED_TSTMP AS OMS_EXT_CREATED_TSTMP,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_PURCHASE_ORDERS_LINE_ITEM"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_4")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_5


query_5 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  OMS_TC_PO_LINE_ID AS OMS_TC_PO_LINE_ID,
  OMS_PARENT_PO_LINE_ITEM_ID AS OMS_PARENT_PO_LINE_ITEM_ID,
  OMS_ORIGINAL_PO_LINE_ITEM_ID AS OMS_ORIGINAL_PO_LINE_ITEM_ID,
  OMS_PURCHASE_ORDERS_LINE_STATUS_ID AS OMS_PURCHASE_ORDERS_LINE_STATUS_ID,
  ORDER_FULFILLMENT_OPTION_ID AS ORDER_FULFILLMENT_OPTION_ID,
  SKU AS SKU,
  CUST_SKU AS CUST_SKU,
  OMS_PRODUCT_CLASS_ID AS OMS_PRODUCT_CLASS_ID,
  RETURNABLE_FLAG AS RETURNABLE_FLAG,
  EXCHANGEABLE_FLAG AS EXCHANGEABLE_FLAG,
  PRICE_OVERRIDE_FLAG AS PRICE_OVERRIDE_FLAG,
  OMS_STORE_FACILITY_ALIAS_ID AS OMS_STORE_FACILITY_ALIAS_ID,
  OMS_STORE_FACILITY_ID AS OMS_STORE_FACILITY_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  D_FIRST_NAME AS D_FIRST_NAME,
  D_LAST_NAME AS D_LAST_NAME,
  D_ADDR_1 AS D_ADDR_1,
  D_ADDR_2 AS D_ADDR_2,
  D_ADDR_3 AS D_ADDR_3,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CD AS D_POSTAL_CD,
  D_COUNTY AS D_COUNTY,
  D_COUNTRY_CD AS D_COUNTRY_CD,
  D_PHONE_NBR AS D_PHONE_NBR,
  D_EMAIL AS D_EMAIL,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_ALLOC_FINALIZER AS OMS_ALLOC_FINALIZER,
  OMS_DSG_CARRIER_ID AS OMS_DSG_CARRIER_ID,
  DSG_SHIP_VIA AS DSG_SHIP_VIA,
  DO_CREATED_FLAG AS DO_CREATED_FLAG,
  READY_TO_SHIP_FLAG AS READY_TO_SHIP_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  DELETED_FLAG AS DELETED_FLAG,
  OMS_REASON_ID AS OMS_REASON_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  OMS_BACK_ORD_REASON_ID AS OMS_BACK_ORD_REASON_ID,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_REQ_DLVR_TSTMP AS OMS_REQ_DLVR_TSTMP,
  OMS_MUST_DLVR_TSTMP AS OMS_MUST_DLVR_TSTMP,
  OMS_SHIP_BY_DT AS OMS_SHIP_BY_DT,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ORDER_QTY AS ORDER_QTY,
  CANCELLED_QTY AS CANCELLED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  RELEASED_QTY AS RELEASED_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  PPACK_QTY AS PPACK_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  ORIGINAL_PRICE_AMT AS ORIGINAL_PRICE_AMT,
  RETAIL_PRICE_AMT AS RETAIL_PRICE_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  LINE_TOTAL_AMT AS LINE_TOTAL_AMT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  OMS_EXT_CREATED_TSTMP AS OMS_EXT_CREATED_TSTMP,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_4
WHERE
  CANCELLED_QTY > 0"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("SQ_Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_5")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_SYS_CODE_6


query_6 = f"""SELECT
  OMS_REC_TYPE AS OMS_REC_TYPE,
  OMS_CODE_TYPE AS OMS_CODE_TYPE,
  OMS_CODE_ID AS OMS_CODE_ID,
  OMS_CODE_DESC AS OMS_CODE_DESC,
  OMS_CODE_SHORT_DESC AS OMS_CODE_SHORT_DESC,
  OMS_SYS_CODE_ID AS OMS_SYS_CODE_ID,
  OMS_SYS_CODE_TYPE_ID AS OMS_SYS_CODE_TYPE_ID,
  OMS_CREATE_TSTMP AS OMS_CREATE_TSTMP,
  OMS_MOD_TSTMP AS OMS_MOD_TSTMP,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_SYS_CODE"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("Shortcut_to_OMS_SYS_CODE_6")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_SYS_CODE_7


query_7 = f"""SELECT
  OMS_REC_TYPE AS OMS_REC_TYPE,
  OMS_CODE_TYPE AS OMS_CODE_TYPE,
  OMS_CODE_ID AS OMS_CODE_ID,
  OMS_CODE_DESC AS OMS_CODE_DESC,
  OMS_CODE_SHORT_DESC AS OMS_CODE_SHORT_DESC,
  OMS_SYS_CODE_ID AS OMS_SYS_CODE_ID,
  OMS_SYS_CODE_TYPE_ID AS OMS_SYS_CODE_TYPE_ID,
  OMS_CREATE_TSTMP AS OMS_CREATE_TSTMP,
  OMS_MOD_TSTMP AS OMS_MOD_TSTMP,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_SYS_CODE_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("SQ_Shortcut_to_OMS_SYS_CODE_7")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_PURCHASE_ORDERS_8


query_8 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_EXT_PURCHASE_ORDERS_ID AS OMS_EXT_PURCHASE_ORDERS_ID,
  OMS_PARENT_PURCHASE_ORDERS_ID AS OMS_PARENT_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_TYPE_ID AS OMS_PURCHASE_ORDERS_TYPE_ID,
  OMS_PURCHASE_ORDERS_STATUS_ID AS OMS_PURCHASE_ORDERS_STATUS_ID,
  OMS_ORDER_CATEGORY_ID AS OMS_ORDER_CATEGORY_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ID,
  OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_DES_SHIP_VIA_FACILITY_ID AS OMS_DES_SHIP_VIA_FACILITY_ID,
  OMS_CUSTOMER_CD AS OMS_CUSTOMER_CD,
  CUSTOMER_FIRST_NAME AS CUSTOMER_FIRST_NAME,
  CUSTOMER_LAST_NAME AS CUSTOMER_LAST_NAME,
  CUSTOMER_PHONE_NBR AS CUSTOMER_PHONE_NBR,
  CUSTOMER_EMAIL AS CUSTOMER_EMAIL,
  OMS_RETURN_REFERENCE_NBR AS OMS_RETURN_REFERENCE_NBR,
  OMS_BILL_OF_LADING_NBR AS OMS_BILL_OF_LADING_NBR,
  OMS_TRANS_RESP_CD AS OMS_TRANS_RESP_CD,
  OMS_COMMODITY_CODE_ID AS OMS_COMMODITY_CODE_ID,
  OMS_CARRIER_ID AS OMS_CARRIER_ID,
  OMS_PRODUCT_CLASS_ID AS OMS_PRODUCT_CLASS_ID,
  OMS_PROTECTION_LEVEL_ID AS OMS_PROTECTION_LEVEL_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_CHANNEL_TYPE_ID AS OMS_CHANNEL_TYPE_ID,
  OMS_CHANNEL_ID AS OMS_CHANNEL_ID,
  OMS_FULFILL_MODE_ID AS OMS_FULFILL_MODE_ID,
  OMS_ENTERED_BY AS OMS_ENTERED_BY,
  OMS_ENTRY_CD AS OMS_ENTRY_CD,
  OMS_PAYMENT_MODE_ID AS OMS_PAYMENT_MODE_ID,
  OMS_PAYMENT_STATUS_ID AS OMS_PAYMENT_STATUS_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  ORDER_RECEIVED_FLAG AS ORDER_RECEIVED_FLAG,
  ON_HOLD_FLAG AS ON_HOLD_FLAG,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  OMS_REASON_ID AS OMS_REASON_ID,
  OMS_DECLINE_REASON_ID AS OMS_DECLINE_REASON_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  IMPORTED_FLAG AS IMPORTED_FLAG,
  PURCHASE_ORDERS_RECONCILED_FLAG AS PURCHASE_ORDERS_RECONCILED_FLAG,
  READY_TO_SHIP_FLAG AS READY_TO_SHIP_FLAG,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  DIRECT_ALLOWED_FLAG AS DIRECT_ALLOWED_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  OMS_PURCHASE_ORDERS_DT_TSTMP AS OMS_PURCHASE_ORDERS_DT_TSTMP,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_REQUESTED_DLVR_TSTMP AS OMS_REQUESTED_DLVR_TSTMP,
  OMS_MUST_DLVR_TSTMP AS OMS_MUST_DLVR_TSTMP,
  OMS_PROMISED_DLVR_TSTMP AS OMS_PROMISED_DLVR_TSTMP,
  OMS_DUE_DT AS OMS_DUE_DT,
  OMS_CANCEL_DT AS OMS_CANCEL_DT,
  OMS_RELEASE_TSTMP AS OMS_RELEASE_TSTMP,
  OMS_FIRST_RCPT_TSTMP AS OMS_FIRST_RCPT_TSTMP,
  OMS_LAST_RCPT_TSTMP AS OMS_LAST_RCPT_TSTMP,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  ORIG_BUDG_COST AS ORIG_BUDG_COST,
  BUDG_COST AS BUDG_COST,
  BUDG_COST_CURRENCY_CD AS BUDG_COST_CURRENCY_CD,
  TAX_CHARGES_AMT AS TAX_CHARGES_AMT,
  MISC_CHARGES_AMT AS MISC_CHARGES_AMT,
  GRAND_TOTAL_AMT AS GRAND_TOTAL_AMT,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  CURRENCY_CD AS CURRENCY_CD,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_PURCHASE_ORDERS"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("Shortcut_to_OMS_PURCHASE_ORDERS_8")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_PURCHASE_ORDERS_9


query_9 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_EXT_PURCHASE_ORDERS_ID AS OMS_EXT_PURCHASE_ORDERS_ID,
  OMS_PARENT_PURCHASE_ORDERS_ID AS OMS_PARENT_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_TYPE_ID AS OMS_PURCHASE_ORDERS_TYPE_ID,
  OMS_PURCHASE_ORDERS_STATUS_ID AS OMS_PURCHASE_ORDERS_STATUS_ID,
  OMS_ORDER_CATEGORY_ID AS OMS_ORDER_CATEGORY_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ID,
  OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_DES_SHIP_VIA_FACILITY_ID AS OMS_DES_SHIP_VIA_FACILITY_ID,
  OMS_CUSTOMER_CD AS OMS_CUSTOMER_CD,
  CUSTOMER_FIRST_NAME AS CUSTOMER_FIRST_NAME,
  CUSTOMER_LAST_NAME AS CUSTOMER_LAST_NAME,
  CUSTOMER_PHONE_NBR AS CUSTOMER_PHONE_NBR,
  CUSTOMER_EMAIL AS CUSTOMER_EMAIL,
  OMS_RETURN_REFERENCE_NBR AS OMS_RETURN_REFERENCE_NBR,
  OMS_BILL_OF_LADING_NBR AS OMS_BILL_OF_LADING_NBR,
  OMS_TRANS_RESP_CD AS OMS_TRANS_RESP_CD,
  OMS_COMMODITY_CODE_ID AS OMS_COMMODITY_CODE_ID,
  OMS_CARRIER_ID AS OMS_CARRIER_ID,
  OMS_PRODUCT_CLASS_ID AS OMS_PRODUCT_CLASS_ID,
  OMS_PROTECTION_LEVEL_ID AS OMS_PROTECTION_LEVEL_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_CHANNEL_TYPE_ID AS OMS_CHANNEL_TYPE_ID,
  OMS_CHANNEL_ID AS OMS_CHANNEL_ID,
  OMS_FULFILL_MODE_ID AS OMS_FULFILL_MODE_ID,
  OMS_ENTERED_BY AS OMS_ENTERED_BY,
  OMS_ENTRY_CD AS OMS_ENTRY_CD,
  OMS_PAYMENT_MODE_ID AS OMS_PAYMENT_MODE_ID,
  OMS_PAYMENT_STATUS_ID AS OMS_PAYMENT_STATUS_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  ORDER_RECEIVED_FLAG AS ORDER_RECEIVED_FLAG,
  ON_HOLD_FLAG AS ON_HOLD_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  OMS_REASON_ID AS OMS_REASON_ID,
  OMS_DECLINE_REASON_ID AS OMS_DECLINE_REASON_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  IMPORTED_FLAG AS IMPORTED_FLAG,
  PURCHASE_ORDERS_RECONCILED_FLAG AS PURCHASE_ORDERS_RECONCILED_FLAG,
  READY_TO_SHIP_FLAG AS READY_TO_SHIP_FLAG,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  DIRECT_ALLOWED_FLAG AS DIRECT_ALLOWED_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  OMS_PURCHASE_ORDERS_DT_TSTMP AS OMS_PURCHASE_ORDERS_DT_TSTMP,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_REQUESTED_DLVR_TSTMP AS OMS_REQUESTED_DLVR_TSTMP,
  OMS_MUST_DLVR_TSTMP AS OMS_MUST_DLVR_TSTMP,
  OMS_PROMISED_DLVR_TSTMP AS OMS_PROMISED_DLVR_TSTMP,
  OMS_DUE_DT AS OMS_DUE_DT,
  OMS_CANCEL_DT AS OMS_CANCEL_DT,
  OMS_RELEASE_TSTMP AS OMS_RELEASE_TSTMP,
  OMS_FIRST_RCPT_TSTMP AS OMS_FIRST_RCPT_TSTMP,
  OMS_LAST_RCPT_TSTMP AS OMS_LAST_RCPT_TSTMP,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  ORIG_BUDG_COST AS ORIG_BUDG_COST,
  BUDG_COST AS BUDG_COST,
  BUDG_COST_CURRENCY_CD AS BUDG_COST_CURRENCY_CD,
  TAX_CHARGES_AMT AS TAX_CHARGES_AMT,
  MISC_CHARGES_AMT AS MISC_CHARGES_AMT,
  GRAND_TOTAL_AMT AS GRAND_TOTAL_AMT,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  CURRENCY_CD AS CURRENCY_CD,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_PURCHASE_ORDERS_8"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("SQ_Shortcut_to_OMS_PURCHASE_ORDERS_9")

# COMMAND ----------
# DBTITLE 1, JNR_PURCHASE_ORDER_LINE_ITEM_10


query_10 = f"""SELECT
  DETAIL.OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  DETAIL.OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  MASTER.OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  MASTER.OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  MASTER.OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  MASTER.CANCELLED_QTY AS pol_CANCELLED_QTY,
  DETAIL.UPDATE_TSTMP AS po_UPDATE_TSTMP,
  MASTER.UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_5 MASTER
  INNER JOIN SQ_Shortcut_to_OMS_PURCHASE_ORDERS_9 DETAIL ON MASTER.OMS_PURCHASE_ORDERS_ID = DETAIL.OMS_PURCHASE_ORDERS_ID"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("JNR_PURCHASE_ORDER_LINE_ITEM_10")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_ORDERS_11


query_11 = f"""SELECT
  DETAIL.po_OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  DETAIL.pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  MASTER.OMS_ORDER_ID AS o_OMS_ORDER_ID,
  MASTER.OMS_PURCHASE_ORDER_ID AS o_OMS_PURCHASE_ORDER_ID,
  MASTER.OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  MASTER.OMS_O_FACILITY_ID AS o_OMS_O_FACILITY_ID,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  MASTER.UPDATE_TSTMP AS o_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ORDERS_3 MASTER
  INNER JOIN JNR_PURCHASE_ORDER_LINE_ITEM_10 DETAIL ON MASTER.OMS_PURCHASE_ORDER_ID = DETAIL.po_OMS_PURCHASE_ORDERS_ID"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("JNR_OMS_ORDERS_11")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_FACILITY_12


query_12 = f"""SELECT
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  DETAIL.pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  DETAIL.o_OMS_ORDER_ID AS o_OMS_ORDER_ID,
  DETAIL.o_OMS_PURCHASE_ORDER_ID AS o_OMS_PURCHASE_ORDER_ID,
  DETAIL.o_OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  DETAIL.o_OMS_O_FACILITY_ID AS o_OMS_O_FACILITY_ID,
  MASTER.OMS_FACILITY_ID AS f_OMS_FACILITY_ID,
  MASTER.FACILITY_TYPE_BITS AS f_FACILITY_TYPE_BITS,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  DETAIL.o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  MASTER.UPDATE_TSTMP AS f_UPDATE_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_FACILITY_1 MASTER
  RIGHT JOIN JNR_OMS_ORDERS_11 DETAIL ON MASTER.OMS_FACILITY_ID = DETAIL.o_OMS_O_FACILITY_ID"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("JNR_OMS_FACILITY_12")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDER_LINE_ITEM_13


query_13 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_LINE_ITEM_ID AS OMS_LINE_ITEM_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_MASTER_ORDER_ID AS OMS_MASTER_ORDER_ID,
  OMS_MO_LINE_ITEM_ID AS OMS_MO_LINE_ITEM_ID,
  OMS_TC_ORDER_LINE_ID AS OMS_TC_ORDER_LINE_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_PURCHASE_ORDER_LINE_NBR AS OMS_PURCHASE_ORDER_LINE_NBR,
  OMS_ITEM_ID AS OMS_ITEM_ID,
  OMS_ITEM_NAME AS OMS_ITEM_NAME,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  OMS_DO_DTL_STATUS_ID AS OMS_DO_DTL_STATUS_ID,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  OMS_EVENT_CD AS OMS_EVENT_CD,
  OMS_REASON_CD AS OMS_REASON_CD,
  OMS_EXP_INFO_CD AS OMS_EXP_INFO_CD,
  PARTIAL_FILL_FLAG AS PARTIAL_FILL_FLAG,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  ORDER_QTY AS ORDER_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  RETAIL_PRICE_AMT AS RETAIL_PRICE_AMT,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  UNIT_COST_AMT AS UNIT_COST_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  FREIGHT_REVENUE_CURRENCY_CD AS FREIGHT_REVENUE_CURRENCY_CD,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDER_LINE_ITEM"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("Shortcut_to_OMS_ORDER_LINE_ITEM_13")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDER_LINE_ITEM_14


query_14 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_LINE_ITEM_ID AS OMS_LINE_ITEM_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_MASTER_ORDER_ID AS OMS_MASTER_ORDER_ID,
  OMS_MO_LINE_ITEM_ID AS OMS_MO_LINE_ITEM_ID,
  OMS_TC_ORDER_LINE_ID AS OMS_TC_ORDER_LINE_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_PURCHASE_ORDER_LINE_NBR AS OMS_PURCHASE_ORDER_LINE_NBR,
  OMS_ITEM_ID AS OMS_ITEM_ID,
  OMS_ITEM_NAME AS OMS_ITEM_NAME,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  OMS_DO_DTL_STATUS_ID AS OMS_DO_DTL_STATUS_ID,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  OMS_EVENT_CD AS OMS_EVENT_CD,
  OMS_REASON_CD AS OMS_REASON_CD,
  OMS_EXP_INFO_CD AS OMS_EXP_INFO_CD,
  PARTIAL_FILL_FLAG AS PARTIAL_FILL_FLAG,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  ORDER_QTY AS ORDER_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  RETAIL_PRICE_AMT AS RETAIL_PRICE_AMT,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  UNIT_COST_AMT AS UNIT_COST_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  FREIGHT_REVENUE_CURRENCY_CD AS FREIGHT_REVENUE_CURRENCY_CD,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDER_LINE_ITEM_13"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDER_LINE_ITEM_14")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_ORDER_LINE_ITEM_15


query_15 = f"""SELECT
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  DETAIL.pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  DETAIL.o_OMS_ORDER_ID AS o_OMS_ORDER_ID,
  DETAIL.o_OMS_PURCHASE_ORDER_ID AS o_OMS_PURCHASE_ORDER_ID,
  DETAIL.o_OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  DETAIL.f_FACILITY_TYPE_BITS AS f_FACILITY_TYPE_BITS,
  MASTER.OMS_ORDER_ID AS ol_OMS_ORDER_ID,
  MASTER.OMS_LINE_ITEM_ID AS ol_OMS_LINE_ITEM_ID,
  MASTER.OMS_PURCHASE_ORDER_LINE_NBR AS ol_OMS_PURCHASE_ORDER_LINE_NBR,
  MASTER.OMS_LAST_UPDATED_TSTMP AS ol_OMS_LAST_UPDATED_TSTMP,
  MASTER.OMS_ITEM_NAME AS ol_OMS_ITEM_NAME,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  DETAIL.o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  DETAIL.f_UPDATE_TSTMP AS f_UPDATE_TSTMP,
  MASTER.UPDATE_TSTMP AS ol_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ORDER_LINE_ITEM_14 MASTER
  INNER JOIN JNR_OMS_FACILITY_12 DETAIL ON MASTER.OMS_ORDER_ID = DETAIL.o_OMS_ORDER_ID
  AND MASTER.OMS_PURCHASE_ORDER_LINE_NBR = DETAIL.pol_OMS_TC_PO_LINE_ID"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("JNR_OMS_ORDER_LINE_ITEM_15")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDER_REASON_CODE_16


query_16 = f"""SELECT
  OMS_ORDER_REASON_CODE_ID AS OMS_ORDER_REASON_CODE_ID,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_LINE_ID AS OMS_ORDER_LINE_ID,
  OMS_REASON_TYPE AS OMS_REASON_TYPE,
  OMS_REASON_CD AS OMS_REASON_CD,
  USER_NAME AS USER_NAME,
  REASON_CD_TSTMP AS REASON_CD_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDER_REASON_CODE"""

df_16 = spark.sql(query_16)

df_16.createOrReplaceTempView("Shortcut_to_OMS_ORDER_REASON_CODE_16")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDER_REASON_CODE_17


query_17 = f"""SELECT
  OMS_ORDER_REASON_CODE_ID AS OMS_ORDER_REASON_CODE_ID,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_LINE_ID AS OMS_ORDER_LINE_ID,
  OMS_REASON_TYPE AS OMS_REASON_TYPE,
  OMS_REASON_CD AS OMS_REASON_CD,
  USER_NAME AS USER_NAME,
  REASON_CD_TSTMP AS REASON_CD_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDER_REASON_CODE_16"""

df_17 = spark.sql(query_17)

df_17.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDER_REASON_CODE_17")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_ORDER_REASON_CODE_18


query_18 = f"""SELECT
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  DETAIL.pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  DETAIL.o_OMS_ORDER_ID AS o_OMS_ORDER_ID,
  DETAIL.o_OMS_PURCHASE_ORDER_ID AS o_OMS_PURCHASE_ORDER_ID,
  DETAIL.o_OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  DETAIL.f_FACILITY_TYPE_BITS AS f_FACILITY_TYPE_BITS,
  DETAIL.ol_OMS_ORDER_ID AS ol_OMS_ORDER_ID,
  DETAIL.ol_OMS_LINE_ITEM_ID AS ol_OMS_LINE_ITEM_ID,
  DETAIL.ol_OMS_PURCHASE_ORDER_LINE_NBR AS ol_OMS_PURCHASE_ORDER_LINE_NBR,
  DETAIL.ol_OMS_LAST_UPDATED_TSTMP AS ol_OMS_LAST_UPDATED_TSTMP,
  DETAIL.ol_OMS_ITEM_NAME AS ol_OMS_ITEM_NAME,
  MASTER.OMS_ORDER_REASON_CODE_ID AS orc_OMS_ORDER_REASON_CODE_ID,
  MASTER.OMS_ORDER_ID AS orc_OMS_ORDER_ID,
  MASTER.OMS_ORDER_LINE_ID AS orc_OMS_ORDER_LINE_ID,
  MASTER.OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  MASTER.OMS_REASON_CD AS orc_OMS_REASON_CD,
  MASTER.USER_NAME AS orc_USER_NAME,
  MASTER.REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  DETAIL.o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  DETAIL.f_UPDATE_TSTMP AS f_UPDATE_TSTMP,
  DETAIL.ol_UPDATE_TSTMP AS ol_UPDATE_TSTMP,
  MASTER.UPDATE_TSTMP AS orc_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ORDER_REASON_CODE_17 MASTER
  INNER JOIN JNR_OMS_ORDER_LINE_ITEM_15 DETAIL ON MASTER.OMS_ORDER_ID = DETAIL.o_OMS_ORDER_ID
  AND MASTER.OMS_ORDER_LINE_ID = DETAIL.ol_OMS_LINE_ITEM_ID"""

df_18 = spark.sql(query_18)

df_18.createOrReplaceTempView("JNR_OMS_ORDER_REASON_CODE_18")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_SYS_CODE_19


query_19 = f"""SELECT
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  DETAIL.o_OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  DETAIL.orc_OMS_ORDER_REASON_CODE_ID AS orc_OMS_ORDER_REASON_CODE_ID,
  DETAIL.orc_OMS_ORDER_ID AS orc_OMS_ORDER_ID,
  DETAIL.orc_OMS_ORDER_LINE_ID AS orc_OMS_ORDER_LINE_ID,
  DETAIL.orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  DETAIL.orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  DETAIL.orc_USER_NAME AS orc_USER_NAME,
  DETAIL.orc_REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.f_FACILITY_TYPE_BITS AS f_FACILITY_TYPE_BITS,
  DETAIL.ol_OMS_LAST_UPDATED_TSTMP AS ol_OMS_LAST_UPDATED_TSTMP,
  DETAIL.ol_OMS_ITEM_NAME AS ol_OMS_ITEM_NAME,
  MASTER.OMS_CODE_ID AS sc_OMS_CODE_ID,
  MASTER.OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  DETAIL.o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  DETAIL.f_UPDATE_TSTMP AS f_UPDATE_TSTMP,
  DETAIL.ol_UPDATE_TSTMP AS ol_UPDATE_TSTMP,
  DETAIL.orc_UPDATE_TSTMP AS orc_UPDATE_TSTMP,
  MASTER.UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_SYS_CODE_7 MASTER
  RIGHT JOIN JNR_OMS_ORDER_REASON_CODE_18 DETAIL ON MASTER.OMS_CODE_ID = DETAIL.orc_OMS_REASON_CD"""

df_19 = spark.sql(query_19)

df_19.createOrReplaceTempView("JNR_OMS_SYS_CODE_19")

# COMMAND ----------
# DBTITLE 1, FIL_LAST_UPDATED_TSTMP_20


query_20 = f"""SELECT
  orc_OMS_ORDER_REASON_CODE_ID AS orc_OMS_ORDER_REASON_CODE_ID,
  orc_OMS_ORDER_ID AS orc_OMS_ORDER_ID,
  orc_OMS_ORDER_LINE_ID AS orc_OMS_ORDER_LINE_ID,
  orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  orc_USER_NAME AS orc_USER_NAME,
  orc_REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  o_OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  ol_OMS_LAST_UPDATED_TSTMP AS ol_OMS_LAST_UPDATED_TSTMP,
  ol_OMS_ITEM_NAME AS ol_OMS_ITEM_NAME,
  f_FACILITY_TYPE_BITS AS f_FACILITY_TYPE_BITS,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  f_UPDATE_TSTMP AS f_UPDATE_TSTMP,
  ol_UPDATE_TSTMP AS ol_UPDATE_TSTMP,
  orc_UPDATE_TSTMP AS orc_UPDATE_TSTMP,
  sc_UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_SYS_CODE_19
WHERE
  --(
  --po_OMS_LAST_UPDATED_TSTMP > ADD_TO_DATE(TRUNC(now()),'D',  - 90 )
  --or
  --ol_OMS_LAST_UPDATED_TSTMP > ADD_TO_DATE(TRUNC(now()),'D',  - 90 )
  --)
  --AND
  (
    po_UPDATE_TSTMP > (TRUNC(now()))
    OR pol_UPDATE_TSTMP > (TRUNC(now()))
    OR o_UPDATE_TSTMP > (TRUNC(now()))
    OR f_UPDATE_TSTMP > (TRUNC(now()))
    OR ol_UPDATE_TSTMP > (TRUNC(now()))
    OR orc_UPDATE_TSTMP > (TRUNC(now()))
    OR sc_UPDATE_TSTMP > (TRUNC(now()))
  )"""

df_20 = spark.sql(query_20)

df_20.createOrReplaceTempView("FIL_LAST_UPDATED_TSTMP_20")

# COMMAND ----------
# DBTITLE 1, EXP_ORDER_NBR_21


query_21 = f"""SELECT
  TO_INTEGER(orc_OMS_ORDER_REASON_CODE_ID) AS o_ORDER_REASON_CODE_ID,
  orc_OMS_ORDER_ID AS orc_OMS_ORDER_ID,
  orc_OMS_ORDER_LINE_ID AS orc_OMS_ORDER_LINE_ID,
  orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  orc_USER_NAME AS orc_USER_NAME,
  orc_REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  IFF(
    TO_CHAR(SUBSTR(po_OMS_TC_PURCHASE_ORDERS_ID, 1, 1)) = 'X',
    TO_BIGINT(
      SUBSTR(
        po_OMS_TC_PURCHASE_ORDERS_ID,
        2,
        LENGTH(po_OMS_TC_PURCHASE_ORDERS_ID)
      )
    ),
    IFF(
      LOWER(po_OMS_TC_PURCHASE_ORDERS_ID) <> UPPER(po_OMS_TC_PURCHASE_ORDERS_ID),
      0,
      TO_BIGINT(po_OMS_TC_PURCHASE_ORDERS_ID)
    )
  ) AS o_ORDER_NBR,
  po_OMS_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  o_OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  DECODE(f_FACILITY_TYPE_BITS, 64, 8, 545, 6, 33, 6, 9, 19, 8) AS o_FACILITY_TYPE_ID,
  TO_INTEGER(ol_OMS_ITEM_NAME) AS o_OMS_ITEM_NAME,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_LAST_UPDATED_TSTMP_20"""

df_21 = spark.sql(query_21)

df_21.createOrReplaceTempView("EXP_ORDER_NBR_21")

# COMMAND ----------
# DBTITLE 1, LKP_SKU_PROFILE_NEW_22


query_22 = f"""SELECT
  SP.PRODUCT_ID AS PRODUCT_ID,
  EON2.o_ORDER_REASON_CODE_ID AS o_ORDER_REASON_CODE_ID,
  EON2.orc_OMS_ORDER_ID AS orc_OMS_ORDER_ID,
  EON2.orc_OMS_ORDER_LINE_ID AS orc_OMS_ORDER_LINE_ID,
  EON2.orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  EON2.orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  EON2.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  EON2.orc_USER_NAME AS orc_USER_NAME,
  EON2.orc_REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  EON2.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  EON2.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  EON2.pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  EON2.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  EON2.o_ORDER_NBR AS o_ORDER_NBR,
  EON2.po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  EON2.o_OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  EON2.o_FACILITY_TYPE_ID AS o_FACILITY_TYPE_ID,
  EON2.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_ORDER_NBR_21 EON2
  LEFT JOIN SKU_PROFILE SP ON SP.SKU_NBR = EON2.o_OMS_ITEM_NAME"""

df_22 = spark.sql(query_22)

df_22.createOrReplaceTempView("LKP_SKU_PROFILE_NEW_22")

# COMMAND ----------
# DBTITLE 1, Lkp_Site_Profile_23


query_23 = f"""SELECT
  SP.LOCATION_ID AS LOCATION_ID,
  LSPN2.o_ORDER_REASON_CODE_ID AS o_ORDER_REASON_CODE_ID,
  LSPN2.orc_OMS_ORDER_ID AS orc_OMS_ORDER_ID,
  LSPN2.orc_OMS_ORDER_LINE_ID AS orc_OMS_ORDER_LINE_ID,
  LSPN2.orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  LSPN2.orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  LSPN2.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  LSPN2.orc_USER_NAME AS orc_USER_NAME,
  LSPN2.orc_REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  LSPN2.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  LSPN2.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  LSPN2.pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  LSPN2.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  LSPN2.o_ORDER_NBR AS o_ORDER_NBR,
  LSPN2.po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  LSPN2.o_OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  LSPN2.o_FACILITY_TYPE_ID AS o_FACILITY_TYPE_ID,
  LSPN2.PRODUCT_ID AS PRODUCT_ID,
  LSPN2.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_SKU_PROFILE_NEW_22 LSPN2
  LEFT JOIN SITE_PROFILE SP ON SP.LOCATION_NBR = LSPN2.o_OMS_O_FACILITY_ALIAS_ID
  AND SP.LOCATION_TYPE_ID = LSPN2.o_FACILITY_TYPE_ID"""

df_23 = spark.sql(query_23)

df_23.createOrReplaceTempView("Lkp_Site_Profile_23")

# COMMAND ----------
# DBTITLE 1, EXP_PRE_24


query_24 = f"""SELECT
  o_ORDER_REASON_CODE_ID AS o_ORDER_REASON_CODE_ID,
  TO_INTEGER(orc_OMS_ORDER_ID) AS orc_OMS_ORDER_ID,
  TO_INTEGER(orc_OMS_ORDER_LINE_ID) AS orc_OMS_ORDER_LINE_ID,
  orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  orc_USER_NAME AS orc_USER_NAME,
  orc_REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  TO_INTEGER(pol_OMS_PURCHASE_ORDERS_ID) AS pol_OMS_PURCHASE_ORDERS_ID,
  TO_INTEGER(pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID) AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  o_ORDER_NBR AS o_ORDER_NBR,
  po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  o_OMS_O_FACILITY_ALIAS_ID AS o_OMS_O_FACILITY_ALIAS_ID,
  o_FACILITY_TYPE_ID AS o_FACILITY_TYPE_ID,
  LOCATION_ID AS LOCATION_ID,
  TO_BIGINT(
    IFF(
      NOT ISNULL(o_OMS_O_FACILITY_ALIAS_ID),
      LOCATION_ID,
      NULL
    )
  ) AS o_ORIG_LOCATION_ID,
  PRODUCT_ID AS PRODUCT_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  Lkp_Site_Profile_23"""

df_24 = spark.sql(query_24)

df_24.createOrReplaceTempView("EXP_PRE_24")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_DIST_ORDER_REASON_CODE_25


query_25 = f"""SELECT
  OMS_DIST_ORDER_REASON_CODE_ID AS OMS_DIST_ORDER_REASON_CODE_ID,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  REASON_TYPE AS REASON_TYPE,
  REASON_CODE AS REASON_CODE,
  CODE_DESC AS CODE_DESC,
  PICKER AS PICKER,
  PICK_DECLINE_DT AS PICK_DECLINE_DT,
  CANCELLED_QTY AS CANCELLED_QTY,
  OMS_ORDER_NBR AS OMS_ORDER_NBR,
  ORDER_NBR AS ORDER_NBR,
  OMS_ORDER_CREATED_TSTMP AS OMS_ORDER_CREATED_TSTMP,
  ORIG_LOCATION_ID AS ORIG_LOCATION_ID,
  PRODUCT_ID AS PRODUCT_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_DIST_ORDER_REASON_CODE"""

df_25 = spark.sql(query_25)

df_25.createOrReplaceTempView("Shortcut_to_OMS_DIST_ORDER_REASON_CODE_25")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_DIST_ORDER_REASON_CODE_26


query_26 = f"""SELECT
  OMS_DIST_ORDER_REASON_CODE_ID AS OMS_DIST_ORDER_REASON_CODE_ID,
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  REASON_TYPE AS REASON_TYPE,
  REASON_CODE AS REASON_CODE,
  CODE_DESC AS CODE_DESC,
  PICKER AS PICKER,
  PICK_DECLINE_DT AS PICK_DECLINE_DT,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  CANCELLED_QTY AS CANCELLED_QTY,
  OMS_ORDER_NBR AS OMS_ORDER_NBR,
  ORDER_NBR AS ORDER_NBR,
  OMS_ORDER_CREATED_TSTMP AS OMS_ORDER_CREATED_TSTMP,
  ORIG_LOCATION_ID AS ORIG_LOCATION_ID,
  PRODUCT_ID AS PRODUCT_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_DIST_ORDER_REASON_CODE_25"""

df_26 = spark.sql(query_26)

df_26.createOrReplaceTempView("SQ_Shortcut_to_OMS_DIST_ORDER_REASON_CODE_26")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_DIST_ORDER_REASON_CODE_27


query_27 = f"""SELECT
  DETAIL.o_ORDER_REASON_CODE_ID AS o_ORDER_REASON_CODE_ID,
  DETAIL.orc_OMS_ORDER_ID AS orc_OMS_ORDER_ID,
  DETAIL.orc_OMS_ORDER_LINE_ID AS orc_OMS_ORDER_LINE_ID,
  DETAIL.orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  DETAIL.orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  DETAIL.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  DETAIL.orc_USER_NAME AS orc_USER_NAME,
  DETAIL.orc_REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  DETAIL.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.o_ORDER_NBR AS o_ORDER_NBR,
  DETAIL.po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  DETAIL.o_ORIG_LOCATION_ID AS o_ORIG_LOCATION_ID,
  DETAIL.PRODUCT_ID AS o_PRODUCT_ID,
  MASTER.OMS_DIST_ORDER_REASON_CODE_ID AS lkp_OMS_DIST_ORDER_REASON_CODE_ID,
  MASTER.OMS_DIST_ORDER_ID AS lkp_OMS_DIST_ORDER_ID,
  MASTER.OMS_DIST_ORDER_LN_ID AS lkp_OMS_DIST_ORDER_LN_ID,
  MASTER.REASON_TYPE AS lkp_REASON_TYPE,
  MASTER.REASON_CODE AS lkp_REASON_CODE,
  MASTER.CODE_DESC AS lkp_CODE_DESC,
  MASTER.PICKER AS lkp_PICKER,
  MASTER.PICK_DECLINE_DT AS lkp_PICK_DECLINE_DT,
  MASTER.OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  MASTER.OMS_ORDER_LN_ID AS lkp_OMS_ORDER_LN_ID,
  MASTER.CANCELLED_QTY AS lkp_CANCELLED_QTY,
  MASTER.OMS_ORDER_NBR AS lkp_OMS_ORDER_NBR,
  MASTER.ORDER_NBR AS lkp_ORDER_NBR,
  MASTER.OMS_ORDER_CREATED_TSTMP AS lkp_OMS_ORDER_CREATED_TSTMP,
  MASTER.ORIG_LOCATION_ID AS lkp_ORIG_LOCATION_ID,
  MASTER.PRODUCT_ID AS lkp_PRODUCT_ID,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_DIST_ORDER_REASON_CODE_26 MASTER
  RIGHT JOIN EXP_PRE_24 DETAIL ON MASTER.OMS_DIST_ORDER_REASON_CODE_ID = DETAIL.o_ORDER_REASON_CODE_ID
  AND MASTER.OMS_ORDER_ID = DETAIL.pol_OMS_PURCHASE_ORDERS_ID
  AND MASTER.OMS_ORDER_LN_ID = DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID"""

df_27 = spark.sql(query_27)

df_27.createOrReplaceTempView("JNR_OMS_DIST_ORDER_REASON_CODE_27")

# COMMAND ----------
# DBTITLE 1, EXP_UPDATE_FLAG_28


query_28 = f"""SELECT
  o_ORDER_REASON_CODE_ID AS o_ORDER_REASON_CODE_ID,
  orc_OMS_ORDER_ID AS orc_OMS_ORDER_ID,
  orc_OMS_ORDER_LINE_ID AS orc_OMS_ORDER_LINE_ID,
  orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  orc_USER_NAME AS orc_USER_NAME,
  orc_REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  o_ORDER_NBR AS o_ORDER_NBR,
  po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  o_ORIG_LOCATION_ID AS o_ORIG_LOCATION_ID,
  o_PRODUCT_ID AS o_PRODUCT_ID,
  lkp_REASON_TYPE AS lkp_REASON_TYPE,
  lkp_REASON_CODE AS lkp_REASON_CODE,
  lkp_CODE_DESC AS lkp_CODE_DESC,
  lkp_PICKER AS lkp_PICKER,
  lkp_PICK_DECLINE_DT AS lkp_PICK_DECLINE_DT,
  lkp_OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  lkp_OMS_ORDER_LN_ID AS lkp_OMS_ORDER_LN_ID,
  lkp_CANCELLED_QTY AS lkp_CANCELLED_QTY,
  lkp_OMS_ORDER_NBR AS lkp_OMS_ORDER_NBR,
  lkp_ORDER_NBR AS lkp_ORDER_NBR,
  lkp_OMS_ORDER_CREATED_TSTMP AS lkp_OMS_ORDER_CREATED_TSTMP,
  lkp_ORIG_LOCATION_ID AS lkp_ORIG_LOCATION_ID,
  lkp_PRODUCT_ID AS lkp_PRODUCT_ID,
  IFF(
    (
      ISNULL(lkp_OMS_DIST_ORDER_REASON_CODE_ID)
      AND ISNULL(lkp_OMS_ORDER_ID)
      AND ISNULL(lkp_OMS_ORDER_LN_ID)
    ),
    1,
    IFF(
      (
        (
          NOT ISNULL(lkp_OMS_DIST_ORDER_REASON_CODE_ID)
          AND NOT ISNULL(lkp_OMS_DIST_ORDER_ID)
          AND NOT ISNULL(lkp_OMS_DIST_ORDER_LN_ID)
        )
        AND (
          IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(orc_OMS_REASON_TYPE)))),
            ' ',
            TO_CHAR(orc_OMS_REASON_TYPE)
          ) <> IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(lkp_REASON_TYPE)))),
            ' ',
            TO_CHAR(lkp_REASON_TYPE)
          )
          OR IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(orc_OMS_REASON_CD)))),
            ' ',
            TO_CHAR(orc_OMS_REASON_CD)
          ) <> IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(lkp_REASON_CODE)))),
            ' ',
            TO_CHAR(lkp_REASON_CODE)
          )
          OR IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(sc_OMS_CODE_DESC)))),
            ' ',
            TO_CHAR(sc_OMS_CODE_DESC)
          ) <> IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(lkp_CODE_DESC)))),
            ' ',
            TO_CHAR(lkp_CODE_DESC)
          )
          OR IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(orc_USER_NAME)))),
            ' ',
            TO_CHAR(orc_USER_NAME)
          ) <> IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(lkp_PICKER)))),
            ' ',
            TO_CHAR(lkp_PICKER)
          )
          OR IFF(
            ISNULL(
              LTRIM(
                RTRIM(
                  TO_CHAR(
                    TRUNC(orc_REASON_CD_TSTMP),
                    'YYYY-MM-DD HH24:MI:SS'
                  )
                )
              )
            ),
            ' ',
            TO_CHAR(
              TRUNC(orc_REASON_CD_TSTMP),
              'YYYY-MM-DD HH24:MI:SS'
            )
          ) <> IFF(
            ISNULL(
              LTRIM(
                RTRIM(
                  TO_CHAR(lkp_PICK_DECLINE_DT, 'YYYY-MM-DD HH24:MI:SS')
                )
              )
            ),
            ' ',
            TO_CHAR(lkp_PICK_DECLINE_DT, 'YYYY-MM-DD HH24:MI:SS')
          )
          OR IFF(
            ISNULL(lkp_OMS_DIST_ORDER_ID),
            0,
            lkp_OMS_DIST_ORDER_ID
          ) <> IFF(ISNULL(orc_OMS_ORDER_ID), 0, orc_OMS_ORDER_ID)
          OR IFF(
            ISNULL(lkp_OMS_DIST_ORDER_LN_ID),
            0,
            lkp_OMS_DIST_ORDER_LN_ID
          ) <> IFF(
            ISNULL(orc_OMS_ORDER_LINE_ID),
            0,
            orc_OMS_ORDER_LINE_ID
          )
          OR IFF(ISNULL(pol_CANCELLED_QTY), 0, pol_CANCELLED_QTY) <> IFF(ISNULL(lkp_CANCELLED_QTY), 0, lkp_CANCELLED_QTY)
          OR IFF(
            ISNULL(
              LTRIM(RTRIM(TO_CHAR(po_OMS_TC_PURCHASE_ORDERS_ID)))
            ),
            ' ',
            TO_CHAR(po_OMS_TC_PURCHASE_ORDERS_ID)
          ) <> IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(lkp_OMS_ORDER_NBR)))),
            ' ',
            TO_CHAR(lkp_OMS_ORDER_NBR)
          )
          OR IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(o_ORDER_NBR)))),
            ' ',
            TO_CHAR(o_ORDER_NBR)
          ) <> IFF(
            ISNULL(LTRIM(RTRIM(TO_CHAR(lkp_ORDER_NBR)))),
            ' ',
            TO_CHAR(lkp_ORDER_NBR)
          )
          OR IFF(
            ISNULL(
              LTRIM(
                RTRIM(
                  TO_CHAR(
                    po_OMS_ORDER_CREATED_TSTMP,
                    'YYYY-MM-DD HH24:MI:SS'
                  )
                )
              )
            ),
            ' ',
            TO_CHAR(
              po_OMS_ORDER_CREATED_TSTMP,
              'YYYY-MM-DD HH24:MI:SS'
            )
          ) <> IFF(
            ISNULL(
              LTRIM(
                RTRIM(
                  TO_CHAR(
                    lkp_OMS_ORDER_CREATED_TSTMP,
                    'YYYY-MM-DD HH24:MI:SS'
                  )
                )
              )
            ),
            ' ',
            TO_CHAR(
              lkp_OMS_ORDER_CREATED_TSTMP,
              'YYYY-MM-DD HH24:MI:SS'
            )
          )
          OR IFF(ISNULL(o_ORIG_LOCATION_ID), 0, o_ORIG_LOCATION_ID) <> IFF(
            ISNULL(lkp_ORIG_LOCATION_ID),
            0,
            lkp_ORIG_LOCATION_ID
          )
          OR IFF(ISNULL(o_PRODUCT_ID), 0, o_PRODUCT_ID) <> IFF(ISNULL(lkp_PRODUCT_ID), 0, lkp_PRODUCT_ID)
        )
      ),
      2,
      3
    )
  ) AS o_UPDATE_FLAG,
  now() AS o_UPDATE_TSTMP,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS o_LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_DIST_ORDER_REASON_CODE_27"""

df_28 = spark.sql(query_28)

df_28.createOrReplaceTempView("EXP_UPDATE_FLAG_28")

# COMMAND ----------
# DBTITLE 1, UPD_INSERT_UPDATE_29


query_29 = f"""SELECT
  o_ORDER_REASON_CODE_ID AS o_ORDER_REASON_CODE_ID,
  orc_OMS_ORDER_ID AS orc_OMS_ORDER_ID,
  orc_OMS_ORDER_LINE_ID AS orc_OMS_ORDER_LINE_ID,
  orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  orc_USER_NAME AS orc_USER_NAME,
  orc_REASON_CD_TSTMP AS orc_REASON_CD_TSTMP,
  pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  pol_CANCELLED_QTY AS pol_CANCELLED_QTY,
  po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  o_ORDER_NBR AS o_ORDER_NBR,
  po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  o_ORIG_LOCATION_ID AS o_ORIG_LOCATION_ID,
  o_PRODUCT_ID AS o_PRODUCT_ID,
  o_UPDATE_FLAG AS o_UPDATE_FLAG,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(
    o_UPDATE_FLAG,
    1,
    'DD_INSERT',
    2,
    'DD_UPDATE',
    'DD_REJECT'
  ) AS UPDATE_STRATEGY_FLAG
FROM
  EXP_UPDATE_FLAG_28"""

df_29 = spark.sql(query_29)

df_29.createOrReplaceTempView("UPD_INSERT_UPDATE_29")

# COMMAND ----------
# DBTITLE 1, OMS_DIST_ORDER_REASON_CODE


spark.sql("""MERGE INTO OMS_DIST_ORDER_REASON_CODE AS TARGET
USING
  UPD_INSERT_UPDATE_29 AS SOURCE ON TARGET.OMS_ORDER_LN_ID = SOURCE.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID
  AND TARGET.OMS_DIST_ORDER_REASON_CODE_ID = SOURCE.o_ORDER_REASON_CODE_ID
  AND TARGET.OMS_ORDER_ID = SOURCE.pol_OMS_PURCHASE_ORDERS_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_DIST_ORDER_REASON_CODE_ID = SOURCE.o_ORDER_REASON_CODE_ID,
  TARGET.OMS_ORDER_ID = SOURCE.pol_OMS_PURCHASE_ORDERS_ID,
  TARGET.OMS_ORDER_LN_ID = SOURCE.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  TARGET.OMS_DIST_ORDER_ID = SOURCE.orc_OMS_ORDER_ID,
  TARGET.OMS_DIST_ORDER_LN_ID = SOURCE.orc_OMS_ORDER_LINE_ID,
  TARGET.REASON_TYPE = SOURCE.orc_OMS_REASON_TYPE,
  TARGET.REASON_CODE = SOURCE.orc_OMS_REASON_CD,
  TARGET.CODE_DESC = SOURCE.sc_OMS_CODE_DESC,
  TARGET.PICKER = SOURCE.orc_USER_NAME,
  TARGET.PICK_DECLINE_DT = SOURCE.orc_REASON_CD_TSTMP,
  TARGET.CANCELLED_QTY = SOURCE.pol_CANCELLED_QTY,
  TARGET.OMS_ORDER_NBR = SOURCE.po_OMS_TC_PURCHASE_ORDERS_ID,
  TARGET.ORDER_NBR = SOURCE.o_ORDER_NBR,
  TARGET.OMS_ORDER_CREATED_TSTMP = SOURCE.po_OMS_ORDER_CREATED_TSTMP,
  TARGET.ORIG_LOCATION_ID = SOURCE.o_ORIG_LOCATION_ID,
  TARGET.PRODUCT_ID = SOURCE.o_PRODUCT_ID,
  TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_DIST_ORDER_ID = SOURCE.orc_OMS_ORDER_ID
  AND TARGET.OMS_DIST_ORDER_LN_ID = SOURCE.orc_OMS_ORDER_LINE_ID
  AND TARGET.REASON_TYPE = SOURCE.orc_OMS_REASON_TYPE
  AND TARGET.REASON_CODE = SOURCE.orc_OMS_REASON_CD
  AND TARGET.CODE_DESC = SOURCE.sc_OMS_CODE_DESC
  AND TARGET.PICKER = SOURCE.orc_USER_NAME
  AND TARGET.PICK_DECLINE_DT = SOURCE.orc_REASON_CD_TSTMP
  AND TARGET.CANCELLED_QTY = SOURCE.pol_CANCELLED_QTY
  AND TARGET.OMS_ORDER_NBR = SOURCE.po_OMS_TC_PURCHASE_ORDERS_ID
  AND TARGET.ORDER_NBR = SOURCE.o_ORDER_NBR
  AND TARGET.OMS_ORDER_CREATED_TSTMP = SOURCE.po_OMS_ORDER_CREATED_TSTMP
  AND TARGET.ORIG_LOCATION_ID = SOURCE.o_ORIG_LOCATION_ID
  AND TARGET.PRODUCT_ID = SOURCE.o_PRODUCT_ID
  AND TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_DIST_ORDER_REASON_CODE_ID,
    TARGET.OMS_ORDER_ID,
    TARGET.OMS_ORDER_LN_ID,
    TARGET.OMS_DIST_ORDER_ID,
    TARGET.OMS_DIST_ORDER_LN_ID,
    TARGET.REASON_TYPE,
    TARGET.REASON_CODE,
    TARGET.CODE_DESC,
    TARGET.PICKER,
    TARGET.PICK_DECLINE_DT,
    TARGET.CANCELLED_QTY,
    TARGET.OMS_ORDER_NBR,
    TARGET.ORDER_NBR,
    TARGET.OMS_ORDER_CREATED_TSTMP,
    TARGET.ORIG_LOCATION_ID,
    TARGET.PRODUCT_ID,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.o_ORDER_REASON_CODE_ID,
    SOURCE.pol_OMS_PURCHASE_ORDERS_ID,
    SOURCE.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
    SOURCE.orc_OMS_ORDER_ID,
    SOURCE.orc_OMS_ORDER_LINE_ID,
    SOURCE.orc_OMS_REASON_TYPE,
    SOURCE.orc_OMS_REASON_CD,
    SOURCE.sc_OMS_CODE_DESC,
    SOURCE.orc_USER_NAME,
    SOURCE.orc_REASON_CD_TSTMP,
    SOURCE.pol_CANCELLED_QTY,
    SOURCE.po_OMS_TC_PURCHASE_ORDERS_ID,
    SOURCE.o_ORDER_NBR,
    SOURCE.po_OMS_ORDER_CREATED_TSTMP,
    SOURCE.o_ORIG_LOCATION_ID,
    SOURCE.o_PRODUCT_ID,
    SOURCE.o_UPDATE_TSTMP,
    SOURCE.o_LOAD_TSTMP
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Dist_Order_Reason_Code")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_OMS_Dist_Order_Reason_Code", mainWorkflowId, parentName)
