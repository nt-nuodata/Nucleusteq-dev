# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Dist_Order_LN_ATTR")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_OMS_Dist_Order_LN_ATTR", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_FACILITY_0


query_0 = f"""SELECT
  OMS_FACILITY_ID AS OMS_FACILITY_ID,
  FACILITY_TYPE_BITS AS FACILITY_TYPE_BITS,
  MARK_FOR_DELETION_FLAG AS MARK_FOR_DELETION_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_FACILITY"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_FACILITY_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_FACILITY_1


query_1 = f"""SELECT
  OMS_FACILITY_ID AS OMS_FACILITY_ID,
  FACILITY_TYPE_BITS AS FACILITY_TYPE_BITS,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_FACILITY_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_FACILITY_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDERS_2


query_2 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_ORDER_ID AS OMS_TC_ORDER_ID,
  OMS_PURCHASE_ORDER_ID AS OMS_PURCHASE_ORDER_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_EXT_PURCHASE_ORDER AS OMS_EXT_PURCHASE_ORDER,
  OMS_ORDER_TYPE AS OMS_ORDER_TYPE,
  OMS_ORDER_STATUS_ID AS OMS_ORDER_STATUS_ID,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  OMS_DO_STATUS_ID AS OMS_DO_STATUS_ID,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_BILLING_METHOD_ID AS OMS_BILLING_METHOD_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  OMS_DELIVERY_OPTIONS_ID AS OMS_DELIVERY_OPTIONS_ID,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  PARTIAL_SHIP_CONFIRMATION_FLAG AS PARTIAL_SHIP_CONFIRMATION_FLAG,
  PARTIAL_SHIP_CONFIRMATION_STATUS AS PARTIAL_SHIP_CONFIRMATION_STATUS,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  HAS_SPLIT_FLAG AS HAS_SPLIT_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  BACK_ORDERED_FLAG AS BACK_ORDERED_FLAG,
  OMS_INBOUND_REGION_ID AS OMS_INBOUND_REGION_ID,
  OMS_OUTBOUND_REGION_ID AS OMS_OUTBOUND_REGION_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_CUSTOMER_ID AS OMS_CUSTOMER_ID,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ORDER_DT_TSTMP AS OMS_ORDER_DT_TSTMP,
  OMS_ORDER_RECON_TSTMP AS OMS_ORDER_RECON_TSTMP,
  OMS_SCHED_PICKUP_TSTMP AS OMS_SCHED_PICKUP_TSTMP,
  OMS_SCHED_DELIVERY_TSTMP AS OMS_SCHED_DELIVERY_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  BASELINE_COST AS BASELINE_COST,
  ACTUAL_COST AS ACTUAL_COST,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  REF_NUM1 AS REF_NUM1,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDERS"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_ORDERS_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDERS_3


query_3 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDERS_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDERS_3")

# COMMAND ----------
# DBTITLE 1, JNR_FACILITY_O_4


query_4 = f"""SELECT
  DETAIL.OMS_ORDER_ID AS OMS_ORDER_ID,
  DETAIL.OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  MASTER.OMS_FACILITY_ID AS OMS_FACILITY_ID,
  MASTER.FACILITY_TYPE_BITS AS O_FACILITY_TYPE_ID,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_FACILITY_1 MASTER
  RIGHT JOIN SQ_Shortcut_to_OMS_ORDERS_3 DETAIL ON MASTER.OMS_FACILITY_ID = DETAIL.OMS_O_FACILITY_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_FACILITY_O_4")

# COMMAND ----------
# DBTITLE 1, exp_ORD_CONV_5


query_5 = f"""SELECT
  TO_INTEGER(OMS_ORDER_ID) AS OMS_ORDER_ID,
  O_FACILITY_TYPE_ID AS O_FACILITY_TYPE_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_FACILITY_O_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("exp_ORD_CONV_5")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_DIST_ORDER_LN_ATTR1_6


query_6 = f"""SELECT
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  ORDER_CAPTURE_CHANNEL AS ORDER_CAPTURE_CHANNEL,
  ORDER_CAPTURE_DEVICE AS ORDER_CAPTURE_DEVICE,
  ORDER_AUTO_SHIPMENT_FLAG AS ORDER_AUTO_SHIPMENT_FLAG,
  ORDER_AUTO_SHIPMENT_NBR AS ORDER_AUTO_SHIPMENT_NBR,
  ORDER_ITEM_FULFILLMENT_CHANNEL AS ORDER_ITEM_FULFILLMENT_CHANNEL,
  ORDER_ITEM_DELIVERY_METHOD AS ORDER_ITEM_DELIVERY_METHOD,
  ORDER_ITEM_SCHED_DELIVERY_FLAG AS ORDER_ITEM_SCHED_DELIVERY_FLAG,
  ORDER_ITEM_ADD_ON_FLAG AS ORDER_ITEM_ADD_ON_FLAG,
  ORDER_ITEM_PRESCRIPTION_FLAG AS ORDER_ITEM_PRESCRIPTION_FLAG,
  ORDER_ITEM_GROUP AS ORDER_ITEM_GROUP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_DIST_ORDER_LN_ATTR"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("Shortcut_to_OMS_DIST_ORDER_LN_ATTR1_6")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_DIST_ORDER_LN_ATTR_7


query_7 = f"""SELECT
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  ORDER_CAPTURE_CHANNEL AS ORDER_CAPTURE_CHANNEL,
  ORDER_AUTO_SHIPMENT_FLAG AS ORDER_AUTO_SHIPMENT_FLAG,
  ORDER_ITEM_FULFILLMENT_CHANNEL AS ORDER_ITEM_FULFILLMENT_CHANNEL,
  ORDER_ITEM_DELIVERY_METHOD AS ORDER_ITEM_DELIVERY_METHOD,
  ORDER_ITEM_SCHED_DELIVERY_FLAG AS ORDER_ITEM_SCHED_DELIVERY_FLAG,
  ORDER_ITEM_ADD_ON_FLAG AS ORDER_ITEM_ADD_ON_FLAG,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_DIST_ORDER_LN_ATTR1_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("SQ_Shortcut_to_OMS_DIST_ORDER_LN_ATTR_7")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_DIST_ORDER_8


query_8 = f"""SELECT
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_NBR AS OMS_DIST_ORDER_NBR,
  CREATION_TYPE_ID AS CREATION_TYPE_ID,
  ORIG_LOCATION_NBR AS ORIG_LOCATION_NBR,
  ORIG_LOCATION_ID AS ORIG_LOCATION_ID,
  DEST_LOCATION_NBR AS DEST_LOCATION_NBR,
  DEST_LOCATION_ID AS DEST_LOCATION_ID,
  BILL_LOCATION_NBR AS BILL_LOCATION_NBR,
  BILL_LOCATION_ID AS BILL_LOCATION_ID,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  PICKUP_START_DT AS PICKUP_START_DT,
  PICKUP_END_DT AS PICKUP_END_DT,
  DELIVERY_START_DT AS DELIVERY_START_DT,
  DELIVERY_END_DT AS DELIVERY_END_DT,
  ORDER_DATE_DT AS ORDER_DATE_DT,
  ORDER_RECON_DT AS ORDER_RECON_DT,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  ALERTS_FLG AS ALERTS_FLG,
  SPLIT_FLG AS SPLIT_FLG,
  CANCELED_FLG AS CANCELED_FLG,
  PARTIALLY_PLANNED_FLG AS PARTIALLY_PLANNED_FLG,
  ACTUAL_COST_AMT AS ACTUAL_COST_AMT,
  BASELINE_COST_AMT AS BASELINE_COST_AMT,
  BILLING_METHOD AS BILLING_METHOD,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  MONETARY_VALUE_AMT AS MONETARY_VALUE_AMT,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  OMS_DO_CREATED_TSTMP AS OMS_DO_CREATED_TSTMP,
  LAST_UPDATED_TSTMP AS LAST_UPDATED_TSTMP,
  SHIPMENT_ID AS SHIPMENT_ID,
  OMS_DIST_ORDER_TRANS_STATUS_ID AS OMS_DIST_ORDER_TRANS_STATUS_ID,
  OMS_DIST_ORDER_STATUS_ID AS OMS_DIST_ORDER_STATUS_ID,
  OMS_DIST_ORDER_TYPE_ID AS OMS_DIST_ORDER_TYPE_ID,
  ACTUAL_SHIPPED_DT AS ACTUAL_SHIPPED_DT,
  SCHED_PICKUP_DT AS SCHED_PICKUP_DT,
  SCHED_DELIVERY_DT AS SCHED_DELIVERY_DT,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  PRTL_SHIP_CONF_FLG AS PRTL_SHIP_CONF_FLG,
  PRTL_SHIP_CONF_STATUS_ID AS PRTL_SHIP_CONF_STATUS_ID,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  COMPLETED_ORDER_FLG AS COMPLETED_ORDER_FLG,
  ISPU_PXY_FIRST_NAME AS ISPU_PXY_FIRST_NAME,
  ISPU_PXY_LAST_NAME AS ISPU_PXY_LAST_NAME,
  ISPU_PXY_ADD_LINE1 AS ISPU_PXY_ADD_LINE1,
  ISPU_PXY_ADD_LINE2 AS ISPU_PXY_ADD_LINE2,
  ISPU_PXY_ADD_LINE3 AS ISPU_PXY_ADD_LINE3,
  ISPU_PXY_CITY AS ISPU_PXY_CITY,
  ISPU_PXY_STATE AS ISPU_PXY_STATE,
  ISPU_PXY_POSTAL_CD AS ISPU_PXY_POSTAL_CD,
  ISPU_PXY_COUNTRY AS ISPU_PXY_COUNTRY,
  ISPU_PXY_EMAIL AS ISPU_PXY_EMAIL,
  ISUP_PXY_PHONE AS ISUP_PXY_PHONE,
  OMS_ORDER_NBR AS OMS_ORDER_NBR,
  ORDER_NBR AS ORDER_NBR,
  OMS_ORDER_CREATED_TSTMP AS OMS_ORDER_CREATED_TSTMP,
  ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  ORDER_CHANNEL AS ORDER_CHANNEL,
  SCHED_DELIVERY_FLG AS SCHED_DELIVERY_FLG,
  SUBSCRIPTION_ORDER_FLG AS SUBSCRIPTION_ORDER_FLG,
  CANCELED_DT AS CANCELED_DT,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  RX_ORDER_FLG AS RX_ORDER_FLG,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_DIST_ORDER"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("Shortcut_to_OMS_DIST_ORDER_8")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_DIST_ORDER_9


query_9 = f"""SELECT
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_TYPE_ID AS OMS_DIST_ORDER_TYPE_ID,
  ORIG_LOCATION_ID AS ORIG_LOCATION_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_DIST_ORDER_8"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("SQ_Shortcut_to_OMS_DIST_ORDER_9")

# COMMAND ----------
# DBTITLE 1, JNR_FACILITY_ORD_10


query_10 = f"""SELECT
  MASTER.OMS_ORDER_ID AS OMS_ORDER_ID,
  MASTER.O_FACILITY_TYPE_ID AS O_FACILITY_TYPE_ID,
  DETAIL.OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  DETAIL.OMS_DIST_ORDER_TYPE_ID AS OMS_DIST_ORDER_TYPE_ID,
  DETAIL.ORIG_LOCATION_ID AS ORIG_LOCATION_ID,
  DETAIL.UPDATE_TSTMP AS UPDATE_TSTMP,
  DETAIL.OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  exp_ORD_CONV_5 MASTER
  RIGHT JOIN SQ_Shortcut_to_OMS_DIST_ORDER_9 DETAIL ON MASTER.OMS_ORDER_ID = DETAIL.OMS_DIST_ORDER_ID"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("JNR_FACILITY_ORD_10")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_DIST_ORDER_LN_11


query_11 = f"""SELECT
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  TOTAL_MONETARY_VALUE_AMT AS TOTAL_MONETARY_VALUE_AMT,
  UNIT_MONETARY_VALUE_AMT AS UNIT_MONETARY_VALUE_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  SHIPPED_QTY AS SHIPPED_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_TSTMP AS CREATED_TSTMP,
  LAST_UPDATED_TSTMP AS LAST_UPDATED_TSTMP,
  OMS_DIST_ORDER_LN_STATUS_ID AS OMS_DIST_ORDER_LN_STATUS_ID,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  UNIT_COST_AMT AS UNIT_COST_AMT,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  DELIVERY_END_DT AS DELIVERY_END_DT,
  DELIVERY_START_DT AS DELIVERY_START_DT,
  EVENT_CD AS EVENT_CD,
  REASON_CODE AS REASON_CODE,
  PARTL_FILL_FLG AS PARTL_FILL_FLG,
  ORDER_QTY AS ORDER_QTY,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  RETAIL_PRICE AS RETAIL_PRICE,
  OMS_DIST_ORDER_LN_NBR AS OMS_DIST_ORDER_LN_NBR,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  OMS_ORDER_LN_NBR AS OMS_ORDER_LN_NBR,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  CANCELLED_FLG AS CANCELLED_FLG,
  PRODUCT_ID AS PRODUCT_ID,
  OMS_ORDER_NBR AS OMS_ORDER_NBR,
  FREIGHT_REVENUE_CURRENCY_CD AS FREIGHT_REVENUE_CURRENCY_CD,
  FREIGHT_REVENUE AS FREIGHT_REVENUE,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  EV_RELEASED_TSTMP AS EV_RELEASED_TSTMP,
  EV_ALLOCATED_TSTMP AS EV_ALLOCATED_TSTMP,
  EV_SHIPPED_TSTMP AS EV_SHIPPED_TSTMP,
  EV_PICKEDUP_TSTMP AS EV_PICKEDUP_TSTMP,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  OMS_DO_CREATED_TSTMP AS OMS_DO_CREATED_TSTMP,
  ORDER_NBR AS ORDER_NBR,
  OMS_ORDER_CREATED_TSTMP AS OMS_ORDER_CREATED_TSTMP,
  ORIG_LOCATION_ID AS ORIG_LOCATION_ID,
  ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  ORDER_CHANNEL AS ORDER_CHANNEL,
  SCHED_DELIVERY_FLG AS SCHED_DELIVERY_FLG,
  SUBSCRIPTION_ORDER_FLG AS SUBSCRIPTION_ORDER_FLG,
  ADD_ON_FLAG AS ADD_ON_FLAG,
  ISPU_PXY_FIRST_NAME AS ISPU_PXY_FIRST_NAME,
  ISPU_PXY_LAST_NAME AS ISPU_PXY_LAST_NAME,
  ISPU_PXY_ADD_LINE1 AS ISPU_PXY_ADD_LINE1,
  ISPU_PXY_ADD_LINE2 AS ISPU_PXY_ADD_LINE2,
  ISPU_PXY_ADD_LINE3 AS ISPU_PXY_ADD_LINE3,
  ISPU_PXY_CITY AS ISPU_PXY_CITY,
  ISPU_PXY_STATE AS ISPU_PXY_STATE,
  ISPU_PXY_POSTAL_CD AS ISPU_PXY_POSTAL_CD,
  ISPU_PXY_COUNTRY AS ISPU_PXY_COUNTRY,
  ISPU_PXY_EMAIL AS ISPU_PXY_EMAIL,
  ISUP_PXY_PHONE AS ISUP_PXY_PHONE,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  RX_ORDER_FLG AS RX_ORDER_FLG,
  CANCEL_TSTMP AS CANCEL_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_DIST_ORDER_LN"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("Shortcut_to_OMS_DIST_ORDER_LN_11")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_DIST_ORDER_LN_12


query_12 = f"""SELECT
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  SCHED_DELIVERY_FLG AS SCHED_DELIVERY_FLG,
  ADD_ON_FLAG AS ADD_ON_FLAG,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_DIST_ORDER_LN_11"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("SQ_Shortcut_to_OMS_DIST_ORDER_LN_12")

# COMMAND ----------
# DBTITLE 1, jnr_OMS_DIST_ORDER_LN_13


query_13 = f"""SELECT
  MASTER.OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  MASTER.OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  MASTER.ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  MASTER.ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  MASTER.SCHED_DELIVERY_FLG AS SCHED_DELIVERY_FLG,
  MASTER.ADD_ON_FLAG AS ADD_ON_FLAG,
  DETAIL.OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID1,
  DETAIL.OMS_DIST_ORDER_TYPE_ID AS OMS_DIST_ORDER_TYPE_ID,
  DETAIL.ORIG_LOCATION_ID AS ORIG_LOCATION_ID,
  MASTER.UPDATE_TSTMP AS UPDATE_TSTMP_DIST_ORDER_LN,
  DETAIL.UPDATE_TSTMP AS UPDATE_TSTMP_DIST_ORDER,
  DETAIL.O_FACILITY_TYPE_ID AS O_FACILITY_TYPE_ID,
  DETAIL.OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_DIST_ORDER_LN_12 MASTER
  INNER JOIN JNR_FACILITY_ORD_10 DETAIL ON MASTER.OMS_DIST_ORDER_ID = DETAIL.OMS_DIST_ORDER_ID"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("jnr_OMS_DIST_ORDER_LN_13")

# COMMAND ----------
# DBTITLE 1, FLT_UPDATE_TSTMP_14


query_14 = f"""SELECT
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  SCHED_DELIVERY_FLG AS SCHED_DELIVERY_FLG,
  ADD_ON_FLAG AS ADD_ON_FLAG,
  OMS_DIST_ORDER_TYPE_ID AS OMS_DIST_ORDER_TYPE_ID,
  ORIG_LOCATION_ID AS ORIG_LOCATION_ID,
  UPDATE_TSTMP_DIST_ORDER_LN AS UPDATE_TSTMP_DIST_ORDER_LN,
  UPDATE_TSTMP_DIST_ORDER AS UPDATE_TSTMP_DIST_ORDER,
  O_FACILITY_TYPE_ID AS O_FACILITY_TYPE_ID,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  jnr_OMS_DIST_ORDER_LN_13
WHERE
  UPDATE_TSTMP_DIST_ORDER_LN > TRUNC(now())
  OR UPDATE_TSTMP_DIST_ORDER > TRUNC(now())"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("FLT_UPDATE_TSTMP_14")

# COMMAND ----------
# DBTITLE 1, jnr_OMS_DIST_ORDER_LN_ATTR_15


query_15 = f"""SELECT
  DETAIL.OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID1,
  DETAIL.OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID1,
  DETAIL.ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  DETAIL.ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  DETAIL.SCHED_DELIVERY_FLG AS SCHED_DELIVERY_FLG,
  DETAIL.ADD_ON_FLAG AS ADD_ON_FLAG,
  DETAIL.OMS_DIST_ORDER_TYPE_ID AS OMS_DIST_ORDER_TYPE_ID,
  DETAIL.ORIG_LOCATION_ID AS ORIG_LOCATION_ID,
  DETAIL.O_FACILITY_TYPE_ID AS O_FACILITY_TYPE_ID,
  DETAIL.OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  MASTER.OMS_DIST_ORDER_ID AS lkp_OMS_DIST_ORDER_ID,
  MASTER.OMS_DIST_ORDER_LN_ID AS lkp_OMS_DIST_ORDER_LN_ID,
  MASTER.ORDER_CAPTURE_CHANNEL AS lkp_ORDER_CAPTURE_CHANNEL,
  MASTER.ORDER_AUTO_SHIPMENT_FLAG AS lkp_ORDER_AUTO_SHIPMENT_FLAG,
  MASTER.ORDER_ITEM_FULFILLMENT_CHANNEL AS lkp_ORDER_ITEM_FULFILLMENT_CHANNEL,
  MASTER.ORDER_ITEM_DELIVERY_METHOD AS lkp_ORDER_ITEM_DELIVERY_METHOD,
  MASTER.ORDER_ITEM_SCHED_DELIVERY_FLAG AS lkp_ORDER_ITEM_SCHED_DELIVERY_FLAG,
  MASTER.ORDER_ITEM_ADD_ON_FLAG AS lkp_ORDER_ITEM_ADD_ON_FLAG,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_DIST_ORDER_LN_ATTR_7 MASTER
  RIGHT JOIN FLT_UPDATE_TSTMP_14 DETAIL ON MASTER.OMS_DIST_ORDER_ID = DETAIL.OMS_DIST_ORDER_ID
  AND MASTER.OMS_DIST_ORDER_LN_ID = DETAIL.OMS_DIST_ORDER_LN_ID"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("jnr_OMS_DIST_ORDER_LN_ATTR_15")

# COMMAND ----------
# DBTITLE 1, exp_CALC_16


query_16 = f"""SELECT
  OMS_DIST_ORDER_ID1 AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID1 AS OMS_DIST_ORDER_LN_ID,
  ORDER_CREATION_CHANNEL AS src_ORDER_CREATION_CHANNEL,
  ORDER_FULFILLMENT_CHANNEL AS src_ORDER_FULFILLMENT_CHANNEL,
  SCHED_DELIVERY_FLG AS src_SCHED_DELIVERY_FLG,
  ADD_ON_FLAG AS src_ADD_ON_FLAG,
  lkp_OMS_DIST_ORDER_ID AS lkp_OMS_DIST_ORDER_ID,
  lkp_OMS_DIST_ORDER_LN_ID AS lkp_OMS_DIST_ORDER_LN_ID,
  lkp_ORDER_CAPTURE_CHANNEL AS lkp_ORDER_CAPTURE_CHANNEL,
  lkp_ORDER_AUTO_SHIPMENT_FLAG AS lkp_ORDER_AUTO_SHIPMENT_FLAG,
  lkp_ORDER_ITEM_FULFILLMENT_CHANNEL AS lkp_ORDER_ITEM_FULFILLMENT_CHANNEL,
  lkp_ORDER_ITEM_DELIVERY_METHOD AS lkp_ORDER_ITEM_DELIVERY_METHOD,
  lkp_ORDER_ITEM_SCHED_DELIVERY_FLAG AS lkp_ORDER_ITEM_SCHED_DELIVERY_FLAG,
  lkp_ORDER_ITEM_ADD_ON_FLAG AS lkp_ORDER_ITEM_ADD_ON_FLAG,
  lkp_LOAD_TSTMP AS lkp_LOAD_TSTMP,
  O_FACILITY_TYPE_ID AS src_O_FACILITY_TYPE_ID,
  DECODE(
    O_FACILITY_TYPE_ID,
    64,
    'STR',
    545,
    'DC',
    33,
    'DC',
    9,
    'VENDOR',
    'STR'
  ) AS src_ORDER_ITEM_FULFILLMENT_CHANNE,
  IFF(UPPER(OMS_DO_TYPE_ID) = 'SUBSCRIPTION', 1, 0) AS src_ORDER_AUTO_SHIPMENT_FLAG,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS LOAD_TSTMP_exp,
  now() AS UPDATE_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  jnr_OMS_DIST_ORDER_LN_ATTR_15"""

df_16 = spark.sql(query_16)

df_16.createOrReplaceTempView("exp_CALC_16")

# COMMAND ----------
# DBTITLE 1, EXP_VALID_FLAG_17


query_17 = f"""SELECT
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  src_ORDER_CREATION_CHANNEL AS src_ORDER_CREATION_CHANNEL,
  src_ORDER_FULFILLMENT_CHANNEL AS src_ORDER_FULFILLMENT_CHANNEL,
  src_SCHED_DELIVERY_FLG AS src_SCHED_DELIVERY_FLG,
  src_ADD_ON_FLAG AS src_ADD_ON_FLAG,
  src_ORDER_ITEM_FULFILLMENT_CHANNE AS src_ORDER_ITEM_FULFILLMENT_CHANNE,
  src_ORDER_AUTO_SHIPMENT_FLAG AS src_ORDER_AUTO_SHIPMENT_FLAG,
  LOAD_TSTMP_exp AS LOAD_TSTMP_exp,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  lkp_OMS_DIST_ORDER_ID AS lkp_OMS_DIST_ORDER_ID,
  IFF(
    ISNULL(lkp_OMS_DIST_ORDER_ID),
    'I',
    IFF(
      (
        NOT ISNULL(lkp_OMS_DIST_ORDER_ID)
        AND (
          IFF(
            ISNULL(src_ORDER_CREATION_CHANNEL),
            ' ',
            src_ORDER_CREATION_CHANNEL
          ) <> IFF(
            ISNULL(lkp_ORDER_CAPTURE_CHANNEL),
            ' ',
            lkp_ORDER_CAPTURE_CHANNEL
          )
          OR IFF(
            ISNULL(src_ORDER_AUTO_SHIPMENT_FLAG),
            -1,
            src_ORDER_AUTO_SHIPMENT_FLAG
          ) <> IFF(
            ISNULL(lkp_ORDER_AUTO_SHIPMENT_FLAG),
            -1,
            lkp_ORDER_AUTO_SHIPMENT_FLAG
          )
          OR IFF(
            ISNULL(src_ORDER_ITEM_FULFILLMENT_CHANNE),
            ' ',
            src_ORDER_ITEM_FULFILLMENT_CHANNE
          ) <> IFF(
            ISNULL(lkp_ORDER_ITEM_FULFILLMENT_CHANNEL),
            ' ',
            lkp_ORDER_ITEM_FULFILLMENT_CHANNEL
          )
          OR IFF(
            ISNULL(src_ORDER_FULFILLMENT_CHANNEL),
            ' ',
            src_ORDER_FULFILLMENT_CHANNEL
          ) <> IFF(
            ISNULL(lkp_ORDER_ITEM_DELIVERY_METHOD),
            ' ',
            lkp_ORDER_ITEM_DELIVERY_METHOD
          )
          OR IFF(
            ISNULL(src_SCHED_DELIVERY_FLG),
            -1,
            src_SCHED_DELIVERY_FLG
          ) <> IFF(
            ISNULL(lkp_ORDER_ITEM_SCHED_DELIVERY_FLAG),
            -1,
            lkp_ORDER_ITEM_SCHED_DELIVERY_FLAG
          )
        )
      ),
      'U',
      'R'
    )
  ) AS o_UPD_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  exp_CALC_16"""

df_17 = spark.sql(query_17)

df_17.createOrReplaceTempView("EXP_VALID_FLAG_17")

# COMMAND ----------
# DBTITLE 1, upd_OMS_DIST_ORDER_LN_ATTR_18


query_18 = f"""SELECT
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_DIST_ORDER_LN_ID AS OMS_DIST_ORDER_LN_ID,
  src_ORDER_CREATION_CHANNEL AS src_ORDER_CREATION_CHANNEL,
  src_ORDER_FULFILLMENT_CHANNEL AS src_ORDER_FULFILLMENT_CHANNEL,
  src_SCHED_DELIVERY_FLG AS src_SCHED_DELIVERY_FLG,
  src_ADD_ON_FLAG AS src_ADD_ON_FLAG,
  src_ORDER_ITEM_FULFILLMENT_CHANNE AS src_ORDER_ITEM_FULFILLMENT_CHANNE,
  src_ORDER_AUTO_SHIPMENT_FLAG AS src_ORDER_AUTO_SHIPMENT_FLAG,
  LOAD_TSTMP_exp AS LOAD_TSTMP_exp,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  o_UPD_FLAG AS UPD_FLG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(
    o_UPD_FLAG,
    'I',
    'DD_INSERT',
    'U',
    'DD_UPDATE',
    'DD_REJECT'
  ) AS UPDATE_STRATEGY_FLAG
FROM
  EXP_VALID_FLAG_17"""

df_18 = spark.sql(query_18)

df_18.createOrReplaceTempView("upd_OMS_DIST_ORDER_LN_ATTR_18")

# COMMAND ----------
# DBTITLE 1, OMS_DIST_ORDER_LN_ATTR


spark.sql("""MERGE INTO OMS_DIST_ORDER_LN_ATTR AS TARGET
USING
  upd_OMS_DIST_ORDER_LN_ATTR_18 AS SOURCE ON TARGET.OMS_DIST_ORDER_LN_ID = SOURCE.OMS_DIST_ORDER_LN_ID
  AND TARGET.OMS_DIST_ORDER_ID = SOURCE.OMS_DIST_ORDER_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_DIST_ORDER_ID = SOURCE.OMS_DIST_ORDER_ID,
  TARGET.OMS_DIST_ORDER_LN_ID = SOURCE.OMS_DIST_ORDER_LN_ID,
  TARGET.ORDER_CAPTURE_CHANNEL = SOURCE.src_ORDER_CREATION_CHANNEL,
  TARGET.ORDER_AUTO_SHIPMENT_FLAG = SOURCE.src_ORDER_AUTO_SHIPMENT_FLAG,
  TARGET.ORDER_ITEM_FULFILLMENT_CHANNEL = SOURCE.src_ORDER_ITEM_FULFILLMENT_CHANNE,
  TARGET.ORDER_ITEM_DELIVERY_METHOD = SOURCE.src_ORDER_FULFILLMENT_CHANNEL,
  TARGET.ORDER_ITEM_SCHED_DELIVERY_FLAG = SOURCE.src_SCHED_DELIVERY_FLG,
  TARGET.ORDER_ITEM_ADD_ON_FLAG = SOURCE.src_ADD_ON_FLAG,
  TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP_exp
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.ORDER_CAPTURE_CHANNEL = SOURCE.src_ORDER_CREATION_CHANNEL
  AND TARGET.ORDER_AUTO_SHIPMENT_FLAG = SOURCE.src_ORDER_AUTO_SHIPMENT_FLAG
  AND TARGET.ORDER_ITEM_FULFILLMENT_CHANNEL = SOURCE.src_ORDER_ITEM_FULFILLMENT_CHANNE
  AND TARGET.ORDER_ITEM_DELIVERY_METHOD = SOURCE.src_ORDER_FULFILLMENT_CHANNEL
  AND TARGET.ORDER_ITEM_SCHED_DELIVERY_FLAG = SOURCE.src_SCHED_DELIVERY_FLG
  AND TARGET.ORDER_ITEM_ADD_ON_FLAG = SOURCE.src_ADD_ON_FLAG
  AND TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP_exp THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_DIST_ORDER_ID,
    TARGET.OMS_DIST_ORDER_LN_ID,
    TARGET.ORDER_CAPTURE_CHANNEL,
    TARGET.ORDER_AUTO_SHIPMENT_FLAG,
    TARGET.ORDER_ITEM_FULFILLMENT_CHANNEL,
    TARGET.ORDER_ITEM_DELIVERY_METHOD,
    TARGET.ORDER_ITEM_SCHED_DELIVERY_FLAG,
    TARGET.ORDER_ITEM_ADD_ON_FLAG,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.OMS_DIST_ORDER_ID,
    SOURCE.OMS_DIST_ORDER_LN_ID,
    SOURCE.src_ORDER_CREATION_CHANNEL,
    SOURCE.src_ORDER_AUTO_SHIPMENT_FLAG,
    SOURCE.src_ORDER_ITEM_FULFILLMENT_CHANNE,
    SOURCE.src_ORDER_FULFILLMENT_CHANNEL,
    SOURCE.src_SCHED_DELIVERY_FLG,
    SOURCE.src_ADD_ON_FLAG,
    SOURCE.UPDATE_TSTMP,
    SOURCE.LOAD_TSTMP_exp
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Dist_Order_LN_ATTR")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_OMS_Dist_Order_LN_ATTR", mainWorkflowId, parentName)
