# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DD_MarketPlace_Demand_SKU")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DD_MarketPlace_Demand_SKU", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DD_MARKETPLACE_DEMAND_SKU_TZ_PRE_VW_0


query_0 = f"""SELECT
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  MERCHANT_STORE_ID AS MERCHANT_STORE_ID,
  ITEM_MERCHANT_SUPPLIED_ID AS ITEM_MERCHANT_SUPPLIED_ID,
  STORE_NAME AS STORE_NAME,
  BUSINESS_NAME AS BUSINESS_NAME,
  ITEM_NAME AS ITEM_NAME,
  ITEM_CATEGORY AS ITEM_CATEGORY,
  ITEM_PRICE AS ITEM_PRICE,
  ITEM_QUANTITY AS ITEM_QUANTITY,
  ITEM_TAX_AMOUNT AS ITEM_TAX_AMOUNT,
  TOTAL_ITEM_PRICE AS TOTAL_ITEM_PRICE,
  FINAL_STATUS AS FINAL_STATUS,
  CURRENCY_CD AS CURRENCY_CD,
  DASHPASS_FLAG AS DASHPASS_FLAG,
  DELIVERY_CREATED_DATE_UTC AS DELIVERY_CREATED_DATE_UTC,
  DELIVERY_CREATED_TIMESTAMP_UTC AS DELIVERY_CREATED_TIMESTAMP_UTC,
  STORE_TRANSACTION_DATE_UTC AS STORE_TRANSACTION_DATE_UTC,
  STORE_TRANSACTION_TIMESTAMP_UTC AS STORE_TRANSACTION_TIMESTAMP_UTC,
  LOAD_TSTMP AS LOAD_TSTMP,
  TIME_ZONE_ID AS TIME_ZONE_ID,
  LOCATION_ID AS LOCATION_ID,
  SITE_NAME AS SITE_NAME,
  TXN_TSTMP AS TXN_TSTMP
FROM
  DD_MARKETPLACE_DEMAND_SKU_TZ_PRE_VW"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_DD_MARKETPLACE_DEMAND_SKU_TZ_PRE_VW_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_DD_MARKETPLACE_DEMAND_SKU_TZ_PRE_VW_1


query_1 = f"""SELECT
  DISTINCT DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  MERCHANT_STORE_ID AS MERCHANT_STORE_ID,
  ITEM_MERCHANT_SUPPLIED_ID AS ITEM_MERCHANT_SUPPLIED_ID,
  STORE_NAME AS STORE_NAME,
  BUSINESS_NAME AS BUSINESS_NAME,
  ITEM_NAME AS ITEM_NAME,
  ITEM_CATEGORY AS ITEM_CATEGORY,
  ITEM_PRICE AS ITEM_PRICE,
  ITEM_QUANTITY AS ITEM_QUANTITY,
  ITEM_TAX_AMOUNT AS ITEM_TAX_AMOUNT,
  TOTAL_ITEM_PRICE AS TOTAL_ITEM_PRICE,
  FINAL_STATUS AS FINAL_STATUS,
  CURRENCY_CD AS CURRENCY_CD,
  DASHPASS_FLAG AS DASHPASS_FLAG,
  DELIVERY_CREATED_DATE_UTC AS DELIVERY_CREATED_DATE_UTC,
  DELIVERY_CREATED_TIMESTAMP_UTC AS DELIVERY_CREATED_TIMESTAMP_UTC,
  STORE_TRANSACTION_DATE_UTC AS STORE_TRANSACTION_DATE_UTC,
  STORE_TRANSACTION_TIMESTAMP_UTC AS STORE_TRANSACTION_TIMESTAMP_UTC,
  LOAD_TSTMP AS LOAD_TSTMP,
  TIME_ZONE_ID AS TIME_ZONE_ID,
  LOCATION_ID AS LOCATION_ID,
  SITE_NAME AS SITE_NAME,
  TXN_TSTMP AS TXN_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_DD_MARKETPLACE_DEMAND_SKU_TZ_PRE_VW_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_DD_MARKETPLACE_DEMAND_SKU_TZ_PRE_VW_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DD_MARKETPLACE_DEMAND_SKU1_2


query_2 = f"""SELECT
  TXN_DT AS TXN_DT,
  TXN_TSTMP AS TXN_TSTMP,
  TXN_TSTMP_UTC AS TXN_TSTMP_UTC,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  ITEM_MERCHANT_SUPPLIED_ID AS ITEM_MERCHANT_SUPPLIED_ID,
  STORE_NAME AS STORE_NAME,
  BUSINESS_NAME AS BUSINESS_NAME,
  ITEM_NAME AS ITEM_NAME,
  ITEM_CATEGORY AS ITEM_CATEGORY,
  ITEM_PRICE AS ITEM_PRICE,
  ITEM_QUANTITY AS ITEM_QUANTITY,
  ITEM_TAX_AMOUNT AS ITEM_TAX_AMOUNT,
  TOTAL_ITEM_PRICE AS TOTAL_ITEM_PRICE,
  FINAL_STATUS AS FINAL_STATUS,
  CURRENCY_CD AS CURRENCY_CD,
  DELIVERY_CREATED_DATE_UTC AS DELIVERY_CREATED_DATE_UTC,
  DELIVERY_CREATED_TIMESTAMP_UTC AS DELIVERY_CREATED_TIMESTAMP_UTC,
  STORE_TRANSACTION_DATE_UTC AS STORE_TRANSACTION_DATE_UTC,
  STORE_TRANSACTION_TIMESTAMP_UTC AS STORE_TRANSACTION_TIMESTAMP_UTC,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  DD_MARKETPLACE_DEMAND_SKU"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_DD_MARKETPLACE_DEMAND_SKU1_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_DD_MARKETPLACE_DEMAND_SKU_3


query_3 = f"""SELECT
  TXN_DT AS TXN_DT,
  TXN_TSTMP AS TXN_TSTMP,
  TXN_TSTMP_UTC AS TXN_TSTMP_UTC,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  ITEM_MERCHANT_SUPPLIED_ID AS ITEM_MERCHANT_SUPPLIED_ID,
  STORE_NAME AS STORE_NAME,
  BUSINESS_NAME AS BUSINESS_NAME,
  ITEM_NAME AS ITEM_NAME,
  ITEM_CATEGORY AS ITEM_CATEGORY,
  ITEM_PRICE AS ITEM_PRICE,
  ITEM_QUANTITY AS ITEM_QUANTITY,
  ITEM_TAX_AMOUNT AS ITEM_TAX_AMOUNT,
  TOTAL_ITEM_PRICE AS TOTAL_ITEM_PRICE,
  FINAL_STATUS AS FINAL_STATUS,
  CURRENCY_CD AS CURRENCY_CD,
  DELIVERY_CREATED_DATE_UTC AS DELIVERY_CREATED_DATE_UTC,
  DELIVERY_CREATED_TIMESTAMP_UTC AS DELIVERY_CREATED_TIMESTAMP_UTC,
  STORE_TRANSACTION_DATE_UTC AS STORE_TRANSACTION_DATE_UTC,
  STORE_TRANSACTION_TIMESTAMP_UTC AS STORE_TRANSACTION_TIMESTAMP_UTC,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_DD_MARKETPLACE_DEMAND_SKU1_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_DD_MARKETPLACE_DEMAND_SKU_3")

# COMMAND ----------
# DBTITLE 1, JNR_Src_Tgt_Logic_4


query_4 = f"""SELECT
  MASTER.DD_DELIVERY_UUID AS src_DD_DELIVERY_UUID,
  MASTER.MERCHANT_STORE_ID AS src_MERCHANT_STORE_ID,
  MASTER.ITEM_MERCHANT_SUPPLIED_ID AS src_ITEM_MERCHANT_SUPPLIED_ID,
  MASTER.STORE_NAME AS src_STORE_NAME,
  MASTER.BUSINESS_NAME AS src_BUSINESS_NAME,
  MASTER.ITEM_NAME AS src_ITEM_NAME,
  MASTER.ITEM_CATEGORY AS src_ITEM_CATEGORY,
  MASTER.ITEM_PRICE AS src_ITEM_PRICE,
  MASTER.ITEM_QUANTITY AS src_ITEM_QUANTITY,
  MASTER.ITEM_TAX_AMOUNT AS src_ITEM_TAX_AMOUNT,
  MASTER.TOTAL_ITEM_PRICE AS src_TOTAL_ITEM_PRICE,
  MASTER.FINAL_STATUS AS src_FINAL_STATUS,
  MASTER.CURRENCY_CD AS src_CURRENCY_CD,
  MASTER.DASHPASS_FLAG AS src_DASHPASS_FLAG,
  MASTER.DELIVERY_CREATED_DATE_UTC AS src_DELIVERY_CREATED_DATE_UTC,
  MASTER.DELIVERY_CREATED_TIMESTAMP_UTC AS src_DELIVERY_CREATED_TIMESTAMP_UTC,
  MASTER.STORE_TRANSACTION_DATE_UTC AS src_STORE_TRANSACTION_DATE_UTC,
  MASTER.STORE_TRANSACTION_TIMESTAMP_UTC AS src_STORE_TRANSACTION_TIMESTAMP_UTC,
  MASTER.LOAD_TSTMP AS src_LOAD_TSTMP,
  MASTER.TIME_ZONE_ID AS src_TIME_ZONE_ID,
  MASTER.LOCATION_ID AS src_LOCATION_ID,
  MASTER.SITE_NAME AS src_SITE_NAME,
  MASTER.TXN_TSTMP AS src_TXN_TSTMP,
  DETAIL.TXN_DT AS tgt_TXN_DT,
  DETAIL.TXN_TSTMP AS tgt_TXN_TSTMP,
  DETAIL.TXN_TSTMP_UTC AS tgt_TXN_TSTMP_UTC,
  DETAIL.LOCATION_ID AS tgt_LOCATION_ID,
  DETAIL.DD_DELIVERY_UUID AS tgt_DD_DELIVERY_UUID,
  DETAIL.DASHPASS_ORDER_FLAG AS tgt_DASHPASS_ORDER_FLAG,
  DETAIL.ITEM_MERCHANT_SUPPLIED_ID AS tgt_ITEM_MERCHANT_SUPPLIED_ID,
  DETAIL.STORE_NAME AS tgt_STORE_NAME,
  DETAIL.BUSINESS_NAME AS tgt_BUSINESS_NAME,
  DETAIL.ITEM_NAME AS tgt_ITEM_NAME,
  DETAIL.ITEM_CATEGORY AS tgt_ITEM_CATEGORY,
  DETAIL.ITEM_PRICE AS tgt_ITEM_PRICE,
  DETAIL.ITEM_QUANTITY AS tgt_ITEM_QUANTITY,
  DETAIL.ITEM_TAX_AMOUNT AS tgt_ITEM_TAX_AMOUNT,
  DETAIL.TOTAL_ITEM_PRICE AS tgt_TOTAL_ITEM_PRICE,
  DETAIL.FINAL_STATUS AS tgt_FINAL_STATUS,
  DETAIL.CURRENCY_CD AS tgt_CURRENCY_CD,
  DETAIL.DELIVERY_CREATED_DATE_UTC AS tgt_DELIVERY_CREATED_DATE_UTC,
  DETAIL.DELIVERY_CREATED_TIMESTAMP_UTC AS tgt_DELIVERY_CREATED_TIMESTAMP_UTC,
  DETAIL.STORE_TRANSACTION_DATE_UTC AS tgt_STORE_TRANSACTION_DATE_UTC,
  DETAIL.STORE_TRANSACTION_TIMESTAMP_UTC AS tgt_STORE_TRANSACTION_TIMESTAMP_UTC,
  DETAIL.UPDATE_TSTMP AS tgt_UPDATE_TSTMP,
  DETAIL.LOAD_TSTMP AS tgt_LOAD_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_DD_MARKETPLACE_DEMAND_SKU_TZ_PRE_VW_1 MASTER
  LEFT JOIN SQ_Shortcut_to_DD_MARKETPLACE_DEMAND_SKU_3 DETAIL ON MASTER.DD_DELIVERY_UUID = DETAIL.DD_DELIVERY_UUID
  AND MASTER.ITEM_MERCHANT_SUPPLIED_ID = DETAIL.ITEM_MERCHANT_SUPPLIED_ID
  AND MASTER.LOCATION_ID = DETAIL.LOCATION_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_Src_Tgt_Logic_4")

# COMMAND ----------
# DBTITLE 1, EXP_Logic_5


query_5 = f"""SELECT
  src_DD_DELIVERY_UUID AS src_DD_DELIVERY_UUID,
  src_MERCHANT_STORE_ID AS src_MERCHANT_STORE_ID,
  src_ITEM_MERCHANT_SUPPLIED_ID AS src_ITEM_MERCHANT_SUPPLIED_ID,
  src_STORE_NAME AS src_STORE_NAME,
  src_BUSINESS_NAME AS src_BUSINESS_NAME,
  src_ITEM_NAME AS src_ITEM_NAME,
  src_ITEM_CATEGORY AS src_ITEM_CATEGORY,
  src_ITEM_PRICE AS src_ITEM_PRICE,
  src_ITEM_QUANTITY AS src_ITEM_QUANTITY,
  src_ITEM_TAX_AMOUNT AS src_ITEM_TAX_AMOUNT,
  src_TOTAL_ITEM_PRICE AS src_TOTAL_ITEM_PRICE,
  src_FINAL_STATUS AS src_FINAL_STATUS,
  src_CURRENCY_CD AS src_CURRENCY_CD,
  src_DASHPASS_FLAG AS src_DASHPASS_FLAG,
  src_DELIVERY_CREATED_DATE_UTC AS src_DELIVERY_CREATED_DATE_UTC,
  src_DELIVERY_CREATED_TIMESTAMP_UTC AS src_DELIVERY_CREATED_TIMESTAMP_UTC,
  src_STORE_TRANSACTION_DATE_UTC AS src_STORE_TRANSACTION_DATE_UTC,
  src_STORE_TRANSACTION_TIMESTAMP_UTC AS src_STORE_TRANSACTION_TIMESTAMP_UTC,
  src_LOAD_TSTMP AS src_LOAD_TSTMP,
  src_TIME_ZONE_ID AS src_TIME_ZONE_ID,
  src_LOCATION_ID AS src_LOCATION_ID,
  src_SITE_NAME AS src_SITE_NAME,
  src_TXN_TSTMP AS src_TXN_TSTMP,
  SESSSTARTTIME AS o_UPDATE_TSTMP,
  IFF(
    ISNULL(tgt_LOAD_TSTMP),
    SESSSTARTTIME,
    tgt_LOAD_TSTMP
  ) AS o_LOAD_TSTMP,
  IFF(
    ISNULL(tgt_LOAD_TSTMP),
    'I',
    IFF (
      NOT ISNULL(tgt_LOAD_TSTMP)
      AND (
        (
          IFF(
            ISNULL(src_DD_DELIVERY_UUID),
            'A',
            src_DD_DELIVERY_UUID
          ) <> IFF(
            ISNULL(tgt_DD_DELIVERY_UUID),
            'A',
            tgt_DD_DELIVERY_UUID
          )
        )
        OR IFF (
          ISNULL(src_ITEM_MERCHANT_SUPPLIED_ID),
          1,
          src_ITEM_MERCHANT_SUPPLIED_ID
        ) <> IFF (
          ISNULL(tgt_ITEM_MERCHANT_SUPPLIED_ID),
          1,
          tgt_ITEM_MERCHANT_SUPPLIED_ID
        )
        OR IFF (ISNULL(src_STORE_NAME), 'A', src_STORE_NAME) <> IFF (ISNULL(tgt_STORE_NAME), 'A', tgt_STORE_NAME)
        OR IFF (ISNULL(src_BUSINESS_NAME), 'A', src_BUSINESS_NAME) <> IFF (ISNULL(tgt_BUSINESS_NAME), 'A', tgt_BUSINESS_NAME)
        OR IFF (ISNULL(src_ITEM_NAME), 'A', src_ITEM_NAME) <> IFF (ISNULL(tgt_ITEM_NAME), 'A', tgt_ITEM_NAME)
        OR IFF (ISNULL(src_ITEM_CATEGORY), 'A', src_ITEM_CATEGORY) <> IFF (ISNULL(tgt_ITEM_CATEGORY), 'A', tgt_ITEM_CATEGORY)
        OR IFF (ISNULL(src_ITEM_PRICE), 1, src_ITEM_PRICE) <> IFF (ISNULL(tgt_ITEM_PRICE), 1, tgt_ITEM_PRICE)
        OR IFF (ISNULL(src_ITEM_QUANTITY), 1, src_ITEM_QUANTITY) <> IFF (ISNULL(tgt_ITEM_QUANTITY), 1, tgt_ITEM_QUANTITY)
        OR IFF (
          ISNULL(src_ITEM_TAX_AMOUNT),
          1,
          src_ITEM_TAX_AMOUNT
        ) <> IFF (
          ISNULL(tgt_ITEM_TAX_AMOUNT),
          1,
          tgt_ITEM_TAX_AMOUNT
        )
        OR IFF (
          ISNULL(src_TOTAL_ITEM_PRICE),
          1,
          src_TOTAL_ITEM_PRICE
        ) <> IFF (
          ISNULL(tgt_TOTAL_ITEM_PRICE),
          1,
          tgt_TOTAL_ITEM_PRICE
        )
        OR IFF (ISNULL(src_FINAL_STATUS), 'A', src_FINAL_STATUS) <> IFF (ISNULL(tgt_FINAL_STATUS), 'A', tgt_FINAL_STATUS)
        OR IFF (ISNULL(tgt_CURRENCY_CD), 'A', tgt_CURRENCY_CD) <> IFF (ISNULL(src_CURRENCY_CD), 'A', src_CURRENCY_CD)
        OR IFF (ISNULL(src_LOCATION_ID), 1, src_LOCATION_ID) <> IFF (ISNULL(tgt_LOCATION_ID), 1, tgt_LOCATION_ID)
        OR (
          IFF(
            ISNULL(src_DELIVERY_CREATED_DATE_UTC),
            To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
            src_DELIVERY_CREATED_DATE_UTC
          )
        ) != (
          IFF(
            ISNULL(tgt_DELIVERY_CREATED_DATE_UTC),
            To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
            tgt_DELIVERY_CREATED_DATE_UTC
          )
        )
        OR (
          IFF(
            ISNULL(src_DELIVERY_CREATED_TIMESTAMP_UTC),
            To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
            src_DELIVERY_CREATED_TIMESTAMP_UTC
          )
        ) != (
          IFF(
            ISNULL(tgt_DELIVERY_CREATED_TIMESTAMP_UTC),
            To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
            tgt_DELIVERY_CREATED_TIMESTAMP_UTC
          )
        )
        OR (
          IFF(
            ISNULL(src_STORE_TRANSACTION_DATE_UTC),
            To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
            src_STORE_TRANSACTION_DATE_UTC
          )
        ) != (
          IFF(
            ISNULL(tgt_STORE_TRANSACTION_DATE_UTC),
            To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
            tgt_STORE_TRANSACTION_DATE_UTC
          )
        )
        OR (
          IFF(
            ISNULL(src_STORE_TRANSACTION_TIMESTAMP_UTC),
            To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
            src_STORE_TRANSACTION_TIMESTAMP_UTC
          )
        ) != (
          IFF(
            ISNULL(tgt_STORE_TRANSACTION_TIMESTAMP_UTC),
            To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
            tgt_STORE_TRANSACTION_TIMESTAMP_UTC
          )
        )
      ),
      'U',
      'X'
    )
  ) AS o_Flag,
  IFF(
    ISNULL(src_STORE_TRANSACTION_TIMESTAMP_UTC),
    src_DELIVERY_CREATED_TIMESTAMP_UTC,
    src_STORE_TRANSACTION_TIMESTAMP_UTC
  ) AS o_TXN_TSTMP_UTC,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_Src_Tgt_Logic_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("EXP_Logic_5")

# COMMAND ----------
# DBTITLE 1, fil_NO_CHANGE_6


query_6 = f"""SELECT
  src_DD_DELIVERY_UUID AS src_DD_DELIVERY_UUID,
  src_MERCHANT_STORE_ID AS src_MERCHANT_STORE_ID,
  src_ITEM_MERCHANT_SUPPLIED_ID AS src_ITEM_MERCHANT_SUPPLIED_ID,
  src_STORE_NAME AS src_STORE_NAME,
  src_BUSINESS_NAME AS src_BUSINESS_NAME,
  src_ITEM_NAME AS src_ITEM_NAME,
  src_ITEM_CATEGORY AS src_ITEM_CATEGORY,
  src_ITEM_PRICE AS src_ITEM_PRICE,
  src_ITEM_QUANTITY AS src_ITEM_QUANTITY,
  src_ITEM_TAX_AMOUNT AS src_ITEM_TAX_AMOUNT,
  src_TOTAL_ITEM_PRICE AS src_TOTAL_ITEM_PRICE,
  src_FINAL_STATUS AS src_FINAL_STATUS,
  src_CURRENCY_CD AS src_CURRENCY_CD,
  src_DASHPASS_FLAG AS src_DASHPASS_FLAG,
  src_DELIVERY_CREATED_DATE_UTC AS src_DELIVERY_CREATED_DATE_UTC,
  src_DELIVERY_CREATED_TIMESTAMP_UTC AS src_DELIVERY_CREATED_TIMESTAMP_UTC,
  src_STORE_TRANSACTION_DATE_UTC AS src_STORE_TRANSACTION_DATE_UTC,
  src_STORE_TRANSACTION_TIMESTAMP_UTC AS src_STORE_TRANSACTION_TIMESTAMP_UTC,
  src_LOAD_TSTMP AS src_LOAD_TSTMP,
  src_TIME_ZONE_ID AS src_TIME_ZONE_ID,
  src_LOCATION_ID AS src_LOCATION_ID,
  src_SITE_NAME AS src_SITE_NAME,
  src_TXN_TSTMP AS src_TXN_TSTMP,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  o_Flag AS o_Flag,
  o_TXN_TSTMP_UTC AS o_TXN_TSTMP_UTC,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_Logic_5
WHERE
  o_Flag <> 'X'"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("fil_NO_CHANGE_6")

# COMMAND ----------
# DBTITLE 1, upd_IND_UPD_7


query_7 = f"""SELECT
  src_DD_DELIVERY_UUID AS src_DD_DELIVERY_UUID,
  src_MERCHANT_STORE_ID AS src_MERCHANT_STORE_ID,
  src_ITEM_MERCHANT_SUPPLIED_ID AS src_ITEM_MERCHANT_SUPPLIED_ID,
  src_STORE_NAME AS src_STORE_NAME,
  src_BUSINESS_NAME AS src_BUSINESS_NAME,
  src_ITEM_NAME AS src_ITEM_NAME,
  src_ITEM_CATEGORY AS src_ITEM_CATEGORY,
  src_ITEM_PRICE AS src_ITEM_PRICE,
  src_ITEM_QUANTITY AS src_ITEM_QUANTITY,
  src_ITEM_TAX_AMOUNT AS src_ITEM_TAX_AMOUNT,
  src_TOTAL_ITEM_PRICE AS src_TOTAL_ITEM_PRICE,
  src_FINAL_STATUS AS src_FINAL_STATUS,
  src_CURRENCY_CD AS src_CURRENCY_CD,
  src_DASHPASS_FLAG AS src_DASHPASS_FLAG,
  src_DELIVERY_CREATED_DATE_UTC AS src_DELIVERY_CREATED_DATE_UTC,
  src_DELIVERY_CREATED_TIMESTAMP_UTC AS src_DELIVERY_CREATED_TIMESTAMP_UTC,
  src_STORE_TRANSACTION_DATE_UTC AS src_STORE_TRANSACTION_DATE_UTC,
  src_STORE_TRANSACTION_TIMESTAMP_UTC AS src_STORE_TRANSACTION_TIMESTAMP_UTC,
  src_LOAD_TSTMP AS src_LOAD_TSTMP,
  src_TIME_ZONE_ID AS src_TIME_ZONE_ID,
  src_LOCATION_ID AS src_LOCATION_ID,
  src_SITE_NAME AS src_SITE_NAME,
  src_TXN_TSTMP AS src_TXN_TSTMP,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  o_Flag AS o_Flag,
  o_TXN_TSTMP_UTC AS o_TXN_TSTMP_UTC,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(o_Flag, 'I', 'DD_INSERT', 'U', 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  fil_NO_CHANGE_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("upd_IND_UPD_7")

# COMMAND ----------
# DBTITLE 1, DD_MARKETPLACE_DEMAND_SKU


spark.sql("""MERGE INTO DD_MARKETPLACE_DEMAND_SKU AS TARGET
USING
  upd_IND_UPD_7 AS SOURCE ON TARGET.LOCATION_ID = SOURCE.src_LOCATION_ID
  AND TARGET.ITEM_MERCHANT_SUPPLIED_ID = SOURCE.src_ITEM_MERCHANT_SUPPLIED_ID
  AND TARGET.DD_DELIVERY_UUID = SOURCE.src_DD_DELIVERY_UUID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.TXN_DT = SOURCE.src_TXN_TSTMP,
  TARGET.TXN_TSTMP = SOURCE.src_TXN_TSTMP,
  TARGET.TXN_TSTMP_UTC = SOURCE.o_TXN_TSTMP_UTC,
  TARGET.LOCATION_ID = SOURCE.src_LOCATION_ID,
  TARGET.DD_DELIVERY_UUID = SOURCE.src_DD_DELIVERY_UUID,
  TARGET.DASHPASS_ORDER_FLAG = SOURCE.src_DASHPASS_FLAG,
  TARGET.ITEM_MERCHANT_SUPPLIED_ID = SOURCE.src_ITEM_MERCHANT_SUPPLIED_ID,
  TARGET.STORE_NAME = SOURCE.src_STORE_NAME,
  TARGET.BUSINESS_NAME = SOURCE.src_BUSINESS_NAME,
  TARGET.ITEM_NAME = SOURCE.src_ITEM_NAME,
  TARGET.ITEM_CATEGORY = SOURCE.src_ITEM_CATEGORY,
  TARGET.ITEM_PRICE = SOURCE.src_ITEM_PRICE,
  TARGET.ITEM_QUANTITY = SOURCE.src_ITEM_QUANTITY,
  TARGET.ITEM_TAX_AMOUNT = SOURCE.src_ITEM_TAX_AMOUNT,
  TARGET.TOTAL_ITEM_PRICE = SOURCE.src_TOTAL_ITEM_PRICE,
  TARGET.FINAL_STATUS = SOURCE.src_FINAL_STATUS,
  TARGET.CURRENCY_CD = SOURCE.src_CURRENCY_CD,
  TARGET.DELIVERY_CREATED_DATE_UTC = SOURCE.src_DELIVERY_CREATED_DATE_UTC,
  TARGET.DELIVERY_CREATED_TIMESTAMP_UTC = SOURCE.src_DELIVERY_CREATED_TIMESTAMP_UTC,
  TARGET.STORE_TRANSACTION_DATE_UTC = SOURCE.src_STORE_TRANSACTION_DATE_UTC,
  TARGET.STORE_TRANSACTION_TIMESTAMP_UTC = SOURCE.src_STORE_TRANSACTION_TIMESTAMP_UTC,
  TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.TXN_DT = SOURCE.src_TXN_TSTMP
  AND TARGET.TXN_TSTMP = SOURCE.src_TXN_TSTMP
  AND TARGET.TXN_TSTMP_UTC = SOURCE.o_TXN_TSTMP_UTC
  AND TARGET.DASHPASS_ORDER_FLAG = SOURCE.src_DASHPASS_FLAG
  AND TARGET.STORE_NAME = SOURCE.src_STORE_NAME
  AND TARGET.BUSINESS_NAME = SOURCE.src_BUSINESS_NAME
  AND TARGET.ITEM_NAME = SOURCE.src_ITEM_NAME
  AND TARGET.ITEM_CATEGORY = SOURCE.src_ITEM_CATEGORY
  AND TARGET.ITEM_PRICE = SOURCE.src_ITEM_PRICE
  AND TARGET.ITEM_QUANTITY = SOURCE.src_ITEM_QUANTITY
  AND TARGET.ITEM_TAX_AMOUNT = SOURCE.src_ITEM_TAX_AMOUNT
  AND TARGET.TOTAL_ITEM_PRICE = SOURCE.src_TOTAL_ITEM_PRICE
  AND TARGET.FINAL_STATUS = SOURCE.src_FINAL_STATUS
  AND TARGET.CURRENCY_CD = SOURCE.src_CURRENCY_CD
  AND TARGET.DELIVERY_CREATED_DATE_UTC = SOURCE.src_DELIVERY_CREATED_DATE_UTC
  AND TARGET.DELIVERY_CREATED_TIMESTAMP_UTC = SOURCE.src_DELIVERY_CREATED_TIMESTAMP_UTC
  AND TARGET.STORE_TRANSACTION_DATE_UTC = SOURCE.src_STORE_TRANSACTION_DATE_UTC
  AND TARGET.STORE_TRANSACTION_TIMESTAMP_UTC = SOURCE.src_STORE_TRANSACTION_TIMESTAMP_UTC
  AND TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.TXN_DT,
    TARGET.TXN_TSTMP,
    TARGET.TXN_TSTMP_UTC,
    TARGET.LOCATION_ID,
    TARGET.DD_DELIVERY_UUID,
    TARGET.DASHPASS_ORDER_FLAG,
    TARGET.ITEM_MERCHANT_SUPPLIED_ID,
    TARGET.STORE_NAME,
    TARGET.BUSINESS_NAME,
    TARGET.ITEM_NAME,
    TARGET.ITEM_CATEGORY,
    TARGET.ITEM_PRICE,
    TARGET.ITEM_QUANTITY,
    TARGET.ITEM_TAX_AMOUNT,
    TARGET.TOTAL_ITEM_PRICE,
    TARGET.FINAL_STATUS,
    TARGET.CURRENCY_CD,
    TARGET.DELIVERY_CREATED_DATE_UTC,
    TARGET.DELIVERY_CREATED_TIMESTAMP_UTC,
    TARGET.STORE_TRANSACTION_DATE_UTC,
    TARGET.STORE_TRANSACTION_TIMESTAMP_UTC,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.src_TXN_TSTMP,
    SOURCE.src_TXN_TSTMP,
    SOURCE.o_TXN_TSTMP_UTC,
    SOURCE.src_LOCATION_ID,
    SOURCE.src_DD_DELIVERY_UUID,
    SOURCE.src_DASHPASS_FLAG,
    SOURCE.src_ITEM_MERCHANT_SUPPLIED_ID,
    SOURCE.src_STORE_NAME,
    SOURCE.src_BUSINESS_NAME,
    SOURCE.src_ITEM_NAME,
    SOURCE.src_ITEM_CATEGORY,
    SOURCE.src_ITEM_PRICE,
    SOURCE.src_ITEM_QUANTITY,
    SOURCE.src_ITEM_TAX_AMOUNT,
    SOURCE.src_TOTAL_ITEM_PRICE,
    SOURCE.src_FINAL_STATUS,
    SOURCE.src_CURRENCY_CD,
    SOURCE.src_DELIVERY_CREATED_DATE_UTC,
    SOURCE.src_DELIVERY_CREATED_TIMESTAMP_UTC,
    SOURCE.src_STORE_TRANSACTION_DATE_UTC,
    SOURCE.src_STORE_TRANSACTION_TIMESTAMP_UTC,
    SOURCE.o_UPDATE_TSTMP,
    SOURCE.o_LOAD_TSTMP
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DD_MarketPlace_Demand_SKU")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DD_MarketPlace_Demand_SKU", mainWorkflowId, parentName)
