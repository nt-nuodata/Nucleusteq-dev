# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Invoice_Ln_Historical_Load")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_OMS_Invoice_Ln_Historical_Load", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_EDW_LOAD_CTRL_PRE_0


query_0 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  ORDER_NBR AS ORDER_NBR,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_TC_PO_LINE_ID AS OMS_TC_PO_LINE_ID,
  OMS_ORDER_FULFILLMENT_OPTION AS OMS_ORDER_FULFILLMENT_OPTION,
  ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  ORDER_CHANNEL AS ORDER_CHANNEL,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_ENTERED_BY AS OMS_ENTERED_BY,
  OMS_ROLE_NAME AS OMS_ROLE_NAME,
  PO_OMS_CREATED_TSTMP AS PO_OMS_CREATED_TSTMP,
  PO_OMS_LAST_UPDATED_DTTM AS PO_OMS_LAST_UPDATED_DTTM,
  POL_OMS_CREATED_TSTMP AS POL_OMS_CREATED_TSTMP,
  POL_OMS_LAST_UPDATED_TSTMP AS POL_OMS_LAST_UPDATED_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_EDW_LOAD_CTRL_PRE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_EDW_LOAD_CTRL_PRE_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_EDW_LOAD_CTRL_PRE_1


query_1 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  OMS_TC_COMPANY_ID AS TC_COMPANY_ID,
  ORDER_NBR AS ORDER_NBR,
  OMS_TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  OMS_TC_PO_LINE_ID AS TC_PO_LINE_ID,
  OMS_ORDER_FULFILLMENT_OPTION AS ORDER_FULFILLMENT_OPTION,
  ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  ORDER_CHANNEL AS ORDER_CHANNEL,
  OMS_CREATED_SOURCE AS CREATED_SOURCE,
  OMS_ENTERED_BY AS ENTERED_BY,
  OMS_ROLE_NAME AS ROLE_NAME,
  PO_OMS_CREATED_TSTMP AS PO_CREATED_DTTM,
  PO_OMS_LAST_UPDATED_DTTM AS PO_LAST_UPDATED_DTTM,
  POL_OMS_CREATED_TSTMP AS POL_CREATED_DTTM,
  POL_OMS_LAST_UPDATED_TSTMP AS POL_LAST_UPDATED_DTTM,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_EDW_LOAD_CTRL_PRE_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_EDW_LOAD_CTRL_PRE_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_INVOICE_LINE_2


query_2 = f"""SELECT
  OMS_INVOICE_LINE_ID AS OMS_INVOICE_LINE_ID,
  OMS_INVOICE_LINE_NBR AS OMS_INVOICE_LINE_NBR,
  OMS_INVOICE_ID AS OMS_INVOICE_ID,
  OMS_ENTITY_LINE_NBR AS OMS_ENTITY_LINE_NBR,
  OMS_ORDER_LINE_ID AS OMS_ORDER_LINE_ID,
  OMS_RETURN_ORDER_LINE_ID AS OMS_RETURN_ORDER_LINE_ID,
  OMS_RETURN_ORDER_LINE_NBR AS OMS_RETURN_ORDER_LINE_NBR,
  OMS_RETURN_TYPE AS OMS_RETURN_TYPE,
  TAX_INCLUDED_FLAG AS TAX_INCLUDED_FLAG,
  OMS_ORDERED_ITEM_ID AS OMS_ORDERED_ITEM_ID,
  OMS_ORDERED_ITEM_UOM_ID AS OMS_ORDERED_ITEM_UOM_ID,
  ORDERED_QTY AS ORDERED_QTY,
  OMS_SHIPPED_ITEM_ID AS OMS_SHIPPED_ITEM_ID,
  OMS_SHIPPED_ITEM_UOM_ID AS OMS_SHIPPED_ITEM_UOM_ID,
  SHIPPED_QTY AS SHIPPED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  LINE_CHARGE_AMT AS LINE_CHARGE_AMT,
  LINE_DISCOUNT_AMT AS LINE_DISCOUNT_AMT,
  LINE_TAX_AMT AS LINE_TAX_AMT,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_INVOICE_LINE"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_A_INVOICE_LINE_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_A_INVOICE_LINE_3


query_3 = f"""SELECT
  OMS_INVOICE_LINE_ID AS INVOICE_LINE_ID,
  OMS_INVOICE_LINE_NBR AS INVOICE_LINE_NUMBER,
  OMS_INVOICE_ID AS INVOICE_ID,
  OMS_ENTITY_LINE_NBR AS ENTITY_LINE_NUMBER,
  OMS_ORDERED_ITEM_UOM_ID AS ORDERED_ITEM_UOM_ID,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE_AMT AS UNIT_PRICE,
  LINE_CHARGE_AMT AS LINE_CHARGE,
  LINE_DISCOUNT_AMT AS LINE_DISCOUNT,
  LINE_TAX_AMT AS LINE_TAX,
  OMS_LAST_UPDATED_TSTMP AS ali_LAST_UPDATED_DTTM,
  OMS_ORDER_LINE_ID AS ORDER_LINE_ID,
  OMS_RETURN_ORDER_LINE_ID AS RETURN_ORDER_LINE_ID,
  OMS_RETURN_ORDER_LINE_NBR AS RETURN_ORDER_LINE_NUMBER,
  OMS_RETURN_TYPE AS RETURN_TYPE,
  UPDATE_TSTMP AS UPDATE_TSTMP_OMS_A_INVOICE_LINE,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_INVOICE_LINE_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_A_INVOICE_LINE_3")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDERS_DDS_4


query_4 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_ORDER_ID AS OMS_TC_ORDER_ID,
  OMS_PURCHASE_ORDER_ID AS OMS_PURCHASE_ORDER_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_EXT_PURCHASE_ORDER AS OMS_EXT_PURCHASE_ORDER,
  OMS_ORDER_TYPE AS OMS_ORDER_TYPE,
  OMS_ORDER_STATUS_ID AS OMS_ORDER_STATUS_ID,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  OMS_DO_STATUS_ID AS OMS_DO_STATUS_ID,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_BILLING_METHOD_ID AS OMS_BILLING_METHOD_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  OMS_DELIVERY_OPTIONS_ID AS OMS_DELIVERY_OPTIONS_ID,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  PARTIAL_SHIP_CONFIRMATION_FLAG AS PARTIAL_SHIP_CONFIRMATION_FLAG,
  PARTIAL_SHIP_CONFIRMATION_STATUS AS PARTIAL_SHIP_CONFIRMATION_STATUS,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  HAS_SPLIT_FLAG AS HAS_SPLIT_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  BACK_ORDERED_FLAG AS BACK_ORDERED_FLAG,
  OMS_INBOUND_REGION_ID AS OMS_INBOUND_REGION_ID,
  OMS_OUTBOUND_REGION_ID AS OMS_OUTBOUND_REGION_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_CUSTOMER_ID AS OMS_CUSTOMER_ID,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ORDER_DT_TSTMP AS OMS_ORDER_DT_TSTMP,
  OMS_ORDER_RECON_TSTMP AS OMS_ORDER_RECON_TSTMP,
  OMS_SCHED_PICKUP_TSTMP AS OMS_SCHED_PICKUP_TSTMP,
  OMS_SCHED_DELIVERY_TSTMP AS OMS_SCHED_DELIVERY_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  BASELINE_COST AS BASELINE_COST,
  ACTUAL_COST AS ACTUAL_COST,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  REF_NUM1 AS REF_NUM1,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDERS"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("Shortcut_to_OMS_ORDERS_DDS_4")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDERS_DDS_5


query_5 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_ORDER_ID AS OMS_TC_ORDER_ID,
  OMS_PURCHASE_ORDER_ID AS OMS_PURCHASE_ORDER_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_EXT_PURCHASE_ORDER AS OMS_EXT_PURCHASE_ORDER,
  OMS_ORDER_TYPE AS OMS_ORDER_TYPE,
  OMS_ORDER_STATUS_ID AS OMS_ORDER_STATUS_ID,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  OMS_DO_STATUS_ID AS OMS_DO_STATUS_ID,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_BILLING_METHOD_ID AS OMS_BILLING_METHOD_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  OMS_DELIVERY_OPTIONS_ID AS OMS_DELIVERY_OPTIONS_ID,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  PARTIAL_SHIP_CONFIRMATION_FLAG AS PARTIAL_SHIP_CONFIRMATION_FLAG,
  PARTIAL_SHIP_CONFIRMATION_STATUS AS PARTIAL_SHIP_CONFIRMATION_STATUS,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  HAS_SPLIT_FLAG AS HAS_SPLIT_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  BACK_ORDERED_FLAG AS BACK_ORDERED_FLAG,
  OMS_INBOUND_REGION_ID AS OMS_INBOUND_REGION_ID,
  OMS_OUTBOUND_REGION_ID AS OMS_OUTBOUND_REGION_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_CUSTOMER_ID AS OMS_CUSTOMER_ID,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ORDER_DT_TSTMP AS OMS_ORDER_DT_TSTMP,
  OMS_ORDER_RECON_TSTMP AS OMS_ORDER_RECON_TSTMP,
  OMS_SCHED_PICKUP_TSTMP AS OMS_SCHED_PICKUP_TSTMP,
  OMS_SCHED_DELIVERY_TSTMP AS OMS_SCHED_DELIVERY_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  BASELINE_COST AS BASELINE_COST,
  ACTUAL_COST AS ACTUAL_COST,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  REF_NUM1 AS REF_NUM1,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP_OMS_ORDERS,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDERS_DDS_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDERS_DDS_5")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_INVOICE_6


query_6 = f"""SELECT
  OMS_INVOICE_ID AS OMS_INVOICE_ID,
  OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_ENTITY_TYPE AS OMS_ENTITY_TYPE,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_NBR AS OMS_ENTITY_NBR,
  OMS_INVOICE_TYPE AS OMS_INVOICE_TYPE,
  OMS_INVOICE_CREATION_TSTMP AS OMS_INVOICE_CREATION_TSTMP,
  OMS_INVOICE_STATUS_ID AS OMS_INVOICE_STATUS_ID,
  PARTIALLY_SETTLED_FLAG AS PARTIALLY_SETTLED_FLAG,
  COLLECTED_EXTERNALLY_FLAG AS COLLECTED_EXTERNALLY_FLAG,
  OMS_FACILITY_ID AS OMS_FACILITY_ID,
  OMS_SHIPMENT_NBR AS OMS_SHIPMENT_NBR,
  PUBLISHED_FLAG AS PUBLISHED_FLAG,
  C_INITIAL_PUBLISHED_FLAG AS C_INITIAL_PUBLISHED_FLAG,
  OMS_RETURN_ORDER_ID AS OMS_RETURN_ORDER_ID,
  OMS_RETURN_ORDER_NBR AS OMS_RETURN_ORDER_NBR,
  CURRENCY_CD AS CURRENCY_CD,
  HEADER_TAX_AMT AS HEADER_TAX_AMT,
  HEADER_CHARGE_AMT AS HEADER_CHARGE_AMT,
  HEADER_DISCOUNT_AMT AS HEADER_DISCOUNT_AMT,
  INVOICE_AMT AS INVOICE_AMT,
  INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_LAST_UPDATED_SOURCE AS OMS_LAST_UPDATED_SOURCE,
  OMS_LAST_UPDATED_SOURCE_TYPE_ID AS OMS_LAST_UPDATED_SOURCE_TYPE_ID,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_INVOICE"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("Shortcut_to_OMS_A_INVOICE_6")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_A_INVOICE_7


query_7 = f"""SELECT
  OMS_INVOICE_ID AS INVOICE_ID,
  OMS_INVOICE_NBR AS INVOICE_NUMBER,
  OMS_INVOICE_CREATION_TSTMP AS INVOICE_CREATION_DTTM,
  OMS_ENTITY_ID AS ENTITY_ID,
  OMS_INVOICE_TYPE AS INVOICE_TYPE,
  CURRENCY_CD AS CURRENCY,
  INVOICE_AMT AS INVOICE_AMOUNT,
  OMS_INVOICE_STATUS_ID AS STATUS,
  OMS_SHIPMENT_NBR AS SHIPMENT_NUMBER,
  INVOICE_AMT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  OMS_LAST_UPDATED_TSTMP AS LAST_UPDATED_DTTM,
  UPDATE_TSTMP AS UPDATE_TSTMP_OMS_A_INVOICE,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_INVOICE_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("SQ_Shortcut_to_A_INVOICE_7")

# COMMAND ----------
# DBTITLE 1, Jnr_Invoice_8


query_8 = f"""SELECT
  DETAIL.INVOICE_ID AS INVOICE_ID,
  DETAIL.INVOICE_NUMBER AS INVOICE_NUMBER,
  DETAIL.ENTITY_ID AS ENTITY_ID,
  DETAIL.INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  DETAIL.SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  DETAIL.CURRENCY AS CURRENCY,
  MASTER.INVOICE_LINE_ID AS INVOICE_LINE_ID,
  MASTER.INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  MASTER.ORDERED_QTY AS ORDERED_QTY,
  MASTER.INVOICED_QTY AS INVOICED_QTY,
  MASTER.UNIT_PRICE AS UNIT_PRICE,
  MASTER.LINE_CHARGE AS LINE_CHARGE,
  MASTER.LINE_DISCOUNT AS LINE_DISCOUNT,
  MASTER.LINE_TAX AS LINE_TAX,
  MASTER.ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  MASTER.INVOICE_ID AS INVOICE_ID1,
  DETAIL.INVOICE_TYPE AS INVOICE_TYPE,
  DETAIL.INVOICE_AMOUNT AS INVOICE_AMOUNT,
  DETAIL.INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.STATUS AS STATUS,
  MASTER.ORDER_LINE_ID AS ORDER_LINE_ID,
  MASTER.UPDATE_TSTMP_OMS_A_INVOICE_LINE AS UPDATE_TSTMP_OMS_A_INVOICE_LINE,
  DETAIL.UPDATE_TSTMP_OMS_A_INVOICE AS UPDATE_TSTMP_OMS_A_INVOICE,
  MASTER.ali_LAST_UPDATED_DTTM AS ali_LAST_UPDATED_DTTM,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_A_INVOICE_LINE_3 MASTER
  INNER JOIN SQ_Shortcut_to_A_INVOICE_7 DETAIL ON MASTER.INVOICE_ID = DETAIL.INVOICE_ID"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("Jnr_Invoice_8")

# COMMAND ----------
# DBTITLE 1, EXPTRANS_9


query_9 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  CURRENCY AS CURRENCY,
  INVOICE_LINE_ID AS INVOICE_LINE_ID,
  INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE AS UNIT_PRICE,
  LINE_CHARGE AS LINE_CHARGE,
  LINE_DISCOUNT AS LINE_DISCOUNT,
  LINE_TAX AS LINE_TAX,
  ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  INVOICE_TYPE AS INVOICE_TYPE,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  STATUS AS STATUS,
  ENTITY_ID AS join_ENTITY_ID,
  ORDER_LINE_ID AS ORDER_LINE_ID,
  UPDATE_TSTMP_OMS_A_INVOICE_LINE AS UPDATE_TSTMP_OMS_A_INVOICE_LINE,
  UPDATE_TSTMP_OMS_A_INVOICE AS UPDATE_TSTMP_OMS_A_INVOICE,
  ali_LAST_UPDATED_DTTM AS ali_LAST_UPDATED_DTTM,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  Jnr_Invoice_8"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("EXPTRANS_9")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_LPN_DDS_10


query_10 = f"""SELECT
  OMS_LPN_ID AS OMS_LPN_ID,
  OMS_TC_LPN_ID AS OMS_TC_LPN_ID,
  OMS_PARENT_LPN_ID AS OMS_PARENT_LPN_ID,
  OMS_LPN_TYPE_ID AS OMS_LPN_TYPE_ID,
  OMS_LPN_STATUS_ID AS OMS_LPN_STATUS_ID,
  OMS_LPN_STATUS_UPDATED_TSTMP AS OMS_LPN_STATUS_UPDATED_TSTMP,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_ASN_ID AS OMS_ASN_ID,
  OMS_TC_ASN_ID AS OMS_TC_ASN_ID,
  OMS_FINAL_DEST_FACILITY_ALIAS_ID AS OMS_FINAL_DEST_FACILITY_ALIAS_ID,
  OMS_TRACKING_NBR AS OMS_TRACKING_NBR,
  BASE_CHARGE_AMT AS BASE_CHARGE_AMT,
  BASE_CHARGE_CURRENCY_CD AS BASE_CHARGE_CURRENCY_CD,
  ADDL_OPTION_CHARGE_AMT AS ADDL_OPTION_CHARGE_AMT,
  ADDL_OPTION_CHARGE_CURRENCY_CD AS ADDL_OPTION_CHARGE_CURRENCY_CD,
  ACTUAL_CHARGE_AMT AS ACTUAL_CHARGE_AMT,
  ACTUAL_CHARGE_CURRENCY_CD AS ACTUAL_CHARGE_CURRENCY_CD,
  DIST_CHARGE_AMT AS DIST_CHARGE_AMT,
  DIST_CHARGE_CURRENCY_CD AS DIST_CHARGE_CURRENCY_CD,
  FREIGHT_CHARGE_AMT AS FREIGHT_CHARGE_AMT,
  FREIGHT_CHARGE_CURRENCY_CD AS FREIGHT_CHARGE_CURRENCY_CD,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_LPN_DDS"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("Shortcut_to_OMS_LPN_DDS_10")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_LPN_DDS_11


query_11 = f"""SELECT
  OMS_LPN_ID AS OMS_LPN_ID,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP_OMS_LPN_DDS,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_LPN_DDS_10"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("SQ_Shortcut_to_OMS_LPN_DDS_11")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDER_LINE_ITEM_12


query_12 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_LINE_ITEM_ID AS OMS_LINE_ITEM_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_MASTER_ORDER_ID AS OMS_MASTER_ORDER_ID,
  OMS_MO_LINE_ITEM_ID AS OMS_MO_LINE_ITEM_ID,
  OMS_TC_ORDER_LINE_ID AS OMS_TC_ORDER_LINE_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_PURCHASE_ORDER_LINE_NBR AS OMS_PURCHASE_ORDER_LINE_NBR,
  OMS_ITEM_ID AS OMS_ITEM_ID,
  OMS_ITEM_NAME AS OMS_ITEM_NAME,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  OMS_DO_DTL_STATUS_ID AS OMS_DO_DTL_STATUS_ID,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  OMS_EVENT_CD AS OMS_EVENT_CD,
  OMS_REASON_CD AS OMS_REASON_CD,
  OMS_EXP_INFO_CD AS OMS_EXP_INFO_CD,
  PARTIAL_FILL_FLAG AS PARTIAL_FILL_FLAG,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ADJUSTED_ORDER_QTY AS ADJUSTED_ORDER_QTY,
  USER_CANCELED_QTY AS USER_CANCELED_QTY,
  ORDER_QTY AS ORDER_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  RETAIL_PRICE_AMT AS RETAIL_PRICE_AMT,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  UNIT_COST_AMT AS UNIT_COST_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  FREIGHT_REVENUE_CURRENCY_CD AS FREIGHT_REVENUE_CURRENCY_CD,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDER_LINE_ITEM"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("Shortcut_to_OMS_ORDER_LINE_ITEM_12")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ORDER_LINE_ITEM_13


query_13 = f"""SELECT
  OMS_ORDER_ID AS ORDER_ID,
  OMS_LINE_ITEM_ID AS LINE_ITEM_ID,
  OMS_MASTER_ORDER_ID AS MASTER_ORDER_ID,
  OMS_MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  OMS_LAST_UPDATED_TSTMP AS LAST_UPDATED_DTTM,
  OMS_PURCHASE_ORDER_LINE_NBR AS PURCHASE_ORDER_LINE_NUMBER,
  OMS_PICKUP_START_TSTMP AS PICKUP_START_DTTM,
  CANCELLED_FLAG AS IS_CANCELLED,
  UPDATE_TSTMP AS UPDATE_TSTMP_OMS_ORDER_LINE_ITEM,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDER_LINE_ITEM_12"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("SQ_Shortcut_to_ORDER_LINE_ITEM_13")

# COMMAND ----------
# DBTITLE 1, Jnr_Invoice_OrderLnItem_14


query_14 = f"""SELECT
  MASTER.INVOICE_ID AS INVOICE_ID,
  MASTER.INVOICE_NUMBER AS INVOICE_NUMBER,
  MASTER.ENTITY_ID AS ENTITY_ID,
  MASTER.INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  MASTER.SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  MASTER.CURRENCY AS CURRENCY,
  MASTER.INVOICE_LINE_ID AS INVOICE_LINE_ID,
  MASTER.INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  MASTER.ORDERED_QTY AS ORDERED_QTY,
  MASTER.INVOICED_QTY AS INVOICED_QTY,
  MASTER.UNIT_PRICE AS UNIT_PRICE,
  MASTER.LINE_CHARGE AS LINE_CHARGE,
  MASTER.LINE_DISCOUNT AS LINE_DISCOUNT,
  MASTER.LINE_TAX AS LINE_TAX,
  MASTER.ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  DETAIL.PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  DETAIL.ORDER_ID AS ORDER_ID,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.MASTER_ORDER_ID AS MASTER_ORDER_ID,
  DETAIL.MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  MASTER.INVOICE_TYPE AS INVOICE_TYPE,
  MASTER.INVOICE_AMOUNT AS INVOICE_AMOUNT,
  MASTER.INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  MASTER.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM1,
  MASTER.STATUS AS STATUS,
  DETAIL.IS_CANCELLED AS IS_CANCELLED,
  MASTER.join_ENTITY_ID AS join_ENTITY_ID,
  MASTER.ORDER_LINE_ID AS ORDER_LINE_ID,
  DETAIL.LINE_ITEM_ID AS LINE_ITEM_ID,
  DETAIL.UPDATE_TSTMP_OMS_ORDER_LINE_ITEM AS UPDATE_TSTMP_OMS_ORDER_LINE_ITEM,
  MASTER.UPDATE_TSTMP_OMS_A_INVOICE_LINE AS UPDATE_TSTMP_OMS_A_INVOICE_LINE,
  MASTER.UPDATE_TSTMP_OMS_A_INVOICE AS UPDATE_TSTMP_OMS_A_INVOICE,
  MASTER.ali_LAST_UPDATED_DTTM AS ali_LAST_UPDATED_DTTM,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXPTRANS_9 MASTER
  RIGHT JOIN SQ_Shortcut_to_ORDER_LINE_ITEM_13 DETAIL ON MASTER.join_ENTITY_ID = DETAIL.MASTER_ORDER_ID
  AND MASTER.ORDER_LINE_ID = DETAIL.MO_LINE_ITEM_ID"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("Jnr_Invoice_OrderLnItem_14")

# COMMAND ----------
# DBTITLE 1, Jnr_Orders_15


query_15 = f"""SELECT
  DETAIL.INVOICE_ID AS INVOICE_ID,
  DETAIL.INVOICE_NUMBER AS INVOICE_NUMBER,
  DETAIL.ENTITY_ID AS ENTITY_ID,
  DETAIL.INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  DETAIL.SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  DETAIL.CURRENCY AS CURRENCY,
  DETAIL.INVOICE_LINE_ID AS INVOICE_LINE_ID,
  DETAIL.INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  DETAIL.ORDERED_QTY AS ORDERED_QTY,
  DETAIL.INVOICED_QTY AS INVOICED_QTY,
  DETAIL.UNIT_PRICE AS UNIT_PRICE,
  DETAIL.LINE_CHARGE AS LINE_CHARGE,
  DETAIL.LINE_DISCOUNT AS LINE_DISCOUNT,
  DETAIL.LINE_TAX AS LINE_TAX,
  DETAIL.ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  DETAIL.PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  DETAIL.ORDER_ID AS ORDER_ID,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.MASTER_ORDER_ID AS MASTER_ORDER_ID,
  MASTER.OMS_ORDER_ID AS ORDER_ID1,
  MASTER.OMS_DELIVERY_OPTIONS_ID AS DELIVERY_OPTIONS,
  DETAIL.MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  DETAIL.INVOICE_TYPE AS INVOICE_TYPE,
  DETAIL.INVOICE_AMOUNT AS INVOICE_AMOUNT,
  DETAIL.INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  DETAIL.LAST_UPDATED_DTTM1 AS LAST_UPDATED_DTTM1,
  DETAIL.STATUS AS STATUS,
  DETAIL.IS_CANCELLED AS IS_CANCELLED,
  DETAIL.ORDER_LINE_ID AS ORDER_LINE_ID,
  DETAIL.LINE_ITEM_ID AS LINE_ITEM_ID,
  MASTER.UPDATE_TSTMP_OMS_ORDERS AS UPDATE_TSTMP_OMS_ORDERS,
  DETAIL.UPDATE_TSTMP_OMS_ORDER_LINE_ITEM AS UPDATE_TSTMP_OMS_ORDER_LINE_ITEM,
  DETAIL.UPDATE_TSTMP_OMS_A_INVOICE_LINE AS UPDATE_TSTMP_OMS_A_INVOICE_LINE,
  DETAIL.UPDATE_TSTMP_OMS_A_INVOICE AS UPDATE_TSTMP_OMS_A_INVOICE,
  DETAIL.ali_LAST_UPDATED_DTTM AS ali_LAST_UPDATED_DTTM,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ORDERS_DDS_5 MASTER
  RIGHT JOIN Jnr_Invoice_OrderLnItem_14 DETAIL ON MASTER.OMS_ORDER_ID = DETAIL.ORDER_ID"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("Jnr_Orders_15")

# COMMAND ----------
# DBTITLE 1, Jnr_LPN_16


query_16 = f"""SELECT
  DETAIL.INVOICE_ID AS INVOICE_ID,
  DETAIL.INVOICE_NUMBER AS INVOICE_NUMBER,
  DETAIL.ENTITY_ID AS ENTITY_ID,
  DETAIL.INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  DETAIL.SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  DETAIL.CURRENCY AS CURRENCY,
  DETAIL.INVOICE_LINE_ID AS INVOICE_LINE_ID,
  DETAIL.INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  DETAIL.ORDERED_QTY AS ORDERED_QTY,
  DETAIL.INVOICED_QTY AS INVOICED_QTY,
  DETAIL.UNIT_PRICE AS UNIT_PRICE,
  DETAIL.LINE_CHARGE AS LINE_CHARGE,
  DETAIL.LINE_DISCOUNT AS LINE_DISCOUNT,
  DETAIL.LINE_TAX AS LINE_TAX,
  DETAIL.ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  DETAIL.PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  DETAIL.ORDER_ID AS ORDER_ID,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.MASTER_ORDER_ID AS MASTER_ORDER_ID,
  DETAIL.ORDER_ID1 AS ORDER_ID1,
  DETAIL.DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  MASTER.OMS_LPN_ID AS TC_LPN_ID,
  MASTER.OMS_ORDER_ID AS OMS_ORDER_ID,
  DETAIL.MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  MASTER.OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  DETAIL.INVOICE_TYPE AS INVOICE_TYPE,
  DETAIL.INVOICE_AMOUNT AS INVOICE_AMOUNT,
  DETAIL.INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  DETAIL.LAST_UPDATED_DTTM1 AS LAST_UPDATED_DTTM11,
  DETAIL.STATUS AS STATUS,
  DETAIL.IS_CANCELLED AS IS_CANCELLED,
  DETAIL.ORDER_LINE_ID AS ORDER_LINE_ID,
  DETAIL.LINE_ITEM_ID AS LINE_ITEM_ID,
  MASTER.UPDATE_TSTMP_OMS_LPN_DDS AS UPDATE_TSTMP_OMS_LPN_DDS,
  DETAIL.UPDATE_TSTMP_OMS_ORDER_LINE_ITEM AS UPDATE_TSTMP_OMS_ORDER_LINE_ITEM,
  DETAIL.UPDATE_TSTMP_OMS_A_INVOICE_LINE AS UPDATE_TSTMP_OMS_A_INVOICE_LINE,
  DETAIL.UPDATE_TSTMP_OMS_A_INVOICE AS UPDATE_TSTMP_OMS_A_INVOICE,
  DETAIL.ali_LAST_UPDATED_DTTM AS ali_LAST_UPDATED_DTTM,
  DETAIL.UPDATE_TSTMP_OMS_ORDERS AS UPDATE_TSTMP_OMS_ORDERS,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_LPN_DDS_11 MASTER
  RIGHT JOIN Jnr_Orders_15 DETAIL ON MASTER.OMS_LPN_ID = DETAIL.SHIPMENT_NUMBER
  AND MASTER.OMS_ORDER_ID = DETAIL.ORDER_ID1"""

df_16 = spark.sql(query_16)

df_16.createOrReplaceTempView("Jnr_LPN_16")

# COMMAND ----------
# DBTITLE 1, Jnr_OMS_Master_Order_17


query_17 = f"""SELECT
  DETAIL.INVOICE_ID AS INVOICE_ID,
  DETAIL.INVOICE_NUMBER AS INVOICE_NUMBER,
  DETAIL.ENTITY_ID AS ENTITY_ID,
  DETAIL.INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  DETAIL.SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  DETAIL.CURRENCY AS CURRENCY,
  DETAIL.INVOICE_LINE_ID AS INVOICE_LINE_ID,
  DETAIL.INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  DETAIL.ORDERED_QTY AS ORDERED_QTY,
  DETAIL.INVOICED_QTY AS INVOICED_QTY,
  DETAIL.UNIT_PRICE AS UNIT_PRICE,
  DETAIL.LINE_CHARGE AS LINE_CHARGE,
  DETAIL.LINE_DISCOUNT AS LINE_DISCOUNT,
  DETAIL.LINE_TAX AS LINE_TAX,
  DETAIL.ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  DETAIL.PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  DETAIL.ORDER_ID AS ORDER_ID,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.MASTER_ORDER_ID AS MASTER_ORDER_ID,
  DETAIL.ORDER_ID1 AS ORDER_ID1,
  DETAIL.DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  DETAIL.TC_LPN_ID AS TC_LPN_ID,
  DETAIL.OMS_ORDER_ID AS OMS_ORDER_ID,
  MASTER.PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  MASTER.PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  DETAIL.OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  DETAIL.INVOICE_TYPE AS INVOICE_TYPE,
  DETAIL.INVOICE_AMOUNT AS INVOICE_AMOUNT,
  DETAIL.INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  DETAIL.LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  DETAIL.STATUS AS STATUS,
  MASTER.TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  DETAIL.IS_CANCELLED AS IS_CANCELLED,
  DETAIL.ORDER_LINE_ID AS ORDER_LINE_ID,
  DETAIL.LINE_ITEM_ID AS LINE_ITEM_ID,
  DETAIL.UPDATE_TSTMP_OMS_LPN_DDS AS UPDATE_TSTMP_OMS_LPN_DDS,
  DETAIL.UPDATE_TSTMP_OMS_ORDER_LINE_ITEM AS UPDATE_TSTMP_OMS_ORDER_LINE_ITEM,
  DETAIL.UPDATE_TSTMP_OMS_A_INVOICE_LINE AS UPDATE_TSTMP_OMS_A_INVOICE_LINE,
  DETAIL.UPDATE_TSTMP_OMS_A_INVOICE AS UPDATE_TSTMP_OMS_A_INVOICE,
  DETAIL.ali_LAST_UPDATED_DTTM AS ali_LAST_UPDATED_DTTM,
  DETAIL.UPDATE_TSTMP_OMS_ORDERS AS UPDATE_TSTMP_OMS_ORDERS,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_EDW_LOAD_CTRL_PRE_1 MASTER
  INNER JOIN Jnr_LPN_16 DETAIL ON MASTER.PURCHASE_ORDERS_ID = DETAIL.ENTITY_ID
  AND MASTER.PURCHASE_ORDERS_LINE_ITEM_ID = DETAIL.ORDER_LINE_ID"""

df_17 = spark.sql(query_17)

df_17.createOrReplaceTempView("Jnr_OMS_Master_Order_17")

# COMMAND ----------
# DBTITLE 1, Exp_Fields_18


query_18 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  CURRENCY AS CURRENCY,
  INVOICE_LINE_ID AS INVOICE_LINE_ID,
  INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE AS UNIT_PRICE,
  LINE_CHARGE AS LINE_CHARGE,
  LINE_DISCOUNT AS LINE_DISCOUNT,
  LINE_TAX AS LINE_TAX,
  ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  ORDER_ID AS ORDER_ID,
  LAST_UPDATED_DTTM AS OLI_LAST_UPDATED_DTTM,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  ORDER_ID1 AS ORDER_ID1,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  TC_LPN_ID AS TC_LPN_ID,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  IFF(
    INSTR(PURCHASE_ORDER_LINE_NUMBER, ':') > 0,
    SUBSTR(
      PURCHASE_ORDER_LINE_NUMBER,
      0,
      INSTR(PURCHASE_ORDER_LINE_NUMBER, ':') -1
    ),
    IFF(
      ISNULL(PURCHASE_ORDER_LINE_NUMBER),
      ENTITY_LINE_NUMBER,
      PURCHASE_ORDER_LINE_NUMBER
    )
  ) AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  OMS_LAST_UPDATED_TSTMP AS LPN_LAST_UPDATED_DTTM,
  INVOICE_TYPE AS INVOICE_TYPE,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  STATUS AS STATUS,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  IFF(ISNULL(IS_CANCELLED), '0', IS_CANCELLED) AS i_IS_CANCELLED1,
  sysdate AS LOAD_TSTMP,
  ORDER_LINE_ID AS ORDER_LINE_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  UPDATE_TSTMP_OMS_LPN_DDS AS UPDATE_TSTMP_OMS_LPN_DDS,
  UPDATE_TSTMP_OMS_ORDER_LINE_ITEM AS UPDATE_TSTMP_OMS_ORDER_LINE_ITEM,
  UPDATE_TSTMP_OMS_A_INVOICE_LINE AS UPDATE_TSTMP_OMS_A_INVOICE_LINE,
  UPDATE_TSTMP_OMS_A_INVOICE AS UPDATE_TSTMP_OMS_A_INVOICE,
  ali_LAST_UPDATED_DTTM AS ali_LAST_UPDATED_DTTM,
  UPDATE_TSTMP_OMS_ORDERS AS UPDATE_TSTMP_OMS_ORDERS,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  Jnr_OMS_Master_Order_17"""

df_18 = spark.sql(query_18)

df_18.createOrReplaceTempView("Exp_Fields_18")

# COMMAND ----------
# DBTITLE 1, FLT_UPDATE_TSTMP_19


query_19 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  CURRENCY AS CURRENCY,
  INVOICE_LINE_ID AS INVOICE_LINE_ID,
  INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE AS UNIT_PRICE,
  LINE_CHARGE AS LINE_CHARGE,
  LINE_DISCOUNT AS LINE_DISCOUNT,
  LINE_TAX AS LINE_TAX,
  ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  ORDER_ID AS ORDER_ID,
  NULL AS LAST_UPDATED_DTTM,
  OLI_LAST_UPDATED_DTTM AS OLI_LAST_UPDATED_DTTM,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  ORDER_ID1 AS ORDER_ID1,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  TC_LPN_ID AS TC_LPN_ID,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  Sub_PURCHASE_ORDERS_LINE_NUMBER AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  NULL AS OMS_LAST_UPDATED_TSTMP,
  LPN_LAST_UPDATED_DTTM AS LPN_LAST_UPDATED_DTTM,
  INVOICE_TYPE AS INVOICE_TYPE,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  STATUS AS STATUS,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  NULL AS i_IS_CANCELLED,
  i_IS_CANCELLED1 AS i_IS_CANCELLED1,
  LOAD_TSTMP AS LOAD_TSTMP,
  ORDER_LINE_ID AS ORDER_LINE_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  UPDATE_TSTMP_OMS_LPN_DDS AS UPDATE_TSTMP_OMS_LPN_DDS,
  UPDATE_TSTMP_OMS_ORDER_LINE_ITEM AS UPDATE_TSTMP_OMS_ORDER_LINE_ITEM,
  UPDATE_TSTMP_OMS_A_INVOICE_LINE AS UPDATE_TSTMP_OMS_A_INVOICE_LINE,
  UPDATE_TSTMP_OMS_A_INVOICE AS UPDATE_TSTMP_OMS_A_INVOICE,
  ali_LAST_UPDATED_DTTM AS ali_LAST_UPDATED_DTTM,
  UPDATE_TSTMP_OMS_ORDERS AS UPDATE_TSTMP_OMS_ORDERS,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  Exp_Fields_18
WHERE
  UPDATE_TSTMP_OMS_LPN_DDS > ADD_TO_DATE(TRUNC(now()), 'MONTH', -10)
  OR UPDATE_TSTMP_OMS_ORDER_LINE_ITEM > ADD_TO_DATE(TRUNC(now()), 'MONTH', -10)
  OR UPDATE_TSTMP_OMS_A_INVOICE_LINE > ADD_TO_DATE(TRUNC(now()), 'MONTH', -10)
  OR UPDATE_TSTMP_OMS_A_INVOICE > ADD_TO_DATE(TRUNC(now()), 'MONTH', -10)
  OR UPDATE_TSTMP_OMS_ORDERS > ADD_TO_DATE(TRUNC(now()), 'MONTH', -10)"""

df_19 = spark.sql(query_19)

df_19.createOrReplaceTempView("FLT_UPDATE_TSTMP_19")

# COMMAND ----------
# DBTITLE 1, Fil_InvoiceDates_20


query_20 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  CURRENCY AS CURRENCY,
  INVOICE_LINE_ID AS INVOICE_LINE_ID,
  INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE AS UNIT_PRICE,
  LINE_CHARGE AS LINE_CHARGE,
  LINE_DISCOUNT AS LINE_DISCOUNT,
  LINE_TAX AS LINE_TAX,
  ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  ORDER_ID AS ORDER_ID,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  ORDER_ID1 AS ORDER_ID1,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  TC_LPN_ID AS TC_LPN_ID,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  Sub_PURCHASE_ORDERS_LINE_NUMBER AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  OLI_LAST_UPDATED_DTTM AS OLI_LAST_UPDATED_DTTM,
  LPN_LAST_UPDATED_DTTM AS LPN_LAST_UPDATED_DTTM,
  INVOICE_TYPE AS INVOICE_TYPE,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  STATUS AS STATUS,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  i_IS_CANCELLED1 AS i_IS_CANCELLED1,
  LOAD_TSTMP AS LOAD_TSTMP,
  ORDER_LINE_ID AS ORDER_LINE_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  ali_LAST_UPDATED_DTTM AS ali_LAST_UPDATED_DTTM,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FLT_UPDATE_TSTMP_19
WHERE
  (
    i_IS_CANCELLED1 = '0'
    AND IN(INVOICE_TYPE, 10, 20, 30, 40)
    AND Sub_PURCHASE_ORDERS_LINE_NUMBER = ENTITY_LINE_NUMBER
    AND IN(
      IFF(ISNULL(DELIVERY_OPTIONS), '01', DELIVERY_OPTIONS),
      '01',
      '03'
    )
    AND INVOICE_CREATION_DTTM >= IFF(
      INVOICE_TYPE = 10,
      IFF(
        ISNULL(LPN_LAST_UPDATED_DTTM),
        OLI_LAST_UPDATED_DTTM,
        LPN_LAST_UPDATED_DTTM
      ),
      TO_DATE('01-SEP-20', 'DD-MON-YY')
    )
    and INVOICE_CREATION_DTTM <= IFF(
      INVOICE_TYPE = 10,
      ADD_TO_DATE(
        IFF(
          ISNULL(LPN_LAST_UPDATED_DTTM),
          OLI_LAST_UPDATED_DTTM,
          LPN_LAST_UPDATED_DTTM
        ),
        'MI',
        1
      ),
      now()
    )
  ) --AND
  --(
  --LAST_UPDATED_DTTM11 > ADD_TO_DATE(TRUNC(now()),'D',  - 90 )
  --or
  --ali_LAST_UPDATED_DTTM > ADD_TO_DATE(TRUNC(now()),'D',  - 90)
  --)"""

df_20 = spark.sql(query_20)

df_20.createOrReplaceTempView("Fil_InvoiceDates_20")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_INVOICE_LN_21


query_21 = f"""SELECT
  OMS_INVOICE_ID AS OMS_INVOICE_ID,
  OMS_INVOICE_LN_ID AS OMS_INVOICE_LN_ID,
  OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  OMS_INVOICE_LN_NBR AS OMS_INVOICE_LN_NBR,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_NBR AS OMS_ORDER_NBR,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_CO_LN_NBR AS OMS_CO_LN_NBR,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  LINE_TOTAL_CHARGE_AMT AS LINE_TOTAL_CHARGE_AMT,
  LINE_TOTAL_DISC_AMT AS LINE_TOTAL_DISC_AMT,
  LINE_TOTAL_TAX_AMT AS LINE_TOTAL_TAX_AMT,
  INVOICE_TOTAL_AMT AS INVOICE_TOTAL_AMT,
  INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  CURRENCY_CD AS CURRENCY_CD,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  INVOICE_CREATE_TSTMP AS INVOICE_CREATE_TSTMP,
  INVOICE_LAST_UPD_TSTMP AS INVOICE_LAST_UPD_TSTMP,
  INVOICE_STATUS_ID AS INVOICE_STATUS_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_INVOICE_LN"""

df_21 = spark.sql(query_21)

df_21.createOrReplaceTempView("Shortcut_to_OMS_INVOICE_LN_21")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_INVOICE_LN_22


query_22 = f"""SELECT
  OMS_INVOICE_ID AS OMS_INVOICE_ID,
  OMS_INVOICE_LN_ID AS OMS_INVOICE_LN_ID,
  OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  OMS_INVOICE_LN_NBR AS OMS_INVOICE_LN_NBR,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_NBR AS OMS_ORDER_NBR,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_CO_LN_NBR AS OMS_CO_LN_NBR,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  LINE_TOTAL_CHARGE_AMT AS LINE_TOTAL_CHARGE_AMT,
  LINE_TOTAL_DISC_AMT AS LINE_TOTAL_DISC_AMT,
  LINE_TOTAL_TAX_AMT AS LINE_TOTAL_TAX_AMT,
  INVOICE_TOTAL_AMT AS INVOICE_TOTAL_AMT,
  INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  CURRENCY_CD AS CURRENCY_CD,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  INVOICE_CREATE_TSTMP AS INVOICE_CREATE_TSTMP,
  INVOICE_LAST_UPD_TSTMP AS INVOICE_LAST_UPD_TSTMP,
  INVOICE_STATUS_ID AS INVOICE_STATUS_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_INVOICE_LN_21"""

df_22 = spark.sql(query_22)

df_22.createOrReplaceTempView("SQ_Shortcut_to_OMS_INVOICE_LN_22")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_INVOICE_LN_23


query_23 = f"""SELECT
  DETAIL.INVOICE_ID AS INVOICE_ID,
  DETAIL.INVOICE_NUMBER AS INVOICE_NUMBER,
  DETAIL.ENTITY_ID AS ENTITY_ID,
  DETAIL.INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  DETAIL.SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  DETAIL.CURRENCY AS CURRENCY,
  DETAIL.INVOICE_LINE_ID AS INVOICE_LINE_ID,
  DETAIL.INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  DETAIL.ORDERED_QTY AS ORDERED_QTY,
  DETAIL.INVOICED_QTY AS INVOICED_QTY,
  DETAIL.UNIT_PRICE AS UNIT_PRICE,
  DETAIL.LINE_CHARGE AS LINE_CHARGE,
  DETAIL.LINE_DISCOUNT AS LINE_DISCOUNT,
  DETAIL.LINE_TAX AS LINE_TAX,
  DETAIL.ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  DETAIL.PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  DETAIL.ORDER_ID AS ORDER_ID,
  DETAIL.MASTER_ORDER_ID AS MASTER_ORDER_ID,
  DETAIL.ORDER_ID1 AS ORDER_ID1,
  DETAIL.DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  DETAIL.TC_LPN_ID AS TC_LPN_ID,
  DETAIL.OMS_ORDER_ID AS OMS_ORDER_ID1,
  DETAIL.PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  DETAIL.PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  DETAIL.Sub_PURCHASE_ORDERS_LINE_NUMBER AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  DETAIL.OLI_LAST_UPDATED_DTTM AS OLI_LAST_UPDATED_DTTM,
  DETAIL.LPN_LAST_UPDATED_DTTM AS LPN_LAST_UPDATED_DTTM,
  DETAIL.INVOICE_TYPE AS INVOICE_TYPE,
  DETAIL.INVOICE_AMOUNT AS INVOICE_AMOUNT,
  DETAIL.INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  DETAIL.LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  DETAIL.STATUS AS STATUS,
  DETAIL.TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  DETAIL.i_IS_CANCELLED1 AS i_IS_CANCELLED1,
  DETAIL.LOAD_TSTMP AS LOAD_TSTMP,
  MASTER.OMS_INVOICE_ID AS OMS_INVOICE_ID,
  MASTER.OMS_INVOICE_LN_ID AS OMS_INVOICE_LN_ID,
  MASTER.OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  MASTER.OMS_INVOICE_LN_NBR AS OMS_INVOICE_LN_NBR,
  MASTER.OMS_ORDER_ID AS OMS_ORDER_ID,
  MASTER.OMS_ORDER_NBR AS OMS_ORDER_NBR,
  MASTER.OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  MASTER.OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  MASTER.OMS_CO_LN_NBR AS OMS_CO_LN_NBR,
  MASTER.ORDERED_QTY AS ORDERED_QTY1,
  MASTER.INVOICED_QTY AS INVOICED_QTY1,
  MASTER.UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  MASTER.LINE_TOTAL_CHARGE_AMT AS LINE_TOTAL_CHARGE_AMT,
  MASTER.LINE_TOTAL_DISC_AMT AS LINE_TOTAL_DISC_AMT,
  MASTER.LINE_TOTAL_TAX_AMT AS LINE_TOTAL_TAX_AMT,
  MASTER.INVOICE_TOTAL_AMT AS INVOICE_TOTAL_AMT,
  MASTER.INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  MASTER.CURRENCY_CD AS CURRENCY_CD,
  MASTER.EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  MASTER.INVOICE_CREATE_TSTMP AS INVOICE_CREATE_TSTMP,
  MASTER.INVOICE_LAST_UPD_TSTMP AS INVOICE_LAST_UPD_TSTMP,
  MASTER.INVOICE_STATUS_ID AS INVOICE_STATUS_ID,
  MASTER.LOAD_TSTMP AS LOAD_TSTMP1,
  DETAIL.ORDER_LINE_ID AS ORDER_LINE_ID,
  DETAIL.LINE_ITEM_ID AS LINE_ITEM_ID,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_INVOICE_LN_22 MASTER
  RIGHT JOIN Fil_InvoiceDates_20 DETAIL ON MASTER.OMS_INVOICE_ID = DETAIL.INVOICE_ID
  AND MASTER.OMS_INVOICE_LN_ID = DETAIL.INVOICE_LINE_ID
  AND MASTER.OMS_DIST_ORDER_ID = DETAIL.ORDER_ID"""

df_23 = spark.sql(query_23)

df_23.createOrReplaceTempView("JNR_OMS_INVOICE_LN_23")

# COMMAND ----------
# DBTITLE 1, EXP_PRE_24


query_24 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  CURRENCY AS CURRENCY,
  INVOICE_LINE_ID AS INVOICE_LINE_ID,
  INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE AS UNIT_PRICE,
  LINE_CHARGE AS LINE_CHARGE,
  LINE_DISCOUNT AS LINE_DISCOUNT,
  LINE_TAX AS LINE_TAX,
  ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  ORDER_ID AS ORDER_ID,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  ORDER_ID1 AS ORDER_ID1,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  TC_LPN_ID AS TC_LPN_ID,
  OMS_ORDER_ID1 AS OMS_ORDER_ID1,
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  Sub_PURCHASE_ORDERS_LINE_NUMBER AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  OLI_LAST_UPDATED_DTTM AS OLI_LAST_UPDATED_DTTM,
  LPN_LAST_UPDATED_DTTM AS LPN_LAST_UPDATED_DTTM,
  INVOICE_TYPE AS INVOICE_TYPE,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  STATUS AS STATUS,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  i_IS_CANCELLED1 AS i_IS_CANCELLED1,
  LOAD_TSTMP AS LOAD_TSTMP,
  OMS_INVOICE_ID AS lkp_OMS_INVOICE_ID,
  OMS_INVOICE_LN_ID AS OMS_INVOICE_LN_ID,
  OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  OMS_INVOICE_LN_NBR AS OMS_INVOICE_LN_NBR,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_NBR AS OMS_ORDER_NBR,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_CO_LN_NBR AS OMS_CO_LN_NBR,
  ORDERED_QTY1 AS ORDERED_QTY1,
  INVOICED_QTY1 AS INVOICED_QTY1,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  LINE_TOTAL_CHARGE_AMT AS LINE_TOTAL_CHARGE_AMT,
  LINE_TOTAL_DISC_AMT AS LINE_TOTAL_DISC_AMT,
  LINE_TOTAL_TAX_AMT AS LINE_TOTAL_TAX_AMT,
  INVOICE_TOTAL_AMT AS INVOICE_TOTAL_AMT,
  INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  CURRENCY_CD AS CURRENCY_CD,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  INVOICE_CREATE_TSTMP AS INVOICE_CREATE_TSTMP,
  INVOICE_LAST_UPD_TSTMP AS INVOICE_LAST_UPD_TSTMP,
  INVOICE_STATUS_ID AS INVOICE_STATUS_ID,
  LOAD_TSTMP1 AS LOAD_TSTMP1,
  ORDER_LINE_ID AS ORDER_LINE_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  TO_DATE(
    IFF(
      ISNULL(INVOICE_CREATION_DTTM),
      TO_CHAR(LAST_UPDATED_DTTM11, 'YYYY-MM-DD'),
      TO_CHAR(INVOICE_CREATION_DTTM, 'YYYY-MM-DD')
    ),
    'YYYY-MM-DD'
  ) AS join_Day_Dt,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_INVOICE_LN_23"""

df_24 = spark.sql(query_24)

df_24.createOrReplaceTempView("EXP_PRE_24")

# COMMAND ----------
# DBTITLE 1, LKP_CURRENCY_DAY_25


query_25 = f"""SELECT
  CD.DAY_DT AS DAY_DT,
  CD.CURRENCY_ID AS CURRENCY_ID,
  CD.CURRENCY_TYPE AS CURRENCY_TYPE,
  CD.EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  EP2.INVOICE_ID AS INVOICE_ID,
  EP2.INVOICE_NUMBER AS INVOICE_NUMBER,
  EP2.ENTITY_ID AS ENTITY_ID,
  EP2.INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  EP2.SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  EP2.CURRENCY AS CURRENCY,
  EP2.INVOICE_LINE_ID AS INVOICE_LINE_ID,
  EP2.INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  EP2.ORDERED_QTY AS ORDERED_QTY,
  EP2.INVOICED_QTY AS INVOICED_QTY,
  EP2.UNIT_PRICE AS UNIT_PRICE,
  EP2.LINE_CHARGE AS LINE_CHARGE,
  EP2.LINE_DISCOUNT AS LINE_DISCOUNT,
  EP2.LINE_TAX AS LINE_TAX,
  EP2.ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  EP2.PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  EP2.ORDER_ID AS ORDER_ID,
  EP2.MASTER_ORDER_ID AS MASTER_ORDER_ID,
  EP2.ORDER_ID1 AS ORDER_ID1,
  EP2.DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  EP2.TC_LPN_ID AS TC_LPN_ID,
  EP2.OMS_ORDER_ID1 AS OMS_ORDER_ID1,
  EP2.PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  EP2.PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  EP2.MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  EP2.Sub_PURCHASE_ORDERS_LINE_NUMBER AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  EP2.OLI_LAST_UPDATED_DTTM AS OLI_LAST_UPDATED_DTTM,
  EP2.LPN_LAST_UPDATED_DTTM AS LPN_LAST_UPDATED_DTTM,
  EP2.INVOICE_TYPE AS INVOICE_TYPE,
  EP2.INVOICE_AMOUNT AS INVOICE_AMOUNT,
  EP2.INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  EP2.LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  EP2.STATUS AS STATUS,
  EP2.TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  EP2.i_IS_CANCELLED1 AS i_IS_CANCELLED1,
  EP2.LOAD_TSTMP AS LOAD_TSTMP,
  EP2.lkp_OMS_INVOICE_ID AS lkp_OMS_INVOICE_ID,
  EP2.OMS_INVOICE_LN_ID AS OMS_INVOICE_LN_ID,
  EP2.OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  EP2.OMS_INVOICE_LN_NBR AS OMS_INVOICE_LN_NBR,
  EP2.OMS_ORDER_ID AS OMS_ORDER_ID,
  EP2.OMS_ORDER_NBR AS OMS_ORDER_NBR,
  EP2.OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  EP2.OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  EP2.OMS_CO_LN_NBR AS OMS_CO_LN_NBR,
  EP2.ORDERED_QTY1 AS ORDERED_QTY1,
  EP2.INVOICED_QTY1 AS INVOICED_QTY1,
  EP2.UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  EP2.LINE_TOTAL_CHARGE_AMT AS LINE_TOTAL_CHARGE_AMT,
  EP2.LINE_TOTAL_DISC_AMT AS LINE_TOTAL_DISC_AMT,
  EP2.LINE_TOTAL_TAX_AMT AS LINE_TOTAL_TAX_AMT,
  EP2.INVOICE_TOTAL_AMT AS INVOICE_TOTAL_AMT,
  EP2.INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  EP2.CURRENCY_CD AS CURRENCY_CD,
  EP2.EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT1,
  EP2.INVOICE_CREATE_TSTMP AS INVOICE_CREATE_TSTMP,
  EP2.INVOICE_LAST_UPD_TSTMP AS INVOICE_LAST_UPD_TSTMP,
  EP2.INVOICE_STATUS_ID AS INVOICE_STATUS_ID,
  EP2.LOAD_TSTMP1 AS LOAD_TSTMP1,
  EP2.ORDER_LINE_ID AS ORDER_LINE_ID,
  EP2.LINE_ITEM_ID AS LINE_ITEM_ID,
  EP2.join_Day_Dt AS join_Day_Dt,
  EP2.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_PRE_24 EP2
  LEFT JOIN CURRENCY_DAY CD ON CD.DAY_DT = EP2.join_Day_Dt"""

df_25 = spark.sql(query_25)

df_25.createOrReplaceTempView("LKP_CURRENCY_DAY_25")

# COMMAND ----------
# DBTITLE 1, EXP_EXCHANGE_TAYE_PCNT_26


query_26 = f"""SELECT
  CURRENCY_ID AS CURRENCY_ID,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  IFF(CURRENCY <> 'USD', EXCHANGE_RATE_PCNT, 1) AS EXHCNAGE_RATE_PCNT_exp,
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  CURRENCY AS CURRENCY,
  INVOICE_LINE_ID AS INVOICE_LINE_ID,
  INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE AS UNIT_PRICE,
  LINE_CHARGE AS LINE_CHARGE,
  LINE_DISCOUNT AS LINE_DISCOUNT,
  LINE_TAX AS LINE_TAX,
  ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  ORDER_ID AS ORDER_ID,
  IFF(ISNULL(ORDER_ID), -9999, ORDER_ID) AS ORDER_ID_o,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  ORDER_ID1 AS ORDER_ID1,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  TC_LPN_ID AS TC_LPN_ID,
  OMS_ORDER_ID1 AS OMS_ORDER_ID1,
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  Sub_PURCHASE_ORDERS_LINE_NUMBER AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  OLI_LAST_UPDATED_DTTM AS OLI_LAST_UPDATED_DTTM,
  LPN_LAST_UPDATED_DTTM AS LPN_LAST_UPDATED_DTTM,
  INVOICE_TYPE AS INVOICE_TYPE,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  STATUS AS STATUS,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  i_IS_CANCELLED1 AS i_IS_CANCELLED1,
  LOAD_TSTMP AS LOAD_TSTMP,
  lkp_OMS_INVOICE_ID AS lkp_OMS_INVOICE_ID,
  OMS_INVOICE_LN_ID AS OMS_INVOICE_LN_ID,
  OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  OMS_INVOICE_LN_NBR AS OMS_INVOICE_LN_NBR,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_NBR AS OMS_ORDER_NBR,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_CO_LN_NBR AS OMS_CO_LN_NBR,
  ORDERED_QTY1 AS ORDERED_QTY1,
  INVOICED_QTY1 AS INVOICED_QTY1,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  LINE_TOTAL_CHARGE_AMT AS LINE_TOTAL_CHARGE_AMT,
  LINE_TOTAL_DISC_AMT AS LINE_TOTAL_DISC_AMT,
  LINE_TOTAL_TAX_AMT AS LINE_TOTAL_TAX_AMT,
  INVOICE_TOTAL_AMT AS INVOICE_TOTAL_AMT,
  INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  CURRENCY_CD AS CURRENCY_CD,
  EXCHANGE_RATE_PCNT1 AS EXCHANGE_RATE_PCNT1,
  INVOICE_CREATE_TSTMP AS INVOICE_CREATE_TSTMP,
  INVOICE_LAST_UPD_TSTMP AS INVOICE_LAST_UPD_TSTMP,
  INVOICE_STATUS_ID AS INVOICE_STATUS_ID,
  LOAD_TSTMP1 AS LKP_LOAD_TSTMP1,
  IFF(ISNULL(LOAD_TSTMP1), now(), LOAD_TSTMP1) AS Load_Tstamp_EXP,
  now() AS UPDATE_TSTMP,
  ORDER_LINE_ID AS ORDER_LINE_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_CURRENCY_DAY_25"""

df_26 = spark.sql(query_26)

df_26.createOrReplaceTempView("EXP_EXCHANGE_TAYE_PCNT_26")

# COMMAND ----------
# DBTITLE 1, FIL_UNCHANGED_REC_27


query_27 = f"""SELECT
  EXHCNAGE_RATE_PCNT_exp AS EXHCNAGE_RATE_PCNT_exp,
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  CURRENCY AS CURRENCY,
  INVOICE_LINE_ID AS INVOICE_LINE_ID,
  INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE AS UNIT_PRICE,
  LINE_CHARGE AS LINE_CHARGE,
  LINE_DISCOUNT AS LINE_DISCOUNT,
  LINE_TAX AS LINE_TAX,
  ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  ORDER_ID_o AS ORDER_ID,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  ORDER_ID1 AS ORDER_ID1,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  TC_LPN_ID AS TC_LPN_ID,
  OMS_ORDER_ID1 AS OMS_ORDER_ID1,
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  Sub_PURCHASE_ORDERS_LINE_NUMBER AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  OLI_LAST_UPDATED_DTTM AS OLI_LAST_UPDATED_DTTM,
  LPN_LAST_UPDATED_DTTM AS LPN_LAST_UPDATED_DTTM,
  INVOICE_TYPE AS INVOICE_TYPE,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  STATUS AS STATUS,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  i_IS_CANCELLED1 AS i_IS_CANCELLED1,
  LOAD_TSTMP AS LOAD_TSTMP,
  lkp_OMS_INVOICE_ID AS lkp_OMS_INVOICE_ID,
  OMS_INVOICE_LN_ID AS OMS_INVOICE_LN_ID,
  OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  OMS_INVOICE_LN_NBR AS OMS_INVOICE_LN_NBR,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_NBR AS OMS_ORDER_NBR,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  OMS_DIST_ORDER_ID AS OMS_DIST_ORDER_ID,
  OMS_CO_LN_NBR AS OMS_CO_LN_NBR,
  ORDERED_QTY1 AS ORDERED_QTY1,
  INVOICED_QTY1 AS INVOICED_QTY1,
  UNIT_PRICE_AMT AS UNIT_PRICE_AMT,
  LINE_TOTAL_CHARGE_AMT AS LINE_TOTAL_CHARGE_AMT,
  LINE_TOTAL_DISC_AMT AS LINE_TOTAL_DISC_AMT,
  LINE_TOTAL_TAX_AMT AS LINE_TOTAL_TAX_AMT,
  INVOICE_TOTAL_AMT AS INVOICE_TOTAL_AMT,
  INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  CURRENCY_CD AS CURRENCY_CD,
  EXCHANGE_RATE_PCNT1 AS EXCHANGE_RATE_PCNT1,
  INVOICE_CREATE_TSTMP AS INVOICE_CREATE_TSTMP,
  INVOICE_LAST_UPD_TSTMP AS INVOICE_LAST_UPD_TSTMP,
  INVOICE_STATUS_ID AS INVOICE_STATUS_ID,
  Load_Tstamp_EXP AS Load_Tstamp_EXP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  ORDER_LINE_ID AS ORDER_LINE_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_EXCHANGE_TAYE_PCNT_26
WHERE
  ISNULL(OMS_INVOICE_LN_ID)
  OR (
    NOT ISNULL(OMS_INVOICE_LN_ID)
    AND (
      IFF(
        ISNULL(LTRIM(RTRIM(CURRENCY))),
        ' ',
        LTRIM(RTRIM(CURRENCY))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(CURRENCY_CD))),
        ' ',
        LTRIM(RTRIM(CURRENCY_CD))
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(INVOICE_LINE_NUMBER))),
        ' ',
        LTRIM(RTRIM(INVOICE_LINE_NUMBER))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(OMS_INVOICE_LN_NBR))),
        ' ',
        LTRIM(RTRIM(OMS_INVOICE_LN_NBR))
      )
      OR IFF(ISNULL(ORDERED_QTY), 0, ORDERED_QTY) <> IFF(ISNULL(ORDERED_QTY1), 0, ORDERED_QTY1)
      OR IFF(ISNULL(INVOICE_STATUS_ID), 0, INVOICE_STATUS_ID) <> IFF(ISNULL(STATUS), 0, STATUS)
      OR IFF(ISNULL(INVOICED_QTY), 0, INVOICED_QTY) <> IFF(ISNULL(INVOICED_QTY1), 0, INVOICED_QTY1)
      OR IFF(ISNULL(UNIT_PRICE), 0, UNIT_PRICE) <> IFF(ISNULL(UNIT_PRICE_AMT), 0, UNIT_PRICE_AMT)
      OR IFF(ISNULL(LINE_CHARGE), 0, LINE_CHARGE) <> IFF(
        ISNULL(LINE_TOTAL_CHARGE_AMT),
        0,
        LINE_TOTAL_CHARGE_AMT
      )
      OR IFF(ISNULL(LINE_DISCOUNT), 0, LINE_DISCOUNT) <> IFF(
        ISNULL(LINE_TOTAL_DISC_AMT),
        0,
        LINE_TOTAL_DISC_AMT
      )
      OR IFF(ISNULL(LINE_TAX), 0, LINE_TAX) <> IFF(ISNULL(LINE_TOTAL_TAX_AMT), 0, LINE_TOTAL_TAX_AMT)
      OR IFF(
        ISNULL(LTRIM(RTRIM(ENTITY_LINE_NUMBER))),
        ' ',
        LTRIM(RTRIM(ENTITY_LINE_NUMBER))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(OMS_CO_LN_NBR))),
        ' ',
        LTRIM(RTRIM(OMS_CO_LN_NBR))
      )
      OR IFF(ISNULL(INVOICE_AMOUNT), 0, INVOICE_AMOUNT) <> IFF(ISNULL(INVOICE_TOTAL_AMT), 0, INVOICE_TOTAL_AMT)
      OR IFF(
        ISNULL(INVOICE_AMOUNT_PROCESSED),
        0,
        INVOICE_AMOUNT_PROCESSED
      ) <> IFF(
        ISNULL(INVOICE_AMT_PROCESSED),
        0,
        INVOICE_AMT_PROCESSED
      )
      OR IFF(
        ISNULL(INVOICE_CREATION_DTTM),
        TO_DATE('1999-01-01', 'YYYY-MM-DD'),
        INVOICE_CREATION_DTTM
      ) <> IFF(
        ISNULL(INVOICE_CREATE_TSTMP),
        TO_DATE('1999-01-01', 'YYYY-MM-DD'),
        INVOICE_CREATE_TSTMP
      )
      OR LAST_UPDATED_DTTM11 <> INVOICE_LAST_UPD_TSTMP
      OR IFF(
        ISNULL(EXHCNAGE_RATE_PCNT_exp),
        0,
        EXHCNAGE_RATE_PCNT_exp
      ) <> IFF(
        ISNULL(EXCHANGE_RATE_PCNT1),
        0,
        EXCHANGE_RATE_PCNT1
      )
    )
  )"""

df_27 = spark.sql(query_27)

df_27.createOrReplaceTempView("FIL_UNCHANGED_REC_27")

# COMMAND ----------
# DBTITLE 1, EXP_LOAD_TSTMP_28


query_28 = f"""SELECT
  EXHCNAGE_RATE_PCNT_exp AS EXHCNAGE_RATE_PCNT_exp,
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  CURRENCY AS CURRENCY,
  INVOICE_LINE_ID AS INVOICE_LINE_ID,
  INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE AS UNIT_PRICE,
  LINE_CHARGE AS LINE_CHARGE,
  LINE_DISCOUNT AS LINE_DISCOUNT,
  LINE_TAX AS LINE_TAX,
  ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  PURCHASE_ORDER_LINE_NUMBER AS PURCHASE_ORDER_LINE_NUMBER,
  ORDER_ID AS ORDER_ID,
  MASTER_ORDER_ID AS MASTER_ORDER_ID,
  ORDER_ID1 AS ORDER_ID1,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  TC_LPN_ID AS TC_LPN_ID,
  OMS_ORDER_ID1 AS OMS_ORDER_ID,
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID,
  MO_LINE_ITEM_ID AS MO_LINE_ITEM_ID,
  Sub_PURCHASE_ORDERS_LINE_NUMBER AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  OLI_LAST_UPDATED_DTTM AS OLI_LAST_UPDATED_DTTM,
  LPN_LAST_UPDATED_DTTM AS LPN_LAST_UPDATED_DTTM,
  INVOICE_TYPE AS INVOICE_TYPE,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  STATUS AS STATUS,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  Load_Tstamp_EXP AS Load_Tstamp_EXP,
  IFF(
    ISNULL(lkp_OMS_INVOICE_ID)
    AND ISNULL(OMS_INVOICE_LN_ID),
    1,
    2
  ) AS UPD_FLAG,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  ORDER_LINE_ID AS ORDER_LINE_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_UNCHANGED_REC_27"""

df_28 = spark.sql(query_28)

df_28.createOrReplaceTempView("EXP_LOAD_TSTMP_28")

# COMMAND ----------
# DBTITLE 1, UPD_INS_UPD_29


query_29 = f"""SELECT
  EXHCNAGE_RATE_PCNT_exp AS EXHCNAGE_RATE_PCNT_exp,
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  CURRENCY AS CURRENCY,
  INVOICE_LINE_ID AS INVOICE_LINE_ID,
  INVOICE_LINE_NUMBER AS INVOICE_LINE_NUMBER,
  ORDERED_QTY AS ORDERED_QTY,
  INVOICED_QTY AS INVOICED_QTY,
  UNIT_PRICE AS UNIT_PRICE,
  LINE_CHARGE AS LINE_CHARGE,
  LINE_DISCOUNT AS LINE_DISCOUNT,
  LINE_TAX AS LINE_TAX,
  ENTITY_LINE_NUMBER AS ENTITY_LINE_NUMBER,
  ORDER_ID AS ORDER_ID,
  Sub_PURCHASE_ORDERS_LINE_NUMBER AS Sub_PURCHASE_ORDERS_LINE_NUMBER,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  LAST_UPDATED_DTTM11 AS LAST_UPDATED_DTTM11,
  STATUS AS STATUS,
  Load_Tstamp_EXP AS Load_Tstamp_EXP,
  UPD_FLAG AS UPD_FLAG,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID1,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  ORDER_LINE_ID AS ORDER_LINE_ID,
  LINE_ITEM_ID AS LINE_ITEM_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(UPD_FLAG, 1, 'DD_INSERT', 2, 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  EXP_LOAD_TSTMP_28"""

df_29 = spark.sql(query_29)

df_29.createOrReplaceTempView("UPD_INS_UPD_29")

# COMMAND ----------
# DBTITLE 1, OMS_INVOICE_LN


spark.sql("""MERGE INTO OMS_INVOICE_LN AS TARGET
USING
  UPD_INS_UPD_29 AS SOURCE ON TARGET.OMS_DIST_ORDER_ID = SOURCE.ORDER_ID
  AND TARGET.OMS_INVOICE_LN_ID = SOURCE.INVOICE_LINE_ID
  AND TARGET.OMS_INVOICE_ID = SOURCE.INVOICE_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_INVOICE_ID = SOURCE.INVOICE_ID,
  TARGET.OMS_INVOICE_LN_ID = SOURCE.INVOICE_LINE_ID,
  TARGET.OMS_INVOICE_NBR = SOURCE.INVOICE_NUMBER,
  TARGET.OMS_INVOICE_LN_NBR = SOURCE.INVOICE_LINE_NUMBER,
  TARGET.OMS_ORDER_ID = SOURCE.ENTITY_ID,
  TARGET.OMS_ORDER_NBR = SOURCE.TC_PURCHASE_ORDERS_ID1,
  TARGET.OMS_ORDER_LN_ID = SOURCE.ORDER_LINE_ID,
  TARGET.OMS_DIST_ORDER_ID = SOURCE.ORDER_ID,
  TARGET.OMS_CO_LN_NBR = SOURCE.ENTITY_LINE_NUMBER,
  TARGET.ORDERED_QTY = SOURCE.ORDERED_QTY,
  TARGET.INVOICED_QTY = SOURCE.INVOICED_QTY,
  TARGET.UNIT_PRICE_AMT = SOURCE.UNIT_PRICE,
  TARGET.LINE_TOTAL_CHARGE_AMT = SOURCE.LINE_CHARGE,
  TARGET.LINE_TOTAL_DISC_AMT = SOURCE.LINE_DISCOUNT,
  TARGET.LINE_TOTAL_TAX_AMT = SOURCE.LINE_TAX,
  TARGET.INVOICE_TOTAL_AMT = SOURCE.INVOICE_AMOUNT,
  TARGET.INVOICE_AMT_PROCESSED = SOURCE.INVOICE_AMOUNT_PROCESSED,
  TARGET.CURRENCY_CD = SOURCE.CURRENCY,
  TARGET.EXCHANGE_RATE_PCNT = SOURCE.EXHCNAGE_RATE_PCNT_exp,
  TARGET.INVOICE_CREATE_TSTMP = SOURCE.INVOICE_CREATION_DTTM,
  TARGET.INVOICE_LAST_UPD_TSTMP = SOURCE.LAST_UPDATED_DTTM11,
  TARGET.INVOICE_STATUS_ID = SOURCE.STATUS,
  TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.Load_Tstamp_EXP
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_INVOICE_NBR = SOURCE.INVOICE_NUMBER
  AND TARGET.OMS_INVOICE_LN_NBR = SOURCE.INVOICE_LINE_NUMBER
  AND TARGET.OMS_ORDER_ID = SOURCE.ENTITY_ID
  AND TARGET.OMS_ORDER_NBR = SOURCE.TC_PURCHASE_ORDERS_ID1
  AND TARGET.OMS_ORDER_LN_ID = SOURCE.ORDER_LINE_ID
  AND TARGET.OMS_CO_LN_NBR = SOURCE.ENTITY_LINE_NUMBER
  AND TARGET.ORDERED_QTY = SOURCE.ORDERED_QTY
  AND TARGET.INVOICED_QTY = SOURCE.INVOICED_QTY
  AND TARGET.UNIT_PRICE_AMT = SOURCE.UNIT_PRICE
  AND TARGET.LINE_TOTAL_CHARGE_AMT = SOURCE.LINE_CHARGE
  AND TARGET.LINE_TOTAL_DISC_AMT = SOURCE.LINE_DISCOUNT
  AND TARGET.LINE_TOTAL_TAX_AMT = SOURCE.LINE_TAX
  AND TARGET.INVOICE_TOTAL_AMT = SOURCE.INVOICE_AMOUNT
  AND TARGET.INVOICE_AMT_PROCESSED = SOURCE.INVOICE_AMOUNT_PROCESSED
  AND TARGET.CURRENCY_CD = SOURCE.CURRENCY
  AND TARGET.EXCHANGE_RATE_PCNT = SOURCE.EXHCNAGE_RATE_PCNT_exp
  AND TARGET.INVOICE_CREATE_TSTMP = SOURCE.INVOICE_CREATION_DTTM
  AND TARGET.INVOICE_LAST_UPD_TSTMP = SOURCE.LAST_UPDATED_DTTM11
  AND TARGET.INVOICE_STATUS_ID = SOURCE.STATUS
  AND TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.Load_Tstamp_EXP THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_INVOICE_ID,
    TARGET.OMS_INVOICE_LN_ID,
    TARGET.OMS_INVOICE_NBR,
    TARGET.OMS_INVOICE_LN_NBR,
    TARGET.OMS_ORDER_ID,
    TARGET.OMS_ORDER_NBR,
    TARGET.OMS_ORDER_LN_ID,
    TARGET.OMS_DIST_ORDER_ID,
    TARGET.OMS_CO_LN_NBR,
    TARGET.ORDERED_QTY,
    TARGET.INVOICED_QTY,
    TARGET.UNIT_PRICE_AMT,
    TARGET.LINE_TOTAL_CHARGE_AMT,
    TARGET.LINE_TOTAL_DISC_AMT,
    TARGET.LINE_TOTAL_TAX_AMT,
    TARGET.INVOICE_TOTAL_AMT,
    TARGET.INVOICE_AMT_PROCESSED,
    TARGET.CURRENCY_CD,
    TARGET.EXCHANGE_RATE_PCNT,
    TARGET.INVOICE_CREATE_TSTMP,
    TARGET.INVOICE_LAST_UPD_TSTMP,
    TARGET.INVOICE_STATUS_ID,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.INVOICE_ID,
    SOURCE.INVOICE_LINE_ID,
    SOURCE.INVOICE_NUMBER,
    SOURCE.INVOICE_LINE_NUMBER,
    SOURCE.ENTITY_ID,
    SOURCE.TC_PURCHASE_ORDERS_ID1,
    SOURCE.ORDER_LINE_ID,
    SOURCE.ORDER_ID,
    SOURCE.ENTITY_LINE_NUMBER,
    SOURCE.ORDERED_QTY,
    SOURCE.INVOICED_QTY,
    SOURCE.UNIT_PRICE,
    SOURCE.LINE_CHARGE,
    SOURCE.LINE_DISCOUNT,
    SOURCE.LINE_TAX,
    SOURCE.INVOICE_AMOUNT,
    SOURCE.INVOICE_AMOUNT_PROCESSED,
    SOURCE.CURRENCY,
    SOURCE.EXHCNAGE_RATE_PCNT_exp,
    SOURCE.INVOICE_CREATION_DTTM,
    SOURCE.LAST_UPDATED_DTTM11,
    SOURCE.STATUS,
    SOURCE.UPDATE_TSTMP,
    SOURCE.Load_Tstamp_EXP
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Invoice_Ln_Historical_Load")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_OMS_Invoice_Ln_Historical_Load", mainWorkflowId, parentName)
