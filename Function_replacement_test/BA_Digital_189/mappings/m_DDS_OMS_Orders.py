# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Orders")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_Orders", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDERS_PRE_NEW_0


query_0 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  TC_ORDER_ID AS TC_ORDER_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  CREATION_TYPE AS CREATION_TYPE,
  EXT_PURCHASE_ORDER AS EXT_PURCHASE_ORDER,
  O_FACILITY_ALIAS_ID AS O_FACILITY_ALIAS_ID,
  O_FACILITY_ID AS O_FACILITY_ID,
  D_FACILITY_ALIAS_ID AS D_FACILITY_ALIAS_ID,
  D_FACILITY_ID AS D_FACILITY_ID,
  BILL_FACILITY_ALIAS_ID AS BILL_FACILITY_ALIAS_ID,
  BILL_FACILITY_ID AS BILL_FACILITY_ID,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  ORDER_DATE_DTTM AS ORDER_DATE_DTTM,
  ORDER_RECON_DTTM AS ORDER_RECON_DTTM,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_SPLIT AS HAS_SPLIT,
  IS_CANCELLED AS IS_CANCELLED,
  IS_PARTIALLY_PLANNED AS IS_PARTIALLY_PLANNED,
  ACTUAL_COST AS ACTUAL_COST,
  BASELINE_COST AS BASELINE_COST,
  BILLING_METHOD AS BILLING_METHOD,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  MONETARY_VALUE AS MONETARY_VALUE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  SHIPMENT_ID AS SHIPMENT_ID,
  ORDER_STATUS AS ORDER_STATUS,
  ADDR_VALID AS ADDR_VALID,
  DO_STATUS AS DO_STATUS,
  DO_TYPE AS DO_TYPE,
  IS_BACK_ORDERED AS IS_BACK_ORDERED,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  D_DOCK_DOOR_ID AS D_DOCK_DOOR_ID,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  CUSTOMER_ID AS CUSTOMER_ID,
  SCHED_PICKUP_DTTM AS SCHED_PICKUP_DTTM,
  SCHED_DELIVERY_DTTM AS SCHED_DELIVERY_DTTM,
  PURCHASE_ORDER_ID AS PURCHASE_ORDER_ID,
  IS_CUSTOMER_PICKUP AS IS_CUSTOMER_PICKUP,
  PRTL_SHIP_CONF_FLAG AS PRTL_SHIP_CONF_FLAG,
  PRTL_SHIP_CONF_STATUS AS PRTL_SHIP_CONF_STATUS,
  ORDER_TYPE AS ORDER_TYPE,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  REF_NUM1 AS REF_NUM1,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDERS_PRE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_ORDERS_PRE_NEW_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDERS_PRE_NEW_1


query_1 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  TC_ORDER_ID AS TC_ORDER_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  CREATION_TYPE AS CREATION_TYPE,
  EXT_PURCHASE_ORDER AS EXT_PURCHASE_ORDER,
  O_FACILITY_ALIAS_ID AS O_FACILITY_ALIAS_ID,
  O_FACILITY_ID AS O_FACILITY_ID,
  D_FACILITY_ALIAS_ID AS D_FACILITY_ALIAS_ID,
  D_FACILITY_ID AS D_FACILITY_ID,
  BILL_FACILITY_ALIAS_ID AS BILL_FACILITY_ALIAS_ID,
  BILL_FACILITY_ID AS BILL_FACILITY_ID,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  ORDER_DATE_DTTM AS ORDER_DATE_DTTM,
  ORDER_RECON_DTTM AS ORDER_RECON_DTTM,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_SPLIT AS HAS_SPLIT,
  IS_CANCELLED AS IS_CANCELLED,
  IS_PARTIALLY_PLANNED AS IS_PARTIALLY_PLANNED,
  ACTUAL_COST AS ACTUAL_COST,
  BASELINE_COST AS BASELINE_COST,
  BILLING_METHOD AS BILLING_METHOD,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  MONETARY_VALUE AS MONETARY_VALUE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  SHIPMENT_ID AS SHIPMENT_ID,
  ORDER_STATUS AS ORDER_STATUS,
  ADDR_VALID AS ADDR_VALID,
  DO_STATUS AS DO_STATUS,
  DO_TYPE AS DO_TYPE,
  IS_BACK_ORDERED AS IS_BACK_ORDERED,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  D_DOCK_DOOR_ID AS D_DOCK_DOOR_ID,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  CUSTOMER_ID AS CUSTOMER_ID,
  SCHED_PICKUP_DTTM AS SCHED_PICKUP_DTTM,
  SCHED_DELIVERY_DTTM AS SCHED_DELIVERY_DTTM,
  PURCHASE_ORDER_ID AS PURCHASE_ORDER_ID,
  IS_CUSTOMER_PICKUP AS IS_CUSTOMER_PICKUP,
  PRTL_SHIP_CONF_FLAG AS PRTL_SHIP_CONF_FLAG,
  PRTL_SHIP_CONF_STATUS AS PRTL_SHIP_CONF_STATUS,
  ORDER_TYPE AS ORDER_TYPE,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  REF_NUM1 AS REF_NUM1,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDERS_PRE_NEW_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDERS_PRE_NEW_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDERS_NEW_2


query_2 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_ORDER_ID AS OMS_TC_ORDER_ID,
  OMS_PURCHASE_ORDER_ID AS OMS_PURCHASE_ORDER_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_EXT_PURCHASE_ORDER AS OMS_EXT_PURCHASE_ORDER,
  OMS_ORDER_TYPE AS OMS_ORDER_TYPE,
  OMS_ORDER_STATUS_ID AS OMS_ORDER_STATUS_ID,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  OMS_DO_STATUS_ID AS OMS_DO_STATUS_ID,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_BILLING_METHOD_ID AS OMS_BILLING_METHOD_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  OMS_DELIVERY_OPTIONS_ID AS OMS_DELIVERY_OPTIONS_ID,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  PARTIAL_SHIP_CONFIRMATION_FLAG AS PARTIAL_SHIP_CONFIRMATION_FLAG,
  PARTIAL_SHIP_CONFIRMATION_STATUS AS PARTIAL_SHIP_CONFIRMATION_STATUS,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  HAS_SPLIT_FLAG AS HAS_SPLIT_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  BACK_ORDERED_FLAG AS BACK_ORDERED_FLAG,
  OMS_INBOUND_REGION_ID AS OMS_INBOUND_REGION_ID,
  OMS_OUTBOUND_REGION_ID AS OMS_OUTBOUND_REGION_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_CUSTOMER_ID AS OMS_CUSTOMER_ID,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ORDER_DT_TSTMP AS OMS_ORDER_DT_TSTMP,
  OMS_ORDER_RECON_TSTMP AS OMS_ORDER_RECON_TSTMP,
  OMS_SCHED_PICKUP_TSTMP AS OMS_SCHED_PICKUP_TSTMP,
  OMS_SCHED_DELIVERY_TSTMP AS OMS_SCHED_DELIVERY_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  BASELINE_COST AS BASELINE_COST,
  ACTUAL_COST AS ACTUAL_COST,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  REF_NUM1 AS REF_NUM1,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDERS"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_ORDERS_NEW_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDERS_NEW_3


query_3 = f"""SELECT
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_ORDER_ID AS OMS_TC_ORDER_ID,
  OMS_PURCHASE_ORDER_ID AS OMS_PURCHASE_ORDER_ID,
  OMS_PURCHASE_ORDER_NBR AS OMS_PURCHASE_ORDER_NBR,
  OMS_EXT_PURCHASE_ORDER AS OMS_EXT_PURCHASE_ORDER,
  OMS_ORDER_TYPE AS OMS_ORDER_TYPE,
  OMS_ORDER_STATUS_ID AS OMS_ORDER_STATUS_ID,
  OMS_DO_TYPE_ID AS OMS_DO_TYPE_ID,
  OMS_DO_STATUS_ID AS OMS_DO_STATUS_ID,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_BILLING_METHOD_ID AS OMS_BILLING_METHOD_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  OMS_DELIVERY_OPTIONS_ID AS OMS_DELIVERY_OPTIONS_ID,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  PARTIAL_SHIP_CONFIRMATION_FLAG AS PARTIAL_SHIP_CONFIRMATION_FLAG,
  PARTIAL_SHIP_CONFIRMATION_STATUS AS PARTIAL_SHIP_CONFIRMATION_STATUS,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  HAS_SPLIT_FLAG AS HAS_SPLIT_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  BACK_ORDERED_FLAG AS BACK_ORDERED_FLAG,
  OMS_INBOUND_REGION_ID AS OMS_INBOUND_REGION_ID,
  OMS_OUTBOUND_REGION_ID AS OMS_OUTBOUND_REGION_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_CUSTOMER_ID AS OMS_CUSTOMER_ID,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_ORDER_DT_TSTMP AS OMS_ORDER_DT_TSTMP,
  OMS_ORDER_RECON_TSTMP AS OMS_ORDER_RECON_TSTMP,
  OMS_SCHED_PICKUP_TSTMP AS OMS_SCHED_PICKUP_TSTMP,
  OMS_SCHED_DELIVERY_TSTMP AS OMS_SCHED_DELIVERY_TSTMP,
  OMS_ACTUAL_SHIPPED_TSTMP AS OMS_ACTUAL_SHIPPED_TSTMP,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  BASELINE_COST AS BASELINE_COST,
  ACTUAL_COST AS ACTUAL_COST,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  REF_NUM1 AS REF_NUM1,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDERS_NEW_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDERS_NEW_3")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_ORDERS_4


query_4 = f"""SELECT
  DETAIL.ORDER_ID AS ORDER_ID,
  DETAIL.TC_ORDER_ID AS TC_ORDER_ID,
  DETAIL.TC_COMPANY_ID AS TC_COMPANY_ID,
  DETAIL.CREATION_TYPE AS CREATION_TYPE,
  DETAIL.EXT_PURCHASE_ORDER AS EXT_PURCHASE_ORDER,
  DETAIL.O_FACILITY_ALIAS_ID AS O_FACILITY_ALIAS_ID,
  DETAIL.O_FACILITY_ID AS O_FACILITY_ID,
  DETAIL.D_FACILITY_ALIAS_ID AS D_FACILITY_ALIAS_ID,
  DETAIL.D_FACILITY_ID AS D_FACILITY_ID,
  DETAIL.BILL_FACILITY_ALIAS_ID AS BILL_FACILITY_ALIAS_ID,
  DETAIL.BILL_FACILITY_ID AS BILL_FACILITY_ID,
  DETAIL.PICKUP_TZ AS PICKUP_TZ,
  DETAIL.DELIVERY_TZ AS DELIVERY_TZ,
  DETAIL.PICKUP_START_DTTM AS PICKUP_START_DTTM,
  DETAIL.PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DETAIL.DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DETAIL.DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  DETAIL.ORDER_DATE_DTTM AS ORDER_DATE_DTTM,
  DETAIL.ORDER_RECON_DTTM AS ORDER_RECON_DTTM,
  DETAIL.INBOUND_REGION_ID AS INBOUND_REGION_ID,
  DETAIL.OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  DETAIL.HAS_ALERTS AS HAS_ALERTS,
  DETAIL.HAS_SPLIT AS HAS_SPLIT,
  DETAIL.IS_CANCELLED AS IS_CANCELLED,
  DETAIL.IS_PARTIALLY_PLANNED AS IS_PARTIALLY_PLANNED,
  DETAIL.ACTUAL_COST AS ACTUAL_COST,
  DETAIL.BASELINE_COST AS BASELINE_COST,
  DETAIL.BILLING_METHOD AS BILLING_METHOD,
  DETAIL.DROPOFF_PICKUP AS DROPOFF_PICKUP,
  DETAIL.MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  DETAIL.MONETARY_VALUE AS MONETARY_VALUE,
  DETAIL.CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  DETAIL.CREATED_SOURCE AS CREATED_SOURCE,
  DETAIL.CREATED_DTTM AS CREATED_DTTM,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.SHIPMENT_ID AS SHIPMENT_ID,
  DETAIL.ORDER_STATUS AS ORDER_STATUS,
  DETAIL.ADDR_VALID AS ADDR_VALID,
  DETAIL.DO_STATUS AS DO_STATUS,
  DETAIL.DO_TYPE AS DO_TYPE,
  DETAIL.IS_BACK_ORDERED AS IS_BACK_ORDERED,
  DETAIL.ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  DETAIL.D_DOCK_DOOR_ID AS D_DOCK_DOOR_ID,
  DETAIL.PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  DETAIL.CUSTOMER_ID AS CUSTOMER_ID,
  DETAIL.SCHED_PICKUP_DTTM AS SCHED_PICKUP_DTTM,
  DETAIL.SCHED_DELIVERY_DTTM AS SCHED_DELIVERY_DTTM,
  DETAIL.PURCHASE_ORDER_ID AS PURCHASE_ORDER_ID,
  DETAIL.IS_CUSTOMER_PICKUP AS IS_CUSTOMER_PICKUP,
  DETAIL.PRTL_SHIP_CONF_FLAG AS PRTL_SHIP_CONF_FLAG,
  DETAIL.PRTL_SHIP_CONF_STATUS AS PRTL_SHIP_CONF_STATUS,
  DETAIL.ORDER_TYPE AS ORDER_TYPE,
  DETAIL.DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  DETAIL.REF_NUM1 AS REF_NUM1,
  DETAIL.TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  MASTER.OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  MASTER.OMS_TC_COMPANY_ID AS lkp_OMS_TC_COMPANY_ID,
  MASTER.OMS_TC_ORDER_ID AS lkp_OMS_TC_ORDER_ID,
  MASTER.OMS_PURCHASE_ORDER_ID AS lkp_OMS_PURCHASE_ORDER_ID,
  MASTER.OMS_PURCHASE_ORDER_NBR AS lkp_OMS_PURCHASE_ORDER_NBR,
  MASTER.OMS_EXT_PURCHASE_ORDER AS lkp_OMS_EXT_PURCHASE_ORDER,
  MASTER.OMS_ORDER_TYPE AS lkp_OMS_ORDER_TYPE,
  MASTER.OMS_ORDER_STATUS_ID AS lkp_OMS_ORDER_STATUS_ID,
  MASTER.OMS_DO_TYPE_ID AS lkp_OMS_DO_TYPE_ID,
  MASTER.OMS_DO_STATUS_ID AS lkp_OMS_DO_STATUS_ID,
  MASTER.OMS_SHIPMENT_ID AS lkp_OMS_SHIPMENT_ID,
  MASTER.OMS_CREATION_TYPE_ID AS lkp_OMS_CREATION_TYPE_ID,
  MASTER.OMS_BILLING_METHOD_ID AS lkp_OMS_BILLING_METHOD_ID,
  MASTER.DROPOFF_PICKUP AS lkp_DROPOFF_PICKUP1,
  MASTER.OMS_DELIVERY_OPTIONS_ID AS lkp_OMS_DELIVERY_OPTIONS_ID,
  MASTER.CUSTOMER_PICKUP_FLAG AS lkp_CUSTOMER_PICKUP_FLAG,
  MASTER.PARTIALLY_PLANNED_FLAG AS lkp_PARTIALLY_PLANNED_FLAG,
  MASTER.PARTIAL_SHIP_CONFIRMATION_FLAG AS lkp_PARTIAL_SHIP_CONFIRMATION_FLAG,
  MASTER.PARTIAL_SHIP_CONFIRMATION_STATUS AS lkp_PARTIAL_SHIP_CONFIRMATION_STATUS,
  MASTER.HAS_ALERTS_FLAG AS lkp_HAS_ALERTS_FLAG,
  MASTER.HAS_SPLIT_FLAG AS lkp_HAS_SPLIT_FLAG,
  MASTER.CANCELLED_FLAG AS lkp_CANCELLED_FLAG,
  MASTER.BACK_ORDERED_FLAG AS lkp_BACK_ORDERED_FLAG,
  MASTER.OMS_INBOUND_REGION_ID AS lkp_OMS_INBOUND_REGION_ID,
  MASTER.OMS_OUTBOUND_REGION_ID AS lkp_OMS_OUTBOUND_REGION_ID,
  MASTER.OMS_O_FACILITY_ALIAS_ID AS lkp_OMS_O_FACILITY_ALIAS_ID,
  MASTER.OMS_O_FACILITY_ID AS lkp_OMS_O_FACILITY_ID,
  MASTER.OMS_D_FACILITY_ALIAS_ID AS lkp_OMS_D_FACILITY_ALIAS_ID,
  MASTER.OMS_D_FACILITY_ID AS lkp_OMS_D_FACILITY_ID,
  MASTER.OMS_BILL_FACILITY_ALIAS_ID AS lkp_OMS_BILL_FACILITY_ALIAS_ID,
  MASTER.OMS_BILL_FACILITY_ID AS lkp_OMS_BILL_FACILITY_ID,
  MASTER.OMS_CUSTOMER_ID AS lkp_OMS_CUSTOMER_ID,
  MASTER.ADDR_VALID_FLAG AS lkp_ADDR_VALID_FLAG,
  MASTER.OMS_PICKUP_START_TSTMP AS lkp_OMS_PICKUP_START_TSTMP,
  MASTER.OMS_PICKUP_END_TSTMP AS lkp_OMS_PICKUP_END_TSTMP,
  MASTER.OMS_PICKUP_TZ_ID AS lkp_OMS_PICKUP_TZ_ID,
  MASTER.OMS_DELIVERY_TZ_ID AS lkp_OMS_DELIVERY_TZ_ID,
  MASTER.OMS_DELIVERY_START_TSTMP AS lkp_OMS_DELIVERY_START_TSTMP,
  MASTER.OMS_DELIVERY_END_TSTMP AS lkp_OMS_DELIVERY_END_TSTMP,
  MASTER.OMS_ORDER_DT_TSTMP AS lkp_OMS_ORDER_DT_TSTMP,
  MASTER.OMS_ORDER_RECON_TSTMP AS lkp_OMS_ORDER_RECON_TSTMP,
  MASTER.OMS_SCHED_PICKUP_TSTMP AS lkp_OMS_SCHED_PICKUP_TSTMP,
  MASTER.OMS_SCHED_DELIVERY_TSTMP AS lkp_OMS_SCHED_DELIVERY_TSTMP,
  MASTER.OMS_ACTUAL_SHIPPED_TSTMP AS lkp_OMS_ACTUAL_SHIPPED_TSTMP,
  MASTER.TOTAL_NBR_OF_UNITS AS lkp_TOTAL_NBR_OF_UNITS1,
  MASTER.BASELINE_COST AS lkp_BASELINE_COST1,
  MASTER.ACTUAL_COST AS lkp_ACTUAL_COST1,
  MASTER.MONETARY_VALUE AS lkp_MONETARY_VALUE1,
  MASTER.MV_CURRENCY_CD AS lkp_MV_CURRENCY_CD,
  MASTER.REF_NUM1 AS lkp_REF_NUM11,
  MASTER.OMS_CREATED_SOURCE_TYPE_ID AS lkp_OMS_CREATED_SOURCE_TYPE_ID,
  MASTER.OMS_CREATED_SOURCE AS lkp_OMS_CREATED_SOURCE,
  MASTER.OMS_CREATED_TSTMP AS lkp_OMS_CREATED_TSTMP,
  MASTER.OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ORDERS_NEW_3 MASTER
  RIGHT JOIN SQ_Shortcut_to_OMS_ORDERS_PRE_NEW_1 DETAIL ON MASTER.OMS_ORDER_ID = DETAIL.ORDER_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_OMS_ORDERS_4")

# COMMAND ----------
# DBTITLE 1, EXP_FLAG_5


query_5 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  TC_ORDER_ID AS TC_ORDER_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  CREATION_TYPE AS CREATION_TYPE,
  EXT_PURCHASE_ORDER AS EXT_PURCHASE_ORDER,
  O_FACILITY_ALIAS_ID AS O_FACILITY_ALIAS_ID,
  O_FACILITY_ID AS O_FACILITY_ID,
  D_FACILITY_ALIAS_ID AS D_FACILITY_ALIAS_ID,
  D_FACILITY_ID AS D_FACILITY_ID,
  BILL_FACILITY_ALIAS_ID AS BILL_FACILITY_ALIAS_ID,
  BILL_FACILITY_ID AS BILL_FACILITY_ID,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  ORDER_DATE_DTTM AS ORDER_DATE_DTTM,
  ORDER_RECON_DTTM AS ORDER_RECON_DTTM,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_SPLIT AS HAS_SPLIT,
  IS_CANCELLED AS IS_CANCELLED,
  IS_PARTIALLY_PLANNED AS IS_PARTIALLY_PLANNED,
  ACTUAL_COST AS ACTUAL_COST,
  BASELINE_COST AS BASELINE_COST,
  BILLING_METHOD AS BILLING_METHOD,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  MONETARY_VALUE AS MONETARY_VALUE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  SHIPMENT_ID AS SHIPMENT_ID,
  ORDER_STATUS AS ORDER_STATUS,
  ADDR_VALID AS ADDR_VALID,
  DO_STATUS AS DO_STATUS,
  DO_TYPE AS DO_TYPE,
  IS_BACK_ORDERED AS IS_BACK_ORDERED,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  D_DOCK_DOOR_ID AS D_DOCK_DOOR_ID,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  CUSTOMER_ID AS CUSTOMER_ID,
  SCHED_PICKUP_DTTM AS SCHED_PICKUP_DTTM,
  SCHED_DELIVERY_DTTM AS SCHED_DELIVERY_DTTM,
  PURCHASE_ORDER_ID AS PURCHASE_ORDER_ID,
  IS_CUSTOMER_PICKUP AS IS_CUSTOMER_PICKUP,
  PRTL_SHIP_CONF_FLAG AS PRTL_SHIP_CONF_FLAG,
  PRTL_SHIP_CONF_STATUS AS PRTL_SHIP_CONF_STATUS,
  ORDER_TYPE AS ORDER_TYPE,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  REF_NUM1 AS REF_NUM1,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  IFF(
    ISNULL(lkp_OMS_ORDER_ID),
    'INSERT',
    IFF(
      (
        IFF(
          ISNULL(PICKUP_START_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          PICKUP_START_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_PICKUP_START_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_PICKUP_START_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(PICKUP_END_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          PICKUP_END_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_PICKUP_END_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_PICKUP_END_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(DELIVERY_START_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          DELIVERY_START_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_DELIVERY_START_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_DELIVERY_START_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(DELIVERY_END_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          DELIVERY_END_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_DELIVERY_END_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_DELIVERY_END_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(ORDER_DATE_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          ORDER_DATE_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_ORDER_DT_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_ORDER_DT_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(ORDER_RECON_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          ORDER_RECON_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_ORDER_RECON_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_ORDER_RECON_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(SCHED_PICKUP_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          SCHED_PICKUP_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_SCHED_PICKUP_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_SCHED_PICKUP_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(SCHED_DELIVERY_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          SCHED_DELIVERY_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_SCHED_DELIVERY_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_SCHED_DELIVERY_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(ACTUAL_SHIPPED_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          ACTUAL_SHIPPED_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_ACTUAL_SHIPPED_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_ACTUAL_SHIPPED_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(CREATED_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          CREATED_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_CREATED_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_CREATED_TSTMP
        )
      )
      OR (
        IFF(
          ISNULL(LAST_UPDATED_DTTM),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          LAST_UPDATED_DTTM
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_LAST_UPDATED_TSTMP),
          To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
          lkp_OMS_LAST_UPDATED_TSTMP
        )
      )
      OR (IFF(ISNULL(ORDER_ID), 99, ORDER_ID)) != (
        IFF(ISNULL(lkp_OMS_ORDER_ID), 99, lkp_OMS_ORDER_ID)
      )
      OR (IFF(ISNULL(TC_COMPANY_ID), 99, TC_COMPANY_ID)) != (
        IFF(
          ISNULL(lkp_OMS_TC_COMPANY_ID),
          99,
          lkp_OMS_TC_COMPANY_ID
        )
      )
      OR (
        IFF(ISNULL(PURCHASE_ORDER_ID), 99, PURCHASE_ORDER_ID)
      ) != (
        IFF(
          ISNULL(lkp_OMS_PURCHASE_ORDER_ID),
          99,
          lkp_OMS_PURCHASE_ORDER_ID
        )
      )
      OR (IFF(ISNULL(ORDER_STATUS), 99, ORDER_STATUS)) != (
        IFF(
          ISNULL(lkp_OMS_ORDER_STATUS_ID),
          99,
          lkp_OMS_ORDER_STATUS_ID
        )
      )
      OR (IFF(ISNULL(DO_TYPE), 99, DO_TYPE)) != (
        IFF(ISNULL(lkp_OMS_DO_TYPE_ID), 99, lkp_OMS_DO_TYPE_ID)
      )
      OR (IFF(ISNULL(DO_STATUS), 99, DO_STATUS)) != (
        IFF(
          ISNULL(lkp_OMS_DO_STATUS_ID),
          99,
          lkp_OMS_DO_STATUS_ID
        )
      )
      OR (IFF(ISNULL(SHIPMENT_ID), 99, SHIPMENT_ID)) != (
        IFF(
          ISNULL(lkp_OMS_SHIPMENT_ID),
          99,
          lkp_OMS_SHIPMENT_ID
        )
      )
      OR (IFF(ISNULL(CREATION_TYPE), 99, CREATION_TYPE)) != (
        IFF(
          ISNULL(lkp_OMS_CREATION_TYPE_ID),
          99,
          lkp_OMS_CREATION_TYPE_ID
        )
      )
      OR (IFF(ISNULL(BILLING_METHOD), 99, BILLING_METHOD)) != (
        IFF(
          ISNULL(lkp_OMS_BILLING_METHOD_ID),
          99,
          lkp_OMS_BILLING_METHOD_ID
        )
      )
      OR (
        IFF(
          ISNULL(IS_PARTIALLY_PLANNED),
          99,
          IS_PARTIALLY_PLANNED
        )
      ) != (
        IFF(
          ISNULL(lkp_PARTIALLY_PLANNED_FLAG),
          99,
          lkp_PARTIALLY_PLANNED_FLAG
        )
      )
      OR (
        IFF(
          ISNULL(PRTL_SHIP_CONF_FLAG),
          99,
          PRTL_SHIP_CONF_FLAG
        )
      ) != (
        IFF(
          ISNULL(lkp_PARTIAL_SHIP_CONFIRMATION_FLAG),
          99,
          lkp_PARTIAL_SHIP_CONFIRMATION_FLAG
        )
      )
      OR (
        IFF(
          ISNULL(PRTL_SHIP_CONF_STATUS),
          99,
          PRTL_SHIP_CONF_STATUS
        )
      ) != (
        IFF(
          ISNULL(lkp_PARTIAL_SHIP_CONFIRMATION_STATUS),
          99,
          lkp_PARTIAL_SHIP_CONFIRMATION_STATUS
        )
      )
      OR (IFF(ISNULL(HAS_ALERTS), 99, HAS_ALERTS)) != (
        IFF(
          ISNULL(lkp_HAS_ALERTS_FLAG),
          99,
          lkp_HAS_ALERTS_FLAG
        )
      )
      OR (IFF(ISNULL(HAS_SPLIT), 99, HAS_SPLIT)) != (
        IFF(ISNULL(lkp_HAS_SPLIT_FLAG), 99, lkp_HAS_SPLIT_FLAG)
      )
      OR (IFF(ISNULL(IS_CANCELLED), 99, IS_CANCELLED)) != (
        IFF(ISNULL(lkp_CANCELLED_FLAG), 99, lkp_CANCELLED_FLAG)
      )
      OR (
        IFF(ISNULL(INBOUND_REGION_ID), 99, INBOUND_REGION_ID)
      ) != (
        IFF(
          ISNULL(lkp_OMS_INBOUND_REGION_ID),
          99,
          lkp_OMS_INBOUND_REGION_ID
        )
      )
      OR (
        IFF(ISNULL(OUTBOUND_REGION_ID), 99, OUTBOUND_REGION_ID)
      ) != (
        IFF(
          ISNULL(lkp_OMS_OUTBOUND_REGION_ID),
          99,
          lkp_OMS_OUTBOUND_REGION_ID
        )
      )
      OR (IFF(ISNULL(O_FACILITY_ID), 99, O_FACILITY_ID)) != (
        IFF(
          ISNULL(lkp_OMS_O_FACILITY_ID),
          99,
          lkp_OMS_O_FACILITY_ID
        )
      )
      OR (IFF(ISNULL(D_FACILITY_ID), 99, D_FACILITY_ID)) != (
        IFF(
          ISNULL(lkp_OMS_D_FACILITY_ID),
          99,
          lkp_OMS_D_FACILITY_ID
        )
      )
      OR (
        IFF(ISNULL(BILL_FACILITY_ID), 99, BILL_FACILITY_ID)
      ) != (
        IFF(
          ISNULL(lkp_OMS_BILL_FACILITY_ID),
          99,
          lkp_OMS_BILL_FACILITY_ID
        )
      )
      OR (IFF(ISNULL(CUSTOMER_ID), 99, CUSTOMER_ID)) != (
        IFF(
          ISNULL(lkp_OMS_CUSTOMER_ID),
          99,
          lkp_OMS_CUSTOMER_ID
        )
      )
      OR (IFF(ISNULL(PICKUP_TZ), 99, PICKUP_TZ)) != (
        IFF(
          ISNULL(lkp_OMS_PICKUP_TZ_ID),
          99,
          lkp_OMS_PICKUP_TZ_ID
        )
      )
      OR (IFF(ISNULL(DELIVERY_TZ), 99, DELIVERY_TZ)) != (
        IFF(
          ISNULL(lkp_OMS_DELIVERY_TZ_ID),
          99,
          lkp_OMS_DELIVERY_TZ_ID
        )
      )
      OR (
        IFF(ISNULL(TOTAL_NBR_OF_UNITS), 99, TOTAL_NBR_OF_UNITS)
      ) != (
        IFF(
          ISNULL(lkp_TOTAL_NBR_OF_UNITS1),
          99,
          lkp_TOTAL_NBR_OF_UNITS1
        )
      )
      OR (IFF(ISNULL(BASELINE_COST), 99, BASELINE_COST)) != (
        IFF(ISNULL(lkp_BASELINE_COST1), 99, lkp_BASELINE_COST1)
      )
      OR (IFF(ISNULL(ACTUAL_COST), 99, ACTUAL_COST)) != (
        IFF(ISNULL(lkp_ACTUAL_COST1), 99, lkp_ACTUAL_COST1)
      )
      OR (IFF(ISNULL(MONETARY_VALUE), 99, MONETARY_VALUE)) != (
        IFF(
          ISNULL(lkp_MONETARY_VALUE1),
          99,
          lkp_MONETARY_VALUE1
        )
      )
      OR (IFF(ISNULL(REF_NUM1), 99, REF_NUM1)) != (IFF(ISNULL(lkp_REF_NUM11), 99, lkp_REF_NUM11))
      OR (
        IFF(
          ISNULL(CREATED_SOURCE_TYPE),
          99,
          CREATED_SOURCE_TYPE
        )
      ) != (
        IFF(
          ISNULL(lkp_OMS_CREATED_SOURCE_TYPE_ID),
          99,
          lkp_OMS_CREATED_SOURCE_TYPE_ID
        )
      )
      OR LTRIM(RTRIM(IFF(ISNULL(TC_ORDER_ID), ' ', TC_ORDER_ID))) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_OMS_TC_ORDER_ID),
            ' ',
            lkp_OMS_TC_ORDER_ID
          )
        )
      )
      OR LTRIM(
        RTRIM(
          IFF(
            ISNULL(PURCHASE_ORDER_NUMBER),
            ' ',
            PURCHASE_ORDER_NUMBER
          )
        )
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_OMS_PURCHASE_ORDER_NBR),
            ' ',
            lkp_OMS_PURCHASE_ORDER_NBR
          )
        )
      )
      OR LTRIM(
        RTRIM(
          IFF(
            ISNULL(EXT_PURCHASE_ORDER),
            ' ',
            EXT_PURCHASE_ORDER
          )
        )
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_OMS_EXT_PURCHASE_ORDER),
            ' ',
            lkp_OMS_EXT_PURCHASE_ORDER
          )
        )
      )
      OR LTRIM(RTRIM(IFF(ISNULL(ORDER_TYPE), ' ', ORDER_TYPE))) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_OMS_ORDER_TYPE),
            ' ',
            lkp_OMS_ORDER_TYPE
          )
        )
      )
      OR LTRIM(
        RTRIM(IFF(ISNULL(DROPOFF_PICKUP), ' ', DROPOFF_PICKUP))
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_DROPOFF_PICKUP1),
            ' ',
            lkp_DROPOFF_PICKUP1
          )
        )
      )
      OR LTRIM(
        RTRIM(
          IFF(ISNULL(DELIVERY_OPTIONS), ' ', DELIVERY_OPTIONS)
        )
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_OMS_DELIVERY_OPTIONS_ID),
            ' ',
            lkp_OMS_DELIVERY_OPTIONS_ID
          )
        )
      )
      OR LTRIM(
        RTRIM(
          IFF(
            ISNULL(IS_CUSTOMER_PICKUP),
            ' ',
            IS_CUSTOMER_PICKUP
          )
        )
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_CUSTOMER_PICKUP_FLAG),
            ' ',
            lkp_CUSTOMER_PICKUP_FLAG
          )
        )
      )
      OR LTRIM(
        RTRIM(IFF(ISNULL(IS_BACK_ORDERED), ' ', IS_BACK_ORDERED))
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_BACK_ORDERED_FLAG),
            ' ',
            lkp_BACK_ORDERED_FLAG
          )
        )
      )
      OR LTRIM(
        RTRIM(
          IFF(
            ISNULL(O_FACILITY_ALIAS_ID),
            ' ',
            O_FACILITY_ALIAS_ID
          )
        )
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_OMS_O_FACILITY_ALIAS_ID),
            ' ',
            lkp_OMS_O_FACILITY_ALIAS_ID
          )
        )
      )
      OR LTRIM(
        RTRIM(
          IFF(
            ISNULL(D_FACILITY_ALIAS_ID),
            ' ',
            D_FACILITY_ALIAS_ID
          )
        )
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_OMS_D_FACILITY_ALIAS_ID),
            ' ',
            lkp_OMS_D_FACILITY_ALIAS_ID
          )
        )
      )
      OR LTRIM(
        RTRIM(
          IFF(
            ISNULL(BILL_FACILITY_ALIAS_ID),
            ' ',
            BILL_FACILITY_ALIAS_ID
          )
        )
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_OMS_BILL_FACILITY_ALIAS_ID),
            ' ',
            lkp_OMS_BILL_FACILITY_ALIAS_ID
          )
        )
      )
      OR LTRIM(RTRIM(IFF(ISNULL(ADDR_VALID), ' ', ADDR_VALID))) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_ADDR_VALID_FLAG),
            ' ',
            lkp_ADDR_VALID_FLAG
          )
        )
      )
      OR LTRIM(
        RTRIM(
          IFF(ISNULL(MV_CURRENCY_CODE), ' ', MV_CURRENCY_CODE)
        )
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_MV_CURRENCY_CD),
            ' ',
            lkp_MV_CURRENCY_CD
          )
        )
      )
      OR LTRIM(
        RTRIM(IFF(ISNULL(CREATED_SOURCE), ' ', CREATED_SOURCE))
      ) != LTRIM(
        RTRIM(
          IFF(
            ISNULL(lkp_OMS_CREATED_SOURCE),
            ' ',
            lkp_OMS_CREATED_SOURCE
          )
        )
      ),
      'UPDATE',
      'REJECT'
    )
  ) AS o_UPDATE_FLAG,
  now() AS o_UPDATE_TSTMP,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS o_LOAD_TSTMP,
  IFF (
    DO_STATUS = 190
    AND TO_INTEGER(DELIVERY_OPTIONS) = 1,
    0,
    NULL
  ) AS o_ABANDONED_FLAG,
  IFF (
    DO_STATUS = 190
    AND TO_INTEGER(DELIVERY_OPTIONS) = 1,
    0,
    NULL
  ) AS o_ABANDONED_OVERDUE_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_ORDERS_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("EXP_FLAG_5")

# COMMAND ----------
# DBTITLE 1, FIL_FLAG_6


query_6 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  TC_ORDER_ID AS TC_ORDER_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  CREATION_TYPE AS CREATION_TYPE,
  EXT_PURCHASE_ORDER AS EXT_PURCHASE_ORDER,
  O_FACILITY_ALIAS_ID AS O_FACILITY_ALIAS_ID,
  O_FACILITY_ID AS O_FACILITY_ID,
  D_FACILITY_ALIAS_ID AS D_FACILITY_ALIAS_ID,
  D_FACILITY_ID AS D_FACILITY_ID,
  BILL_FACILITY_ALIAS_ID AS BILL_FACILITY_ALIAS_ID,
  BILL_FACILITY_ID AS BILL_FACILITY_ID,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  ORDER_DATE_DTTM AS ORDER_DATE_DTTM,
  ORDER_RECON_DTTM AS ORDER_RECON_DTTM,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_SPLIT AS HAS_SPLIT,
  IS_CANCELLED AS IS_CANCELLED,
  IS_PARTIALLY_PLANNED AS IS_PARTIALLY_PLANNED,
  ACTUAL_COST AS ACTUAL_COST,
  BASELINE_COST AS BASELINE_COST,
  BILLING_METHOD AS BILLING_METHOD,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  MONETARY_VALUE AS MONETARY_VALUE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  SHIPMENT_ID AS SHIPMENT_ID,
  ORDER_STATUS AS ORDER_STATUS,
  ADDR_VALID AS ADDR_VALID,
  DO_STATUS AS DO_STATUS,
  DO_TYPE AS DO_TYPE,
  IS_BACK_ORDERED AS IS_BACK_ORDERED,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  D_DOCK_DOOR_ID AS D_DOCK_DOOR_ID,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  CUSTOMER_ID AS CUSTOMER_ID,
  SCHED_PICKUP_DTTM AS SCHED_PICKUP_DTTM,
  SCHED_DELIVERY_DTTM AS SCHED_DELIVERY_DTTM,
  PURCHASE_ORDER_ID AS PURCHASE_ORDER_ID,
  IS_CUSTOMER_PICKUP AS IS_CUSTOMER_PICKUP,
  PRTL_SHIP_CONF_FLAG AS PRTL_SHIP_CONF_FLAG,
  PRTL_SHIP_CONF_STATUS AS PRTL_SHIP_CONF_STATUS,
  ORDER_TYPE AS ORDER_TYPE,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  REF_NUM1 AS REF_NUM1,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  o_UPDATE_FLAG AS o_UPDATE_FLAG,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  o_ABANDONED_FLAG AS o_ABANDONED_FLAG,
  o_ABANDONED_OVERDUE_FLAG AS o_ABANDONED_OVERDUE_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_FLAG_5
WHERE
  IN(o_UPDATE_FLAG, 'INSERT', 'UPDATE')"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("FIL_FLAG_6")

# COMMAND ----------
# DBTITLE 1, UPD_INSERT_UPDATE_7


query_7 = f"""SELECT
  ORDER_ID AS ORDER_ID,
  TC_ORDER_ID AS TC_ORDER_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  CREATION_TYPE AS CREATION_TYPE,
  EXT_PURCHASE_ORDER AS EXT_PURCHASE_ORDER,
  O_FACILITY_ALIAS_ID AS O_FACILITY_ALIAS_ID,
  O_FACILITY_ID AS O_FACILITY_ID,
  D_FACILITY_ALIAS_ID AS D_FACILITY_ALIAS_ID,
  D_FACILITY_ID AS D_FACILITY_ID,
  BILL_FACILITY_ALIAS_ID AS BILL_FACILITY_ALIAS_ID,
  BILL_FACILITY_ID AS BILL_FACILITY_ID,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  ORDER_DATE_DTTM AS ORDER_DATE_DTTM,
  ORDER_RECON_DTTM AS ORDER_RECON_DTTM,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_SPLIT AS HAS_SPLIT,
  IS_CANCELLED AS IS_CANCELLED,
  IS_PARTIALLY_PLANNED AS IS_PARTIALLY_PLANNED,
  ACTUAL_COST AS ACTUAL_COST,
  BASELINE_COST AS BASELINE_COST,
  BILLING_METHOD AS BILLING_METHOD,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  MONETARY_VALUE AS MONETARY_VALUE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  SHIPMENT_ID AS SHIPMENT_ID,
  ORDER_STATUS AS ORDER_STATUS,
  ADDR_VALID AS ADDR_VALID,
  DO_STATUS AS DO_STATUS,
  DO_TYPE AS DO_TYPE,
  IS_BACK_ORDERED AS IS_BACK_ORDERED,
  ACTUAL_SHIPPED_DTTM AS ACTUAL_SHIPPED_DTTM,
  D_DOCK_DOOR_ID AS D_DOCK_DOOR_ID,
  PURCHASE_ORDER_NUMBER AS PURCHASE_ORDER_NUMBER,
  CUSTOMER_ID AS CUSTOMER_ID,
  SCHED_PICKUP_DTTM AS SCHED_PICKUP_DTTM,
  SCHED_DELIVERY_DTTM AS SCHED_DELIVERY_DTTM,
  PURCHASE_ORDER_ID AS PURCHASE_ORDER_ID,
  IS_CUSTOMER_PICKUP AS IS_CUSTOMER_PICKUP,
  PRTL_SHIP_CONF_FLAG AS PRTL_SHIP_CONF_FLAG,
  PRTL_SHIP_CONF_STATUS AS PRTL_SHIP_CONF_STATUS,
  ORDER_TYPE AS ORDER_TYPE,
  DELIVERY_OPTIONS AS DELIVERY_OPTIONS,
  REF_NUM1 AS REF_NUM1,
  TOTAL_NBR_OF_UNITS AS TOTAL_NBR_OF_UNITS,
  o_UPDATE_FLAG AS o_UPDATE_FLAG,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  o_ABANDONED_FLAG AS o_ABANDONED_FLAG,
  o_ABANDONED_OVERDUE_FLAG AS o_ABANDONED_OVERDUE_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  IFF(o_UPDATE_FLAG = 'INSERT', 'DD_INSERT', 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  FIL_FLAG_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("UPD_INSERT_UPDATE_7")

# COMMAND ----------
# DBTITLE 1, OMS_ORDERS


spark.sql("""MERGE INTO OMS_ORDERS AS TARGET
USING
  UPD_INSERT_UPDATE_7 AS SOURCE ON TARGET.OMS_ORDER_ID = SOURCE.ORDER_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_ORDER_ID = SOURCE.ORDER_ID,
  TARGET.OMS_TC_COMPANY_ID = SOURCE.TC_COMPANY_ID,
  TARGET.OMS_TC_ORDER_ID = SOURCE.TC_ORDER_ID,
  TARGET.OMS_PURCHASE_ORDER_ID = SOURCE.PURCHASE_ORDER_ID,
  TARGET.OMS_PURCHASE_ORDER_NBR = SOURCE.PURCHASE_ORDER_NUMBER,
  TARGET.OMS_EXT_PURCHASE_ORDER = SOURCE.EXT_PURCHASE_ORDER,
  TARGET.OMS_ORDER_TYPE = SOURCE.ORDER_TYPE,
  TARGET.OMS_ORDER_STATUS_ID = SOURCE.ORDER_STATUS,
  TARGET.OMS_DO_TYPE_ID = SOURCE.DO_TYPE,
  TARGET.OMS_DO_STATUS_ID = SOURCE.DO_STATUS,
  TARGET.OMS_SHIPMENT_ID = SOURCE.SHIPMENT_ID,
  TARGET.OMS_CREATION_TYPE_ID = SOURCE.CREATION_TYPE,
  TARGET.OMS_BILLING_METHOD_ID = SOURCE.BILLING_METHOD,
  TARGET.DROPOFF_PICKUP = SOURCE.DROPOFF_PICKUP,
  TARGET.OMS_DELIVERY_OPTIONS_ID = SOURCE.DELIVERY_OPTIONS,
  TARGET.CUSTOMER_PICKUP_FLAG = SOURCE.IS_CUSTOMER_PICKUP,
  TARGET.PARTIALLY_PLANNED_FLAG = SOURCE.IS_PARTIALLY_PLANNED,
  TARGET.PARTIAL_SHIP_CONFIRMATION_FLAG = SOURCE.PRTL_SHIP_CONF_FLAG,
  TARGET.PARTIAL_SHIP_CONFIRMATION_STATUS = SOURCE.PRTL_SHIP_CONF_STATUS,
  TARGET.HAS_ALERTS_FLAG = SOURCE.HAS_ALERTS,
  TARGET.HAS_SPLIT_FLAG = SOURCE.HAS_SPLIT,
  TARGET.CANCELLED_FLAG = SOURCE.IS_CANCELLED,
  TARGET.BACK_ORDERED_FLAG = SOURCE.IS_BACK_ORDERED,
  TARGET.OMS_INBOUND_REGION_ID = SOURCE.INBOUND_REGION_ID,
  TARGET.OMS_OUTBOUND_REGION_ID = SOURCE.OUTBOUND_REGION_ID,
  TARGET.OMS_O_FACILITY_ALIAS_ID = SOURCE.O_FACILITY_ALIAS_ID,
  TARGET.OMS_O_FACILITY_ID = SOURCE.O_FACILITY_ID,
  TARGET.OMS_D_FACILITY_ALIAS_ID = SOURCE.D_FACILITY_ALIAS_ID,
  TARGET.OMS_D_FACILITY_ID = SOURCE.D_FACILITY_ID,
  TARGET.OMS_BILL_FACILITY_ALIAS_ID = SOURCE.BILL_FACILITY_ALIAS_ID,
  TARGET.OMS_BILL_FACILITY_ID = SOURCE.BILL_FACILITY_ID,
  TARGET.OMS_CUSTOMER_ID = SOURCE.CUSTOMER_ID,
  TARGET.ADDR_VALID_FLAG = SOURCE.ADDR_VALID,
  TARGET.OMS_PICKUP_START_TSTMP = SOURCE.PICKUP_START_DTTM,
  TARGET.OMS_PICKUP_END_TSTMP = SOURCE.PICKUP_END_DTTM,
  TARGET.OMS_PICKUP_TZ_ID = SOURCE.PICKUP_TZ,
  TARGET.OMS_DELIVERY_TZ_ID = SOURCE.DELIVERY_TZ,
  TARGET.OMS_DELIVERY_START_TSTMP = SOURCE.DELIVERY_START_DTTM,
  TARGET.OMS_DELIVERY_END_TSTMP = SOURCE.DELIVERY_END_DTTM,
  TARGET.OMS_ORDER_DT_TSTMP = SOURCE.ORDER_DATE_DTTM,
  TARGET.OMS_ORDER_RECON_TSTMP = SOURCE.ORDER_RECON_DTTM,
  TARGET.OMS_SCHED_PICKUP_TSTMP = SOURCE.SCHED_PICKUP_DTTM,
  TARGET.OMS_SCHED_DELIVERY_TSTMP = SOURCE.SCHED_DELIVERY_DTTM,
  TARGET.OMS_ACTUAL_SHIPPED_TSTMP = SOURCE.ACTUAL_SHIPPED_DTTM,
  TARGET.TOTAL_NBR_OF_UNITS = SOURCE.TOTAL_NBR_OF_UNITS,
  TARGET.BASELINE_COST = SOURCE.BASELINE_COST,
  TARGET.ACTUAL_COST = SOURCE.ACTUAL_COST,
  TARGET.MONETARY_VALUE = SOURCE.MONETARY_VALUE,
  TARGET.MV_CURRENCY_CD = SOURCE.MV_CURRENCY_CODE,
  TARGET.REF_NUM1 = SOURCE.REF_NUM1,
  TARGET.OMS_CREATED_SOURCE_TYPE_ID = SOURCE.CREATED_SOURCE_TYPE,
  TARGET.OMS_CREATED_SOURCE = SOURCE.CREATED_SOURCE,
  TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM,
  TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM,
  TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP,
  TARGET.ABANDONED_FLAG = SOURCE.o_ABANDONED_FLAG,
  TARGET.ABANDONED_OVERDUE_FLAG = SOURCE.o_ABANDONED_OVERDUE_FLAG
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_TC_COMPANY_ID = SOURCE.TC_COMPANY_ID
  AND TARGET.OMS_TC_ORDER_ID = SOURCE.TC_ORDER_ID
  AND TARGET.OMS_PURCHASE_ORDER_ID = SOURCE.PURCHASE_ORDER_ID
  AND TARGET.OMS_PURCHASE_ORDER_NBR = SOURCE.PURCHASE_ORDER_NUMBER
  AND TARGET.OMS_EXT_PURCHASE_ORDER = SOURCE.EXT_PURCHASE_ORDER
  AND TARGET.OMS_ORDER_TYPE = SOURCE.ORDER_TYPE
  AND TARGET.OMS_ORDER_STATUS_ID = SOURCE.ORDER_STATUS
  AND TARGET.OMS_DO_TYPE_ID = SOURCE.DO_TYPE
  AND TARGET.OMS_DO_STATUS_ID = SOURCE.DO_STATUS
  AND TARGET.OMS_SHIPMENT_ID = SOURCE.SHIPMENT_ID
  AND TARGET.OMS_CREATION_TYPE_ID = SOURCE.CREATION_TYPE
  AND TARGET.OMS_BILLING_METHOD_ID = SOURCE.BILLING_METHOD
  AND TARGET.DROPOFF_PICKUP = SOURCE.DROPOFF_PICKUP
  AND TARGET.OMS_DELIVERY_OPTIONS_ID = SOURCE.DELIVERY_OPTIONS
  AND TARGET.CUSTOMER_PICKUP_FLAG = SOURCE.IS_CUSTOMER_PICKUP
  AND TARGET.PARTIALLY_PLANNED_FLAG = SOURCE.IS_PARTIALLY_PLANNED
  AND TARGET.PARTIAL_SHIP_CONFIRMATION_FLAG = SOURCE.PRTL_SHIP_CONF_FLAG
  AND TARGET.PARTIAL_SHIP_CONFIRMATION_STATUS = SOURCE.PRTL_SHIP_CONF_STATUS
  AND TARGET.HAS_ALERTS_FLAG = SOURCE.HAS_ALERTS
  AND TARGET.HAS_SPLIT_FLAG = SOURCE.HAS_SPLIT
  AND TARGET.CANCELLED_FLAG = SOURCE.IS_CANCELLED
  AND TARGET.BACK_ORDERED_FLAG = SOURCE.IS_BACK_ORDERED
  AND TARGET.OMS_INBOUND_REGION_ID = SOURCE.INBOUND_REGION_ID
  AND TARGET.OMS_OUTBOUND_REGION_ID = SOURCE.OUTBOUND_REGION_ID
  AND TARGET.OMS_O_FACILITY_ALIAS_ID = SOURCE.O_FACILITY_ALIAS_ID
  AND TARGET.OMS_O_FACILITY_ID = SOURCE.O_FACILITY_ID
  AND TARGET.OMS_D_FACILITY_ALIAS_ID = SOURCE.D_FACILITY_ALIAS_ID
  AND TARGET.OMS_D_FACILITY_ID = SOURCE.D_FACILITY_ID
  AND TARGET.OMS_BILL_FACILITY_ALIAS_ID = SOURCE.BILL_FACILITY_ALIAS_ID
  AND TARGET.OMS_BILL_FACILITY_ID = SOURCE.BILL_FACILITY_ID
  AND TARGET.OMS_CUSTOMER_ID = SOURCE.CUSTOMER_ID
  AND TARGET.ADDR_VALID_FLAG = SOURCE.ADDR_VALID
  AND TARGET.OMS_PICKUP_START_TSTMP = SOURCE.PICKUP_START_DTTM
  AND TARGET.OMS_PICKUP_END_TSTMP = SOURCE.PICKUP_END_DTTM
  AND TARGET.OMS_PICKUP_TZ_ID = SOURCE.PICKUP_TZ
  AND TARGET.OMS_DELIVERY_TZ_ID = SOURCE.DELIVERY_TZ
  AND TARGET.OMS_DELIVERY_START_TSTMP = SOURCE.DELIVERY_START_DTTM
  AND TARGET.OMS_DELIVERY_END_TSTMP = SOURCE.DELIVERY_END_DTTM
  AND TARGET.OMS_ORDER_DT_TSTMP = SOURCE.ORDER_DATE_DTTM
  AND TARGET.OMS_ORDER_RECON_TSTMP = SOURCE.ORDER_RECON_DTTM
  AND TARGET.OMS_SCHED_PICKUP_TSTMP = SOURCE.SCHED_PICKUP_DTTM
  AND TARGET.OMS_SCHED_DELIVERY_TSTMP = SOURCE.SCHED_DELIVERY_DTTM
  AND TARGET.OMS_ACTUAL_SHIPPED_TSTMP = SOURCE.ACTUAL_SHIPPED_DTTM
  AND TARGET.TOTAL_NBR_OF_UNITS = SOURCE.TOTAL_NBR_OF_UNITS
  AND TARGET.BASELINE_COST = SOURCE.BASELINE_COST
  AND TARGET.ACTUAL_COST = SOURCE.ACTUAL_COST
  AND TARGET.MONETARY_VALUE = SOURCE.MONETARY_VALUE
  AND TARGET.MV_CURRENCY_CD = SOURCE.MV_CURRENCY_CODE
  AND TARGET.REF_NUM1 = SOURCE.REF_NUM1
  AND TARGET.OMS_CREATED_SOURCE_TYPE_ID = SOURCE.CREATED_SOURCE_TYPE
  AND TARGET.OMS_CREATED_SOURCE = SOURCE.CREATED_SOURCE
  AND TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM
  AND TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM
  AND TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP
  AND TARGET.ABANDONED_FLAG = SOURCE.o_ABANDONED_FLAG
  AND TARGET.ABANDONED_OVERDUE_FLAG = SOURCE.o_ABANDONED_OVERDUE_FLAG THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_ORDER_ID,
    TARGET.OMS_TC_COMPANY_ID,
    TARGET.OMS_TC_ORDER_ID,
    TARGET.OMS_PURCHASE_ORDER_ID,
    TARGET.OMS_PURCHASE_ORDER_NBR,
    TARGET.OMS_EXT_PURCHASE_ORDER,
    TARGET.OMS_ORDER_TYPE,
    TARGET.OMS_ORDER_STATUS_ID,
    TARGET.OMS_DO_TYPE_ID,
    TARGET.OMS_DO_STATUS_ID,
    TARGET.OMS_SHIPMENT_ID,
    TARGET.OMS_CREATION_TYPE_ID,
    TARGET.OMS_BILLING_METHOD_ID,
    TARGET.DROPOFF_PICKUP,
    TARGET.OMS_DELIVERY_OPTIONS_ID,
    TARGET.CUSTOMER_PICKUP_FLAG,
    TARGET.PARTIALLY_PLANNED_FLAG,
    TARGET.PARTIAL_SHIP_CONFIRMATION_FLAG,
    TARGET.PARTIAL_SHIP_CONFIRMATION_STATUS,
    TARGET.HAS_ALERTS_FLAG,
    TARGET.HAS_SPLIT_FLAG,
    TARGET.CANCELLED_FLAG,
    TARGET.BACK_ORDERED_FLAG,
    TARGET.OMS_INBOUND_REGION_ID,
    TARGET.OMS_OUTBOUND_REGION_ID,
    TARGET.OMS_O_FACILITY_ALIAS_ID,
    TARGET.OMS_O_FACILITY_ID,
    TARGET.OMS_D_FACILITY_ALIAS_ID,
    TARGET.OMS_D_FACILITY_ID,
    TARGET.OMS_BILL_FACILITY_ALIAS_ID,
    TARGET.OMS_BILL_FACILITY_ID,
    TARGET.OMS_CUSTOMER_ID,
    TARGET.ADDR_VALID_FLAG,
    TARGET.OMS_PICKUP_START_TSTMP,
    TARGET.OMS_PICKUP_END_TSTMP,
    TARGET.OMS_PICKUP_TZ_ID,
    TARGET.OMS_DELIVERY_TZ_ID,
    TARGET.OMS_DELIVERY_START_TSTMP,
    TARGET.OMS_DELIVERY_END_TSTMP,
    TARGET.OMS_ORDER_DT_TSTMP,
    TARGET.OMS_ORDER_RECON_TSTMP,
    TARGET.OMS_SCHED_PICKUP_TSTMP,
    TARGET.OMS_SCHED_DELIVERY_TSTMP,
    TARGET.OMS_ACTUAL_SHIPPED_TSTMP,
    TARGET.TOTAL_NBR_OF_UNITS,
    TARGET.BASELINE_COST,
    TARGET.ACTUAL_COST,
    TARGET.MONETARY_VALUE,
    TARGET.MV_CURRENCY_CD,
    TARGET.REF_NUM1,
    TARGET.OMS_CREATED_SOURCE_TYPE_ID,
    TARGET.OMS_CREATED_SOURCE,
    TARGET.OMS_CREATED_TSTMP,
    TARGET.OMS_LAST_UPDATED_TSTMP,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP,
    TARGET.ABANDONED_FLAG,
    TARGET.ABANDONED_OVERDUE_FLAG
  )
VALUES
  (
    SOURCE.ORDER_ID,
    SOURCE.TC_COMPANY_ID,
    SOURCE.TC_ORDER_ID,
    SOURCE.PURCHASE_ORDER_ID,
    SOURCE.PURCHASE_ORDER_NUMBER,
    SOURCE.EXT_PURCHASE_ORDER,
    SOURCE.ORDER_TYPE,
    SOURCE.ORDER_STATUS,
    SOURCE.DO_TYPE,
    SOURCE.DO_STATUS,
    SOURCE.SHIPMENT_ID,
    SOURCE.CREATION_TYPE,
    SOURCE.BILLING_METHOD,
    SOURCE.DROPOFF_PICKUP,
    SOURCE.DELIVERY_OPTIONS,
    SOURCE.IS_CUSTOMER_PICKUP,
    SOURCE.IS_PARTIALLY_PLANNED,
    SOURCE.PRTL_SHIP_CONF_FLAG,
    SOURCE.PRTL_SHIP_CONF_STATUS,
    SOURCE.HAS_ALERTS,
    SOURCE.HAS_SPLIT,
    SOURCE.IS_CANCELLED,
    SOURCE.IS_BACK_ORDERED,
    SOURCE.INBOUND_REGION_ID,
    SOURCE.OUTBOUND_REGION_ID,
    SOURCE.O_FACILITY_ALIAS_ID,
    SOURCE.O_FACILITY_ID,
    SOURCE.D_FACILITY_ALIAS_ID,
    SOURCE.D_FACILITY_ID,
    SOURCE.BILL_FACILITY_ALIAS_ID,
    SOURCE.BILL_FACILITY_ID,
    SOURCE.CUSTOMER_ID,
    SOURCE.ADDR_VALID,
    SOURCE.PICKUP_START_DTTM,
    SOURCE.PICKUP_END_DTTM,
    SOURCE.PICKUP_TZ,
    SOURCE.DELIVERY_TZ,
    SOURCE.DELIVERY_START_DTTM,
    SOURCE.DELIVERY_END_DTTM,
    SOURCE.ORDER_DATE_DTTM,
    SOURCE.ORDER_RECON_DTTM,
    SOURCE.SCHED_PICKUP_DTTM,
    SOURCE.SCHED_DELIVERY_DTTM,
    SOURCE.ACTUAL_SHIPPED_DTTM,
    SOURCE.TOTAL_NBR_OF_UNITS,
    SOURCE.BASELINE_COST,
    SOURCE.ACTUAL_COST,
    SOURCE.MONETARY_VALUE,
    SOURCE.MV_CURRENCY_CODE,
    SOURCE.REF_NUM1,
    SOURCE.CREATED_SOURCE_TYPE,
    SOURCE.CREATED_SOURCE,
    SOURCE.CREATED_DTTM,
    SOURCE.LAST_UPDATED_DTTM,
    SOURCE.o_UPDATE_TSTMP,
    SOURCE.o_LOAD_TSTMP,
    SOURCE.o_ABANDONED_FLAG,
    SOURCE.o_ABANDONED_OVERDUE_FLAG
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Orders")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_Orders", mainWorkflowId, parentName)
