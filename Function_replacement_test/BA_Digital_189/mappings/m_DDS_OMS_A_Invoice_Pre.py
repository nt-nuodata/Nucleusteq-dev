# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Invoice_Pre")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_A_Invoice_Pre", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0


query_0 = f"""SELECT
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID
FROM
  OMS_PURCH_ORDER_LOAD_CTRL"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_A_INVOICE_1


query_1 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  ENTITY_TYPE AS ENTITY_TYPE,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_TYPE AS INVOICE_TYPE,
  CURRENCY AS CURRENCY,
  HEADER_TAX AS HEADER_TAX,
  HEADER_CHARGE AS HEADER_CHARGE,
  HEADER_DISCOUNT AS HEADER_DISCOUNT,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  STATUS AS STATUS,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  RETURN_ORDER_ID AS RETURN_ORDER_ID,
  RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  IS_PUBLISHED AS IS_PUBLISHED,
  C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  FACILITY_ID AS FACILITY_ID,
  PARTIALLY_SETTLED AS PARTIALLY_SETTLED
FROM
  A_INVOICE"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("Shortcut_to_A_INVOICE_1")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_A_INVOICE_2


query_2 = f"""SELECT
  Shortcut_to_A_INVOICE_1.INVOICE_ID AS INVOICE_ID,
  Shortcut_to_A_INVOICE_1.INVOICE_NUMBER AS INVOICE_NUMBER,
  Shortcut_to_A_INVOICE_1.TC_COMPANY_ID AS TC_COMPANY_ID,
  Shortcut_to_A_INVOICE_1.INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  Shortcut_to_A_INVOICE_1.ENTITY_TYPE AS ENTITY_TYPE,
  Shortcut_to_A_INVOICE_1.ENTITY_ID AS ENTITY_ID,
  Shortcut_to_A_INVOICE_1.INVOICE_TYPE AS INVOICE_TYPE,
  Shortcut_to_A_INVOICE_1.CURRENCY AS CURRENCY,
  Shortcut_to_A_INVOICE_1.HEADER_TAX AS HEADER_TAX,
  Shortcut_to_A_INVOICE_1.HEADER_CHARGE AS HEADER_CHARGE,
  Shortcut_to_A_INVOICE_1.HEADER_DISCOUNT AS HEADER_DISCOUNT,
  Shortcut_to_A_INVOICE_1.INVOICE_AMOUNT AS INVOICE_AMOUNT,
  Shortcut_to_A_INVOICE_1.STATUS AS STATUS,
  Shortcut_to_A_INVOICE_1.SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  Shortcut_to_A_INVOICE_1.INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  Shortcut_to_A_INVOICE_1.COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  Shortcut_to_A_INVOICE_1.ENTITY_NUMBER AS ENTITY_NUMBER,
  Shortcut_to_A_INVOICE_1.CREATED_SOURCE AS CREATED_SOURCE,
  Shortcut_to_A_INVOICE_1.CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  Shortcut_to_A_INVOICE_1.LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  Shortcut_to_A_INVOICE_1.LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  Shortcut_to_A_INVOICE_1.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  Shortcut_to_A_INVOICE_1.RETURN_ORDER_ID AS RETURN_ORDER_ID,
  Shortcut_to_A_INVOICE_1.RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  Shortcut_to_A_INVOICE_1.IS_PUBLISHED AS IS_PUBLISHED,
  Shortcut_to_A_INVOICE_1.C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  Shortcut_to_A_INVOICE_1.FACILITY_ID AS FACILITY_ID,
  Shortcut_to_A_INVOICE_1.PARTIALLY_SETTLED AS PARTIALLY_SETTLED,
  Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0.PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0,
  Shortcut_to_A_INVOICE_1
WHERE
  Shortcut_to_A_INVOICE_1.ENTITY_ID = Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0.PURCHASE_ORDERS_ID"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("SQ_Shortcut_to_A_INVOICE_2")

# COMMAND ----------
# DBTITLE 1, EXP_LOAD_TSTMP_3


query_3 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  ENTITY_TYPE AS ENTITY_TYPE,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_TYPE AS INVOICE_TYPE,
  CURRENCY AS CURRENCY,
  HEADER_TAX AS HEADER_TAX,
  HEADER_CHARGE AS HEADER_CHARGE,
  HEADER_DISCOUNT AS HEADER_DISCOUNT,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  STATUS AS STATUS,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  RETURN_ORDER_ID AS RETURN_ORDER_ID,
  RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  IS_PUBLISHED AS IS_PUBLISHED,
  C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  FACILITY_ID AS FACILITY_ID,
  PARTIALLY_SETTLED AS PARTIALLY_SETTLED,
  now() AS o_LOAD_TSTMP,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_A_INVOICE_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("EXP_LOAD_TSTMP_3")

# COMMAND ----------
# DBTITLE 1, OMS_A_INVOICE_PRE


spark.sql("""INSERT INTO
  OMS_A_INVOICE_PRE
SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  ENTITY_TYPE AS ENTITY_TYPE,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_TYPE AS INVOICE_TYPE,
  CURRENCY AS CURRENCY,
  HEADER_TAX AS HEADER_TAX,
  HEADER_CHARGE AS HEADER_CHARGE,
  HEADER_DISCOUNT AS HEADER_DISCOUNT,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  STATUS AS STATUS,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  RETURN_ORDER_ID AS RETURN_ORDER_ID,
  RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  IS_PUBLISHED AS IS_PUBLISHED,
  C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  FACILITY_ID AS FACILITY_ID,
  PARTIALLY_SETTLED AS PARTIALLY_SETTLED,
  o_LOAD_TSTMP AS LOAD_TSTMP
FROM
  EXP_LOAD_TSTMP_3""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Invoice_Pre")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_A_Invoice_Pre", mainWorkflowId, parentName)
