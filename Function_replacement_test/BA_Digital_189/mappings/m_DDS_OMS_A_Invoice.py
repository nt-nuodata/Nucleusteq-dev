# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Invoice")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_A_Invoice", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_INVOICE_PRE_0


query_0 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  ENTITY_TYPE AS ENTITY_TYPE,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_TYPE AS INVOICE_TYPE,
  CURRENCY AS CURRENCY,
  HEADER_TAX AS HEADER_TAX,
  HEADER_CHARGE AS HEADER_CHARGE,
  HEADER_DISCOUNT AS HEADER_DISCOUNT,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  STATUS AS STATUS,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  RETURN_ORDER_ID AS RETURN_ORDER_ID,
  RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  IS_PUBLISHED AS IS_PUBLISHED,
  C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  FACILITY_ID AS FACILITY_ID,
  PARTIALLY_SETTLED AS PARTIALLY_SETTLED,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_INVOICE_PRE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_A_INVOICE_PRE_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_A_INVOICE_PRE_1


query_1 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  ENTITY_TYPE AS ENTITY_TYPE,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_TYPE AS INVOICE_TYPE,
  CURRENCY AS CURRENCY,
  HEADER_TAX AS HEADER_TAX,
  HEADER_CHARGE AS HEADER_CHARGE,
  HEADER_DISCOUNT AS HEADER_DISCOUNT,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  STATUS AS STATUS,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  RETURN_ORDER_ID AS RETURN_ORDER_ID,
  RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  IS_PUBLISHED AS IS_PUBLISHED,
  C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  FACILITY_ID AS FACILITY_ID,
  PARTIALLY_SETTLED AS PARTIALLY_SETTLED,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_INVOICE_PRE_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_A_INVOICE_PRE_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_INVOICE_2


query_2 = f"""SELECT
  OMS_INVOICE_ID AS OMS_INVOICE_ID,
  OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_ENTITY_TYPE AS OMS_ENTITY_TYPE,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_NBR AS OMS_ENTITY_NBR,
  OMS_INVOICE_TYPE AS OMS_INVOICE_TYPE,
  OMS_INVOICE_CREATION_TSTMP AS OMS_INVOICE_CREATION_TSTMP,
  OMS_INVOICE_STATUS_ID AS OMS_INVOICE_STATUS_ID,
  PARTIALLY_SETTLED_FLAG AS PARTIALLY_SETTLED_FLAG,
  COLLECTED_EXTERNALLY_FLAG AS COLLECTED_EXTERNALLY_FLAG,
  OMS_FACILITY_ID AS OMS_FACILITY_ID,
  OMS_SHIPMENT_NBR AS OMS_SHIPMENT_NBR,
  PUBLISHED_FLAG AS PUBLISHED_FLAG,
  C_INITIAL_PUBLISHED_FLAG AS C_INITIAL_PUBLISHED_FLAG,
  OMS_RETURN_ORDER_ID AS OMS_RETURN_ORDER_ID,
  OMS_RETURN_ORDER_NBR AS OMS_RETURN_ORDER_NBR,
  CURRENCY_CD AS CURRENCY_CD,
  HEADER_TAX_AMT AS HEADER_TAX_AMT,
  HEADER_CHARGE_AMT AS HEADER_CHARGE_AMT,
  HEADER_DISCOUNT_AMT AS HEADER_DISCOUNT_AMT,
  INVOICE_AMT AS INVOICE_AMT,
  INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_LAST_UPDATED_SOURCE AS OMS_LAST_UPDATED_SOURCE,
  OMS_LAST_UPDATED_SOURCE_TYPE_ID AS OMS_LAST_UPDATED_SOURCE_TYPE_ID,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_INVOICE"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_A_INVOICE_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_A_INVOICE_3


query_3 = f"""SELECT
  OMS_INVOICE_ID AS OMS_INVOICE_ID,
  OMS_INVOICE_NBR AS OMS_INVOICE_NBR,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_ENTITY_TYPE AS OMS_ENTITY_TYPE,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_NBR AS OMS_ENTITY_NBR,
  OMS_INVOICE_TYPE AS OMS_INVOICE_TYPE,
  OMS_INVOICE_CREATION_TSTMP AS OMS_INVOICE_CREATION_TSTMP,
  OMS_INVOICE_STATUS_ID AS OMS_INVOICE_STATUS_ID,
  PARTIALLY_SETTLED_FLAG AS PARTIALLY_SETTLED_FLAG,
  COLLECTED_EXTERNALLY_FLAG AS COLLECTED_EXTERNALLY_FLAG,
  OMS_FACILITY_ID AS OMS_FACILITY_ID,
  OMS_SHIPMENT_NBR AS OMS_SHIPMENT_NBR,
  PUBLISHED_FLAG AS PUBLISHED_FLAG,
  C_INITIAL_PUBLISHED_FLAG AS C_INITIAL_PUBLISHED_FLAG,
  OMS_RETURN_ORDER_ID AS OMS_RETURN_ORDER_ID,
  OMS_RETURN_ORDER_NBR AS OMS_RETURN_ORDER_NBR,
  CURRENCY_CD AS CURRENCY_CD,
  HEADER_TAX_AMT AS HEADER_TAX_AMT,
  HEADER_CHARGE_AMT AS HEADER_CHARGE_AMT,
  HEADER_DISCOUNT_AMT AS HEADER_DISCOUNT_AMT,
  INVOICE_AMT AS INVOICE_AMT,
  INVOICE_AMT_PROCESSED AS INVOICE_AMT_PROCESSED,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_LAST_UPDATED_SOURCE AS OMS_LAST_UPDATED_SOURCE,
  OMS_LAST_UPDATED_SOURCE_TYPE_ID AS OMS_LAST_UPDATED_SOURCE_TYPE_ID,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_INVOICE_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_A_INVOICE_3")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_A_INVOICE_4


query_4 = f"""SELECT
  DETAIL.INVOICE_ID AS INVOICE_ID,
  DETAIL.INVOICE_NUMBER AS INVOICE_NUMBER,
  DETAIL.TC_COMPANY_ID AS TC_COMPANY_ID,
  DETAIL.INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  DETAIL.ENTITY_TYPE AS ENTITY_TYPE,
  DETAIL.ENTITY_ID AS ENTITY_ID,
  DETAIL.INVOICE_TYPE AS INVOICE_TYPE,
  DETAIL.CURRENCY AS CURRENCY,
  DETAIL.HEADER_TAX AS HEADER_TAX,
  DETAIL.HEADER_CHARGE AS HEADER_CHARGE,
  DETAIL.HEADER_DISCOUNT AS HEADER_DISCOUNT,
  DETAIL.INVOICE_AMOUNT AS INVOICE_AMOUNT,
  DETAIL.STATUS AS STATUS,
  DETAIL.SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  DETAIL.INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  DETAIL.COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  DETAIL.ENTITY_NUMBER AS ENTITY_NUMBER,
  DETAIL.CREATED_SOURCE AS CREATED_SOURCE,
  DETAIL.CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  DETAIL.LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  DETAIL.LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.RETURN_ORDER_ID AS RETURN_ORDER_ID,
  DETAIL.RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  DETAIL.IS_PUBLISHED AS IS_PUBLISHED,
  DETAIL.C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  DETAIL.FACILITY_ID AS FACILITY_ID,
  DETAIL.PARTIALLY_SETTLED AS PARTIALLY_SETTLED,
  MASTER.OMS_INVOICE_ID AS lkp_OMS_INVOICE_ID,
  MASTER.OMS_INVOICE_NBR AS lkp_OMS_INVOICE_NBR,
  MASTER.OMS_TC_COMPANY_ID AS lkp_OMS_TC_COMPANY_ID,
  MASTER.OMS_ENTITY_TYPE AS lkp_OMS_ENTITY_TYPE,
  MASTER.OMS_ENTITY_ID AS lkp_OMS_ENTITY_ID,
  MASTER.OMS_ENTITY_NBR AS lkp_OMS_ENTITY_NBR,
  MASTER.OMS_INVOICE_TYPE AS lkp_OMS_INVOICE_TYPE,
  MASTER.OMS_INVOICE_CREATION_TSTMP AS lkp_OMS_INVOICE_CREATION_TSTMP,
  MASTER.OMS_INVOICE_STATUS_ID AS lkp_OMS_INVOICE_STATUS_ID,
  MASTER.PARTIALLY_SETTLED_FLAG AS lkp_PARTIALLY_SETTLED_FLAG,
  MASTER.COLLECTED_EXTERNALLY_FLAG AS lkp_COLLECTED_EXTERNALLY_FLAG,
  MASTER.OMS_FACILITY_ID AS lkp_OMS_FACILITY_ID,
  MASTER.OMS_SHIPMENT_NBR AS lkp_OMS_SHIPMENT_NBR,
  MASTER.PUBLISHED_FLAG AS lkp_PUBLISHED_FLAG,
  MASTER.C_INITIAL_PUBLISHED_FLAG AS lkp_C_INITIAL_PUBLISHED_FLAG,
  MASTER.OMS_RETURN_ORDER_ID AS lkp_OMS_RETURN_ORDER_ID,
  MASTER.OMS_RETURN_ORDER_NBR AS lkp_OMS_RETURN_ORDER_NBR,
  MASTER.CURRENCY_CD AS lkp_CURRENCY_CD,
  MASTER.HEADER_TAX_AMT AS lkp_HEADER_TAX_AMT,
  MASTER.HEADER_CHARGE_AMT AS lkp_HEADER_CHARGE_AMT,
  MASTER.HEADER_DISCOUNT_AMT AS lkp_HEADER_DISCOUNT_AMT,
  MASTER.INVOICE_AMT AS lkp_INVOICE_AMT,
  MASTER.INVOICE_AMT_PROCESSED AS lkp_INVOICE_AMT_PROCESSED,
  MASTER.OMS_CREATED_SOURCE AS lkp_OMS_CREATED_SOURCE,
  MASTER.OMS_CREATED_SOURCE_TYPE_ID AS lkp_OMS_CREATED_SOURCE_TYPE_ID,
  MASTER.OMS_LAST_UPDATED_SOURCE AS lkp_OMS_LAST_UPDATED_SOURCE,
  MASTER.OMS_LAST_UPDATED_SOURCE_TYPE_ID AS lkp_OMS_LAST_UPDATED_SOURCE_TYPE_ID,
  MASTER.OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_A_INVOICE_3 MASTER
  RIGHT JOIN SQ_Shortcut_to_OMS_A_INVOICE_PRE_1 DETAIL ON MASTER.OMS_INVOICE_ID = DETAIL.INVOICE_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_OMS_A_INVOICE_4")

# COMMAND ----------
# DBTITLE 1, FIL_UNCHANGED_RECORDS_5


query_5 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  ENTITY_TYPE AS ENTITY_TYPE,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_TYPE AS INVOICE_TYPE,
  CURRENCY AS CURRENCY,
  HEADER_TAX AS HEADER_TAX,
  HEADER_CHARGE AS HEADER_CHARGE,
  HEADER_DISCOUNT AS HEADER_DISCOUNT,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  STATUS AS STATUS,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  RETURN_ORDER_ID AS RETURN_ORDER_ID,
  RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  IS_PUBLISHED AS IS_PUBLISHED,
  C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  FACILITY_ID AS FACILITY_ID,
  PARTIALLY_SETTLED AS PARTIALLY_SETTLED,
  lkp_OMS_INVOICE_ID AS lkp_OMS_INVOICE_ID,
  lkp_OMS_INVOICE_NBR AS lkp_OMS_INVOICE_NBR,
  lkp_OMS_TC_COMPANY_ID AS lkp_OMS_TC_COMPANY_ID,
  lkp_OMS_ENTITY_TYPE AS lkp_OMS_ENTITY_TYPE,
  lkp_OMS_ENTITY_ID AS lkp_OMS_ENTITY_ID,
  lkp_OMS_ENTITY_NBR AS lkp_OMS_ENTITY_NBR,
  lkp_OMS_INVOICE_TYPE AS lkp_OMS_INVOICE_TYPE,
  lkp_OMS_INVOICE_CREATION_TSTMP AS lkp_OMS_INVOICE_CREATION_TSTMP,
  lkp_OMS_INVOICE_STATUS_ID AS lkp_OMS_INVOICE_STATUS_ID,
  lkp_PARTIALLY_SETTLED_FLAG AS lkp_PARTIALLY_SETTLED_FLAG,
  lkp_COLLECTED_EXTERNALLY_FLAG AS lkp_COLLECTED_EXTERNALLY_FLAG,
  lkp_OMS_FACILITY_ID AS lkp_OMS_FACILITY_ID,
  lkp_OMS_SHIPMENT_NBR AS lkp_OMS_SHIPMENT_NBR,
  lkp_PUBLISHED_FLAG AS lkp_PUBLISHED_FLAG,
  lkp_C_INITIAL_PUBLISHED_FLAG AS lkp_C_INITIAL_PUBLISHED_FLAG,
  lkp_OMS_RETURN_ORDER_ID AS lkp_OMS_RETURN_ORDER_ID,
  lkp_OMS_RETURN_ORDER_NBR AS lkp_OMS_RETURN_ORDER_NBR,
  lkp_CURRENCY_CD AS lkp_CURRENCY_CD,
  lkp_HEADER_TAX_AMT AS lkp_HEADER_TAX_AMT,
  lkp_HEADER_CHARGE_AMT AS lkp_HEADER_CHARGE_AMT,
  lkp_HEADER_DISCOUNT_AMT AS lkp_HEADER_DISCOUNT_AMT,
  lkp_INVOICE_AMT AS lkp_INVOICE_AMT,
  lkp_INVOICE_AMT_PROCESSED AS lkp_INVOICE_AMT_PROCESSED,
  lkp_OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  lkp_LOAD_TSTMP AS lkp_LOAD_TSTMP,
  lkp_OMS_CREATED_SOURCE AS lkp_OMS_CREATED_SOURCE,
  lkp_OMS_CREATED_SOURCE_TYPE_ID AS lkp_OMS_CREATED_SOURCE_TYPE_ID,
  lkp_OMS_LAST_UPDATED_SOURCE AS lkp_OMS_LAST_UPDATED_SOURCE,
  lkp_OMS_LAST_UPDATED_SOURCE_TYPE_ID AS lkp_OMS_LAST_UPDATED_SOURCE_TYPE_ID,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_A_INVOICE_4
WHERE
  ISNULL(lkp_OMS_INVOICE_ID)
  OR (
    NOT ISNULL(lkp_OMS_INVOICE_ID)
    AND (
      IFF(
        ISNULL(LTRIM(RTRIM(INVOICE_NUMBER))),
        ' ',
        LTRIM(RTRIM(INVOICE_NUMBER))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_INVOICE_NBR))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_INVOICE_NBR))
      )
      OR IFF(ISNULL(TC_COMPANY_ID), 9999, TC_COMPANY_ID) <> IFF(
        ISNULL(lkp_OMS_TC_COMPANY_ID),
        9999,
        lkp_OMS_TC_COMPANY_ID
      )
      OR IFF(ISNULL(ENTITY_TYPE), 99, ENTITY_TYPE) <> IFF(
        ISNULL(lkp_OMS_ENTITY_TYPE),
        99,
        lkp_OMS_ENTITY_TYPE
      )
      OR IFF(ISNULL(ENTITY_ID), 9999, ENTITY_ID) <> IFF(ISNULL(lkp_OMS_ENTITY_ID), 9999, lkp_OMS_ENTITY_ID)
      OR IFF(
        ISNULL(LTRIM(RTRIM(ENTITY_NUMBER))),
        ' ',
        LTRIM(RTRIM(ENTITY_NUMBER))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_ENTITY_NBR))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_ENTITY_NBR))
      )
      OR IFF(ISNULL(INVOICE_TYPE), 99, INVOICE_TYPE) <> IFF(
        ISNULL(lkp_OMS_INVOICE_TYPE),
        99,
        lkp_OMS_INVOICE_TYPE
      )
      OR IFF(
        ISNULL(INVOICE_CREATION_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        INVOICE_CREATION_DTTM
      ) <> IFF(
        ISNULL(lkp_OMS_INVOICE_CREATION_TSTMP),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        lkp_OMS_INVOICE_CREATION_TSTMP
      )
      OR IFF(ISNULL(STATUS), 99, STATUS) <> IFF(
        ISNULL(lkp_OMS_INVOICE_STATUS_ID),
        99,
        lkp_OMS_INVOICE_STATUS_ID
      )
      OR IFF(ISNULL(PARTIALLY_SETTLED), 9, PARTIALLY_SETTLED) <> IFF(
        ISNULL(lkp_PARTIALLY_SETTLED_FLAG),
        9,
        lkp_PARTIALLY_SETTLED_FLAG
      )
      OR IFF(
        ISNULL(COLLECTED_EXTERNALLY),
        9,
        COLLECTED_EXTERNALLY
      ) <> IFF(
        ISNULL(lkp_COLLECTED_EXTERNALLY_FLAG),
        9,
        lkp_COLLECTED_EXTERNALLY_FLAG
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(FACILITY_ID))),
        ' ',
        LTRIM(RTRIM(FACILITY_ID))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_FACILITY_ID))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_FACILITY_ID))
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(SHIPMENT_NUMBER))),
        ' ',
        LTRIM(RTRIM(SHIPMENT_NUMBER))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_SHIPMENT_NBR))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_SHIPMENT_NBR))
      )
      OR IFF(ISNULL(IS_PUBLISHED), 9, IS_PUBLISHED) <> IFF(ISNULL(lkp_PUBLISHED_FLAG), 9, lkp_PUBLISHED_FLAG)
      OR IFF(
        ISNULL(C_INITIAL_IS_PUBLISHED),
        9,
        C_INITIAL_IS_PUBLISHED
      ) <> IFF(
        ISNULL(lkp_C_INITIAL_PUBLISHED_FLAG),
        9,
        lkp_C_INITIAL_PUBLISHED_FLAG
      )
      OR IFF(ISNULL(RETURN_ORDER_ID), 9999, RETURN_ORDER_ID) <> IFF(
        ISNULL(lkp_OMS_RETURN_ORDER_ID),
        9999,
        lkp_OMS_RETURN_ORDER_ID
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(RETURN_ORDER_NUMBER))),
        ' ',
        LTRIM(RTRIM(RETURN_ORDER_NUMBER))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_RETURN_ORDER_NBR))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_RETURN_ORDER_NBR))
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(CURRENCY))),
        ' ',
        LTRIM(RTRIM(CURRENCY))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_CURRENCY_CD))),
        ' ',
        LTRIM(RTRIM(lkp_CURRENCY_CD))
      )
      OR IFF(ISNULL(HEADER_TAX), 9999, HEADER_TAX) <> IFF(
        ISNULL(lkp_HEADER_TAX_AMT),
        9999,
        lkp_HEADER_TAX_AMT
      )
      OR IFF(ISNULL(HEADER_CHARGE), 9999, HEADER_CHARGE) <> IFF(
        ISNULL(lkp_HEADER_CHARGE_AMT),
        9999,
        lkp_HEADER_CHARGE_AMT
      )
      OR IFF(ISNULL(HEADER_DISCOUNT), 9999, HEADER_DISCOUNT) <> IFF(
        ISNULL(lkp_HEADER_DISCOUNT_AMT),
        9999,
        lkp_HEADER_DISCOUNT_AMT
      )
      OR IFF(ISNULL(INVOICE_AMOUNT), 9999, INVOICE_AMOUNT) <> IFF(ISNULL(lkp_INVOICE_AMT), 9999, lkp_INVOICE_AMT)
      OR IFF(
        ISNULL(INVOICE_AMOUNT_PROCESSED),
        9999,
        INVOICE_AMOUNT_PROCESSED
      ) <> IFF(
        ISNULL(lkp_INVOICE_AMT_PROCESSED),
        9999,
        lkp_INVOICE_AMT_PROCESSED
      )
      OR IFF(
        ISNULL(LAST_UPDATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        LAST_UPDATED_DTTM
      ) <> IFF(
        ISNULL(lkp_OMS_LAST_UPDATED_TSTMP),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        lkp_OMS_LAST_UPDATED_TSTMP
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(CREATED_SOURCE))),
        ' ',
        LTRIM(RTRIM(CREATED_SOURCE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_CREATED_SOURCE))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_CREATED_SOURCE))
      )
      OR IFF(
        ISNULL(CREATED_SOURCE_TYPE),
        9,
        CREATED_SOURCE_TYPE
      ) <> IFF(
        ISNULL(lkp_OMS_CREATED_SOURCE_TYPE_ID),
        9,
        lkp_OMS_CREATED_SOURCE_TYPE_ID
      )
      OR IFF(
        ISNULL(LTRIM(RTRIM(LAST_UPDATED_SOURCE))),
        ' ',
        LTRIM(RTRIM(LAST_UPDATED_SOURCE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_LAST_UPDATED_SOURCE))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_LAST_UPDATED_SOURCE))
      )
      OR IFF(
        ISNULL(LAST_UPDATED_SOURCE_TYPE),
        9,
        LAST_UPDATED_SOURCE_TYPE
      ) <> IFF(
        ISNULL(lkp_OMS_LAST_UPDATED_SOURCE_TYPE_ID),
        9,
        lkp_OMS_LAST_UPDATED_SOURCE_TYPE_ID
      )
    )
  )"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("FIL_UNCHANGED_RECORDS_5")

# COMMAND ----------
# DBTITLE 1, EXP_UPDATE_FLAG_6


query_6 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  ENTITY_TYPE AS ENTITY_TYPE,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_TYPE AS INVOICE_TYPE,
  CURRENCY AS CURRENCY,
  HEADER_TAX AS HEADER_TAX,
  HEADER_CHARGE AS HEADER_CHARGE,
  HEADER_DISCOUNT AS HEADER_DISCOUNT,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  STATUS AS STATUS,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  RETURN_ORDER_ID AS RETURN_ORDER_ID,
  RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  IS_PUBLISHED AS IS_PUBLISHED,
  C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  FACILITY_ID AS FACILITY_ID,
  PARTIALLY_SETTLED AS PARTIALLY_SETTLED,
  now() AS o_UPDATE_TSTMP,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS o_LOAD_TSTMP,
  IFF(ISNULL(lkp_OMS_INVOICE_ID), 1, 2) AS o_UPDATE_FLAG,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_UNCHANGED_RECORDS_5"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("EXP_UPDATE_FLAG_6")

# COMMAND ----------
# DBTITLE 1, UPD_INSERT_UPDATE_7


query_7 = f"""SELECT
  INVOICE_ID AS INVOICE_ID,
  INVOICE_NUMBER AS INVOICE_NUMBER,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  INVOICE_CREATION_DTTM AS INVOICE_CREATION_DTTM,
  ENTITY_TYPE AS ENTITY_TYPE,
  ENTITY_ID AS ENTITY_ID,
  INVOICE_TYPE AS INVOICE_TYPE,
  CURRENCY AS CURRENCY,
  HEADER_TAX AS HEADER_TAX,
  HEADER_CHARGE AS HEADER_CHARGE,
  HEADER_DISCOUNT AS HEADER_DISCOUNT,
  INVOICE_AMOUNT AS INVOICE_AMOUNT,
  STATUS AS STATUS,
  SHIPMENT_NUMBER AS SHIPMENT_NUMBER,
  INVOICE_AMOUNT_PROCESSED AS INVOICE_AMOUNT_PROCESSED,
  COLLECTED_EXTERNALLY AS COLLECTED_EXTERNALLY,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  RETURN_ORDER_ID AS RETURN_ORDER_ID,
  RETURN_ORDER_NUMBER AS RETURN_ORDER_NUMBER,
  IS_PUBLISHED AS IS_PUBLISHED,
  C_INITIAL_IS_PUBLISHED AS C_INITIAL_IS_PUBLISHED,
  FACILITY_ID AS FACILITY_ID,
  PARTIALLY_SETTLED AS PARTIALLY_SETTLED,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  o_UPDATE_FLAG AS o_UPDATE_FLAG,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(o_UPDATE_FLAG, 1, 'DD_INSERT', 2, 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  EXP_UPDATE_FLAG_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("UPD_INSERT_UPDATE_7")

# COMMAND ----------
# DBTITLE 1, OMS_A_INVOICE


spark.sql("""MERGE INTO OMS_A_INVOICE AS TARGET
USING
  UPD_INSERT_UPDATE_7 AS SOURCE ON TARGET.OMS_INVOICE_ID = SOURCE.INVOICE_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_INVOICE_ID = SOURCE.INVOICE_ID,
  TARGET.OMS_INVOICE_NBR = SOURCE.INVOICE_NUMBER,
  TARGET.OMS_TC_COMPANY_ID = SOURCE.TC_COMPANY_ID,
  TARGET.OMS_ENTITY_TYPE = SOURCE.ENTITY_TYPE,
  TARGET.OMS_ENTITY_ID = SOURCE.ENTITY_ID,
  TARGET.OMS_ENTITY_NBR = SOURCE.ENTITY_NUMBER,
  TARGET.OMS_INVOICE_TYPE = SOURCE.INVOICE_TYPE,
  TARGET.OMS_INVOICE_CREATION_TSTMP = SOURCE.INVOICE_CREATION_DTTM,
  TARGET.OMS_INVOICE_STATUS_ID = SOURCE.STATUS,
  TARGET.PARTIALLY_SETTLED_FLAG = SOURCE.PARTIALLY_SETTLED,
  TARGET.COLLECTED_EXTERNALLY_FLAG = SOURCE.COLLECTED_EXTERNALLY,
  TARGET.OMS_FACILITY_ID = SOURCE.FACILITY_ID,
  TARGET.OMS_SHIPMENT_NBR = SOURCE.SHIPMENT_NUMBER,
  TARGET.PUBLISHED_FLAG = SOURCE.IS_PUBLISHED,
  TARGET.C_INITIAL_PUBLISHED_FLAG = SOURCE.C_INITIAL_IS_PUBLISHED,
  TARGET.OMS_RETURN_ORDER_ID = SOURCE.RETURN_ORDER_ID,
  TARGET.OMS_RETURN_ORDER_NBR = SOURCE.RETURN_ORDER_NUMBER,
  TARGET.CURRENCY_CD = SOURCE.CURRENCY,
  TARGET.HEADER_TAX_AMT = SOURCE.HEADER_TAX,
  TARGET.HEADER_CHARGE_AMT = SOURCE.HEADER_CHARGE,
  TARGET.HEADER_DISCOUNT_AMT = SOURCE.HEADER_DISCOUNT,
  TARGET.INVOICE_AMT = SOURCE.INVOICE_AMOUNT,
  TARGET.INVOICE_AMT_PROCESSED = SOURCE.INVOICE_AMOUNT_PROCESSED,
  TARGET.OMS_CREATED_SOURCE = SOURCE.CREATED_SOURCE,
  TARGET.OMS_CREATED_SOURCE_TYPE_ID = SOURCE.CREATED_SOURCE_TYPE,
  TARGET.OMS_LAST_UPDATED_SOURCE = SOURCE.LAST_UPDATED_SOURCE,
  TARGET.OMS_LAST_UPDATED_SOURCE_TYPE_ID = SOURCE.LAST_UPDATED_SOURCE_TYPE,
  TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM,
  TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_INVOICE_NBR = SOURCE.INVOICE_NUMBER
  AND TARGET.OMS_TC_COMPANY_ID = SOURCE.TC_COMPANY_ID
  AND TARGET.OMS_ENTITY_TYPE = SOURCE.ENTITY_TYPE
  AND TARGET.OMS_ENTITY_ID = SOURCE.ENTITY_ID
  AND TARGET.OMS_ENTITY_NBR = SOURCE.ENTITY_NUMBER
  AND TARGET.OMS_INVOICE_TYPE = SOURCE.INVOICE_TYPE
  AND TARGET.OMS_INVOICE_CREATION_TSTMP = SOURCE.INVOICE_CREATION_DTTM
  AND TARGET.OMS_INVOICE_STATUS_ID = SOURCE.STATUS
  AND TARGET.PARTIALLY_SETTLED_FLAG = SOURCE.PARTIALLY_SETTLED
  AND TARGET.COLLECTED_EXTERNALLY_FLAG = SOURCE.COLLECTED_EXTERNALLY
  AND TARGET.OMS_FACILITY_ID = SOURCE.FACILITY_ID
  AND TARGET.OMS_SHIPMENT_NBR = SOURCE.SHIPMENT_NUMBER
  AND TARGET.PUBLISHED_FLAG = SOURCE.IS_PUBLISHED
  AND TARGET.C_INITIAL_PUBLISHED_FLAG = SOURCE.C_INITIAL_IS_PUBLISHED
  AND TARGET.OMS_RETURN_ORDER_ID = SOURCE.RETURN_ORDER_ID
  AND TARGET.OMS_RETURN_ORDER_NBR = SOURCE.RETURN_ORDER_NUMBER
  AND TARGET.CURRENCY_CD = SOURCE.CURRENCY
  AND TARGET.HEADER_TAX_AMT = SOURCE.HEADER_TAX
  AND TARGET.HEADER_CHARGE_AMT = SOURCE.HEADER_CHARGE
  AND TARGET.HEADER_DISCOUNT_AMT = SOURCE.HEADER_DISCOUNT
  AND TARGET.INVOICE_AMT = SOURCE.INVOICE_AMOUNT
  AND TARGET.INVOICE_AMT_PROCESSED = SOURCE.INVOICE_AMOUNT_PROCESSED
  AND TARGET.OMS_CREATED_SOURCE = SOURCE.CREATED_SOURCE
  AND TARGET.OMS_CREATED_SOURCE_TYPE_ID = SOURCE.CREATED_SOURCE_TYPE
  AND TARGET.OMS_LAST_UPDATED_SOURCE = SOURCE.LAST_UPDATED_SOURCE
  AND TARGET.OMS_LAST_UPDATED_SOURCE_TYPE_ID = SOURCE.LAST_UPDATED_SOURCE_TYPE
  AND TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM
  AND TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_INVOICE_ID,
    TARGET.OMS_INVOICE_NBR,
    TARGET.OMS_TC_COMPANY_ID,
    TARGET.OMS_ENTITY_TYPE,
    TARGET.OMS_ENTITY_ID,
    TARGET.OMS_ENTITY_NBR,
    TARGET.OMS_INVOICE_TYPE,
    TARGET.OMS_INVOICE_CREATION_TSTMP,
    TARGET.OMS_INVOICE_STATUS_ID,
    TARGET.PARTIALLY_SETTLED_FLAG,
    TARGET.COLLECTED_EXTERNALLY_FLAG,
    TARGET.OMS_FACILITY_ID,
    TARGET.OMS_SHIPMENT_NBR,
    TARGET.PUBLISHED_FLAG,
    TARGET.C_INITIAL_PUBLISHED_FLAG,
    TARGET.OMS_RETURN_ORDER_ID,
    TARGET.OMS_RETURN_ORDER_NBR,
    TARGET.CURRENCY_CD,
    TARGET.HEADER_TAX_AMT,
    TARGET.HEADER_CHARGE_AMT,
    TARGET.HEADER_DISCOUNT_AMT,
    TARGET.INVOICE_AMT,
    TARGET.INVOICE_AMT_PROCESSED,
    TARGET.OMS_CREATED_SOURCE,
    TARGET.OMS_CREATED_SOURCE_TYPE_ID,
    TARGET.OMS_LAST_UPDATED_SOURCE,
    TARGET.OMS_LAST_UPDATED_SOURCE_TYPE_ID,
    TARGET.OMS_LAST_UPDATED_TSTMP,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.INVOICE_ID,
    SOURCE.INVOICE_NUMBER,
    SOURCE.TC_COMPANY_ID,
    SOURCE.ENTITY_TYPE,
    SOURCE.ENTITY_ID,
    SOURCE.ENTITY_NUMBER,
    SOURCE.INVOICE_TYPE,
    SOURCE.INVOICE_CREATION_DTTM,
    SOURCE.STATUS,
    SOURCE.PARTIALLY_SETTLED,
    SOURCE.COLLECTED_EXTERNALLY,
    SOURCE.FACILITY_ID,
    SOURCE.SHIPMENT_NUMBER,
    SOURCE.IS_PUBLISHED,
    SOURCE.C_INITIAL_IS_PUBLISHED,
    SOURCE.RETURN_ORDER_ID,
    SOURCE.RETURN_ORDER_NUMBER,
    SOURCE.CURRENCY,
    SOURCE.HEADER_TAX,
    SOURCE.HEADER_CHARGE,
    SOURCE.HEADER_DISCOUNT,
    SOURCE.INVOICE_AMOUNT,
    SOURCE.INVOICE_AMOUNT_PROCESSED,
    SOURCE.CREATED_SOURCE,
    SOURCE.CREATED_SOURCE_TYPE,
    SOURCE.LAST_UPDATED_SOURCE,
    SOURCE.LAST_UPDATED_SOURCE_TYPE,
    SOURCE.LAST_UPDATED_DTTM,
    SOURCE.o_UPDATE_TSTMP,
    SOURCE.o_LOAD_TSTMP
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Invoice")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_A_Invoice", mainWorkflowId, parentName)
