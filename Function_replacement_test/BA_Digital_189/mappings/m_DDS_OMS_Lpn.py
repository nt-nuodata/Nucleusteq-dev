# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Lpn")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_Lpn", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_LPN_NEW_0


query_0 = f"""SELECT
  OMS_LPN_ID AS OMS_LPN_ID,
  OMS_TC_LPN_ID AS OMS_TC_LPN_ID,
  OMS_PARENT_LPN_ID AS OMS_PARENT_LPN_ID,
  OMS_LPN_TYPE_ID AS OMS_LPN_TYPE_ID,
  OMS_LPN_STATUS_ID AS OMS_LPN_STATUS_ID,
  OMS_LPN_STATUS_UPDATED_TSTMP AS OMS_LPN_STATUS_UPDATED_TSTMP,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_ASN_ID AS OMS_ASN_ID,
  OMS_TC_ASN_ID AS OMS_TC_ASN_ID,
  OMS_FINAL_DEST_FACILITY_ALIAS_ID AS OMS_FINAL_DEST_FACILITY_ALIAS_ID,
  OMS_TRACKING_NBR AS OMS_TRACKING_NBR,
  BASE_CHARGE_AMT AS BASE_CHARGE_AMT,
  BASE_CHARGE_CURRENCY_CD AS BASE_CHARGE_CURRENCY_CD,
  ADDL_OPTION_CHARGE_AMT AS ADDL_OPTION_CHARGE_AMT,
  ADDL_OPTION_CHARGE_CURRENCY_CD AS ADDL_OPTION_CHARGE_CURRENCY_CD,
  ACTUAL_CHARGE_AMT AS ACTUAL_CHARGE_AMT,
  ACTUAL_CHARGE_CURRENCY_CD AS ACTUAL_CHARGE_CURRENCY_CD,
  DIST_CHARGE_AMT AS DIST_CHARGE_AMT,
  DIST_CHARGE_CURRENCY_CD AS DIST_CHARGE_CURRENCY_CD,
  FREIGHT_CHARGE_AMT AS FREIGHT_CHARGE_AMT,
  FREIGHT_CHARGE_CURRENCY_CD AS FREIGHT_CHARGE_CURRENCY_CD,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_LPN_DDS"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_LPN_NEW_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_LPN_DDS_1


query_1 = f"""SELECT
  OMS_LPN_ID AS OMS_LPN_ID,
  OMS_TC_LPN_ID AS OMS_TC_LPN_ID,
  OMS_PARENT_LPN_ID AS OMS_PARENT_LPN_ID,
  OMS_LPN_TYPE_ID AS OMS_LPN_TYPE_ID,
  OMS_LPN_STATUS_ID AS OMS_LPN_STATUS_ID,
  OMS_LPN_STATUS_UPDATED_TSTMP AS OMS_LPN_STATUS_UPDATED_TSTMP,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ASN_ID AS OMS_ASN_ID,
  OMS_TC_ASN_ID AS OMS_TC_ASN_ID,
  OMS_FINAL_DEST_FACILITY_ALIAS_ID AS OMS_FINAL_DEST_FACILITY_ALIAS_ID,
  OMS_TRACKING_NBR AS OMS_TRACKING_NBR,
  BASE_CHARGE_AMT AS BASE_CHARGE_AMT,
  BASE_CHARGE_CURRENCY_CD AS BASE_CHARGE_CURRENCY_CD,
  ADDL_OPTION_CHARGE_AMT AS ADDL_OPTION_CHARGE_AMT,
  ADDL_OPTION_CHARGE_CURRENCY_CD AS ADDL_OPTION_CHARGE_CURRENCY_CD,
  ACTUAL_CHARGE_AMT AS ACTUAL_CHARGE_AMT,
  ACTUAL_CHARGE_CURRENCY_CD AS ACTUAL_CHARGE_CURRENCY_CD,
  DIST_CHARGE_AMT AS DIST_CHARGE_AMT,
  DIST_CHARGE_CURRENCY_CD AS DIST_CHARGE_CURRENCY_CD,
  FREIGHT_CHARGE_AMT AS FREIGHT_CHARGE_AMT,
  FREIGHT_CHARGE_CURRENCY_CD AS FREIGHT_CHARGE_CURRENCY_CD,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_LPN_NEW_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_LPN_DDS_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_LPN_PRE_NEW_2


query_2 = f"""SELECT
  LPN_ID AS LPN_ID,
  TC_LPN_ID AS TC_LPN_ID,
  PARENT_LPN_ID AS PARENT_LPN_ID,
  LPN_TYPE AS LPN_TYPE,
  FINAL_DEST_FACILITY_ALIAS_ID AS FINAL_DEST_FACILITY_ALIAS_ID,
  LPN_STATUS AS LPN_STATUS,
  LPN_STATUS_UPDATED_DTTM AS LPN_STATUS_UPDATED_DTTM,
  TRACKING_NBR AS TRACKING_NBR,
  BASE_CHARGE AS BASE_CHARGE,
  BASE_CHARGE_CURR_CODE AS BASE_CHARGE_CURR_CODE,
  ADDNL_OPTION_CHARGE AS ADDNL_OPTION_CHARGE,
  ADDNL_OPTION_CHARGE_CURR_CODE AS ADDNL_OPTION_CHARGE_CURR_CODE,
  ACTUAL_CHARGE AS ACTUAL_CHARGE,
  ACTUAL_CHARGE_CURR_CODE AS ACTUAL_CHARGE_CURR_CODE,
  DIST_CHARGE AS DIST_CHARGE,
  DIST_CHARGE_CURR_CODE AS DIST_CHARGE_CURR_CODE,
  FREIGHT_CHARGE AS FREIGHT_CHARGE,
  FREIGHT_CHARGE_CURR_CODE AS FREIGHT_CHARGE_CURR_CODE,
  SHIPMENT_ID AS SHIPMENT_ID,
  TC_ASN_ID AS TC_ASN_ID,
  ASN_ID AS ASN_ID,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  ORDER_ID AS ORDER_ID,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_LPN_PRE"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_LPN_PRE_NEW_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_LPN_PRE_3


query_3 = f"""SELECT
  LPN_ID AS LPN_ID,
  TC_LPN_ID AS TC_LPN_ID,
  PARENT_LPN_ID AS PARENT_LPN_ID,
  LPN_TYPE AS LPN_TYPE,
  FINAL_DEST_FACILITY_ALIAS_ID AS FINAL_DEST_FACILITY_ALIAS_ID,
  LPN_STATUS AS LPN_STATUS,
  LPN_STATUS_UPDATED_DTTM AS LPN_STATUS_UPDATED_DTTM,
  TRACKING_NBR AS TRACKING_NBR,
  BASE_CHARGE AS BASE_CHARGE,
  BASE_CHARGE_CURR_CODE AS BASE_CHARGE_CURR_CODE,
  ADDNL_OPTION_CHARGE AS ADDNL_OPTION_CHARGE,
  ADDNL_OPTION_CHARGE_CURR_CODE AS ADDNL_OPTION_CHARGE_CURR_CODE,
  ACTUAL_CHARGE AS ACTUAL_CHARGE,
  ACTUAL_CHARGE_CURR_CODE AS ACTUAL_CHARGE_CURR_CODE,
  DIST_CHARGE AS DIST_CHARGE,
  DIST_CHARGE_CURR_CODE AS DIST_CHARGE_CURR_CODE,
  FREIGHT_CHARGE AS FREIGHT_CHARGE,
  FREIGHT_CHARGE_CURR_CODE AS FREIGHT_CHARGE_CURR_CODE,
  TC_ASN_ID AS TC_ASN_ID,
  ASN_ID AS ASN_ID,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  ORDER_ID AS ORDER_ID,
  LOAD_TSTMP AS LOAD_TSTMP,
  SHIPMENT_ID AS SHIPMENT_ID,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_LPN_PRE_NEW_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_LPN_PRE_3")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_LPN_4


query_4 = f"""SELECT
  DETAIL.LPN_ID AS LPN_ID,
  DETAIL.TC_LPN_ID AS TC_LPN_ID,
  DETAIL.PARENT_LPN_ID AS PARENT_LPN_ID,
  DETAIL.LPN_TYPE AS LPN_TYPE,
  DETAIL.FINAL_DEST_FACILITY_ALIAS_ID AS FINAL_DEST_FACILITY_ALIAS_ID,
  DETAIL.LPN_STATUS AS LPN_STATUS,
  DETAIL.LPN_STATUS_UPDATED_DTTM AS LPN_STATUS_UPDATED_DTTM,
  DETAIL.TRACKING_NBR AS TRACKING_NBR,
  DETAIL.BASE_CHARGE AS BASE_CHARGE,
  DETAIL.BASE_CHARGE_CURR_CODE AS BASE_CHARGE_CURR_CODE,
  DETAIL.ADDNL_OPTION_CHARGE AS ADDNL_OPTION_CHARGE,
  DETAIL.ADDNL_OPTION_CHARGE_CURR_CODE AS ADDNL_OPTION_CHARGE_CURR_CODE,
  DETAIL.ACTUAL_CHARGE AS ACTUAL_CHARGE,
  DETAIL.ACTUAL_CHARGE_CURR_CODE AS ACTUAL_CHARGE_CURR_CODE,
  DETAIL.DIST_CHARGE AS DIST_CHARGE,
  DETAIL.DIST_CHARGE_CURR_CODE AS DIST_CHARGE_CURR_CODE,
  DETAIL.FREIGHT_CHARGE AS FREIGHT_CHARGE,
  DETAIL.FREIGHT_CHARGE_CURR_CODE AS FREIGHT_CHARGE_CURR_CODE,
  DETAIL.TC_ASN_ID AS TC_ASN_ID,
  DETAIL.ASN_ID AS ASN_ID,
  DETAIL.CREATED_DTTM AS CREATED_DTTM,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.ORDER_ID AS ORDER_ID,
  MASTER.OMS_LPN_ID AS lkp_OMS_LPN_ID,
  MASTER.OMS_TC_LPN_ID AS lkp_OMS_TC_LPN_ID,
  MASTER.OMS_PARENT_LPN_ID AS lkp_OMS_PARENT_LPN_ID,
  MASTER.OMS_LPN_TYPE_ID AS lkp_OMS_LPN_TYPE_ID,
  MASTER.OMS_LPN_STATUS_ID AS lkp_OMS_LPN_STATUS_ID,
  MASTER.OMS_LPN_STATUS_UPDATED_TSTMP AS lkp_OMS_LPN_STATUS_UPDATED_TSTMP,
  MASTER.OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  MASTER.OMS_ASN_ID AS lkp_OMS_ASN_ID,
  MASTER.OMS_TC_ASN_ID AS lkp_OMS_TC_ASN_ID,
  MASTER.OMS_FINAL_DEST_FACILITY_ALIAS_ID AS lkp_OMS_FINAL_DEST_FACILITY_ALIAS_ID,
  MASTER.OMS_TRACKING_NBR AS lkp_OMS_TRACKING_NBR,
  MASTER.BASE_CHARGE_AMT AS lkp_BASE_CHARGE_AMT,
  MASTER.BASE_CHARGE_CURRENCY_CD AS lkp_BASE_CHARGE_CURRENCY_CD,
  MASTER.ADDL_OPTION_CHARGE_AMT AS lkp_ADDL_OPTION_CHARGE_AMT,
  MASTER.ADDL_OPTION_CHARGE_CURRENCY_CD AS lkp_ADDL_OPTION_CHARGE_CURRENCY_CD,
  MASTER.ACTUAL_CHARGE_AMT AS lkp_ACTUAL_CHARGE_AMT,
  MASTER.ACTUAL_CHARGE_CURRENCY_CD AS lkp_ACTUAL_CHARGE_CURRENCY_CD,
  MASTER.DIST_CHARGE_AMT AS lkp_DIST_CHARGE_AMT,
  MASTER.DIST_CHARGE_CURRENCY_CD AS lkp_DIST_CHARGE_CURRENCY_CD,
  MASTER.FREIGHT_CHARGE_AMT AS lkp_FREIGHT_CHARGE_AMT,
  MASTER.FREIGHT_CHARGE_CURRENCY_CD AS lkp_FREIGHT_CHARGE_CURRENCY_CD,
  MASTER.OMS_CREATED_TSTMP AS lkp_OMS_CREATED_TSTMP,
  MASTER.OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  MASTER.OMS_SHIPMENT_ID AS lkp_OMS_SHIPMENT_ID,
  DETAIL.SHIPMENT_ID AS SHIPMENT_ID,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_LPN_DDS_1 MASTER
  RIGHT JOIN SQ_Shortcut_to_OMS_LPN_PRE_3 DETAIL ON MASTER.OMS_LPN_ID = DETAIL.LPN_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_OMS_LPN_4")

# COMMAND ----------
# DBTITLE 1, FTR_UNCHANGED_REC_5


query_5 = f"""SELECT
  LPN_ID AS LPN_ID,
  TC_LPN_ID AS TC_LPN_ID,
  PARENT_LPN_ID AS PARENT_LPN_ID,
  LPN_TYPE AS LPN_TYPE,
  FINAL_DEST_FACILITY_ALIAS_ID AS FINAL_DEST_FACILITY_ALIAS_ID,
  LPN_STATUS AS LPN_STATUS,
  LPN_STATUS_UPDATED_DTTM AS LPN_STATUS_UPDATED_DTTM,
  TRACKING_NBR AS TRACKING_NBR,
  BASE_CHARGE AS BASE_CHARGE,
  BASE_CHARGE_CURR_CODE AS BASE_CHARGE_CURR_CODE,
  ADDNL_OPTION_CHARGE AS ADDNL_OPTION_CHARGE,
  ADDNL_OPTION_CHARGE_CURR_CODE AS ADDNL_OPTION_CHARGE_CURR_CODE,
  ACTUAL_CHARGE AS ACTUAL_CHARGE,
  ACTUAL_CHARGE_CURR_CODE AS ACTUAL_CHARGE_CURR_CODE,
  DIST_CHARGE AS DIST_CHARGE,
  DIST_CHARGE_CURR_CODE AS DIST_CHARGE_CURR_CODE,
  FREIGHT_CHARGE AS FREIGHT_CHARGE,
  FREIGHT_CHARGE_CURR_CODE AS FREIGHT_CHARGE_CURR_CODE,
  TC_ASN_ID AS TC_ASN_ID,
  ASN_ID AS ASN_ID,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  ORDER_ID AS ORDER_ID,
  lkp_OMS_LPN_ID AS lkp_OMS_LPN_ID,
  lkp_OMS_TC_LPN_ID AS lkp_OMS_TC_LPN_ID,
  lkp_OMS_PARENT_LPN_ID AS lkp_OMS_PARENT_LPN_ID,
  lkp_OMS_LPN_TYPE_ID AS lkp_OMS_LPN_TYPE_ID,
  lkp_OMS_LPN_STATUS_ID AS lkp_OMS_LPN_STATUS_ID,
  lkp_OMS_LPN_STATUS_UPDATED_TSTMP AS lkp_OMS_LPN_STATUS_UPDATED_TSTMP,
  lkp_OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  lkp_OMS_ASN_ID AS lkp_OMS_ASN_ID,
  lkp_OMS_TC_ASN_ID AS lkp_OMS_TC_ASN_ID,
  lkp_OMS_FINAL_DEST_FACILITY_ALIAS_ID AS lkp_OMS_FINAL_DEST_FACILITY_ALIAS_ID,
  lkp_OMS_TRACKING_NBR AS lkp_OMS_TRACKING_NBR,
  lkp_BASE_CHARGE_AMT AS lkp_BASE_CHARGE_AMT,
  lkp_BASE_CHARGE_CURRENCY_CD AS lkp_BASE_CHARGE_CURRENCY_CD,
  lkp_ADDL_OPTION_CHARGE_AMT AS lkp_ADDL_OPTION_CHARGE_AMT,
  lkp_ADDL_OPTION_CHARGE_CURRENCY_CD AS lkp_ADDL_OPTION_CHARGE_CURRENCY_CD,
  lkp_ACTUAL_CHARGE_AMT AS lkp_ACTUAL_CHARGE_AMT,
  lkp_ACTUAL_CHARGE_CURRENCY_CD AS lkp_ACTUAL_CHARGE_CURRENCY_CD,
  lkp_DIST_CHARGE_AMT AS lkp_DIST_CHARGE_AMT,
  lkp_DIST_CHARGE_CURRENCY_CD AS lkp_DIST_CHARGE_CURRENCY_CD,
  lkp_FREIGHT_CHARGE_AMT AS lkp_FREIGHT_CHARGE_AMT,
  lkp_FREIGHT_CHARGE_CURRENCY_CD AS lkp_FREIGHT_CHARGE_CURRENCY_CD,
  lkp_OMS_CREATED_TSTMP AS lkp_OMS_CREATED_TSTMP,
  lkp_OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  lkp_LOAD_TSTMP AS lkp_LOAD_TSTMP,
  lkp_OMS_SHIPMENT_ID AS lkp_OMS_SHIPMENT_ID,
  SHIPMENT_ID AS SHIPMENT_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_LPN_4
WHERE
  ISNULL(lkp_OMS_LPN_ID)
  OR (
    NOT ISNULL(lkp_OMS_LPN_ID)
    AND (
      IFF (
        ISNULL(LTRIM(RTRIM(TC_LPN_ID))),
        ' ',
        LTRIM(RTRIM(TC_LPN_ID))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_TC_LPN_ID))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_TC_LPN_ID))
      )
      OR IFF(
        ISNULL(PARENT_LPN_ID),
        TO_INTEGER(999999999),
        PARENT_LPN_ID
      ) <> IFF(
        ISNULL(lkp_OMS_PARENT_LPN_ID),
        TO_INTEGER(999999999),
        lkp_OMS_PARENT_LPN_ID
      )
      OR IFF(ISNULL(LPN_TYPE), TO_INTEGER(999999999), LPN_TYPE) <> IFF(
        ISNULL(lkp_OMS_LPN_TYPE_ID),
        TO_INTEGER(999999999),
        lkp_OMS_LPN_TYPE_ID
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(FINAL_DEST_FACILITY_ALIAS_ID))),
        ' ',
        LTRIM(RTRIM(FINAL_DEST_FACILITY_ALIAS_ID))
      ) <> IFF(
        ISNULL(
          LTRIM(RTRIM(lkp_OMS_FINAL_DEST_FACILITY_ALIAS_ID))
        ),
        ' ',
        LTRIM(RTRIM(lkp_OMS_FINAL_DEST_FACILITY_ALIAS_ID))
      )
      OR IFF(
        ISNULL(LPN_STATUS),
        TO_INTEGER(999999999),
        LPN_STATUS
      ) <> IFF(
        ISNULL(lkp_OMS_LPN_STATUS_ID),
        TO_INTEGER(999999999),
        lkp_OMS_LPN_STATUS_ID
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TRACKING_NBR))),
        ' ',
        LTRIM(RTRIM(TRACKING_NBR))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_TRACKING_NBR))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_TRACKING_NBR))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(BASE_CHARGE_CURR_CODE))),
        ' ',
        LTRIM(RTRIM(BASE_CHARGE_CURR_CODE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_BASE_CHARGE_CURRENCY_CD))),
        ' ',
        LTRIM(RTRIM(lkp_BASE_CHARGE_CURRENCY_CD))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(ADDNL_OPTION_CHARGE_CURR_CODE))),
        ' ',
        LTRIM(RTRIM(ADDNL_OPTION_CHARGE_CURR_CODE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_ADDL_OPTION_CHARGE_CURRENCY_CD))),
        ' ',
        LTRIM(RTRIM(lkp_ADDL_OPTION_CHARGE_CURRENCY_CD))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(ACTUAL_CHARGE_CURR_CODE))),
        ' ',
        LTRIM(RTRIM(ACTUAL_CHARGE_CURR_CODE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_ACTUAL_CHARGE_CURRENCY_CD))),
        ' ',
        LTRIM(RTRIM(lkp_ACTUAL_CHARGE_CURRENCY_CD))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(DIST_CHARGE_CURR_CODE))),
        ' ',
        LTRIM(RTRIM(DIST_CHARGE_CURR_CODE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_DIST_CHARGE_CURRENCY_CD))),
        ' ',
        LTRIM(RTRIM(lkp_DIST_CHARGE_CURRENCY_CD))
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(FREIGHT_CHARGE_CURR_CODE))),
        ' ',
        LTRIM(RTRIM(FREIGHT_CHARGE_CURR_CODE))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_FREIGHT_CHARGE_CURRENCY_CD))),
        ' ',
        LTRIM(RTRIM(lkp_FREIGHT_CHARGE_CURRENCY_CD))
      )
      OR IFF(
        ISNULL(BASE_CHARGE),
        TO_INTEGER(999999999),
        BASE_CHARGE
      ) <> IFF(
        ISNULL(lkp_BASE_CHARGE_AMT),
        TO_INTEGER(999999999),
        lkp_BASE_CHARGE_AMT
      )
      OR IFF(
        ISNULL(ADDNL_OPTION_CHARGE),
        TO_INTEGER(999999999),
        ADDNL_OPTION_CHARGE
      ) <> IFF(
        ISNULL(lkp_ADDL_OPTION_CHARGE_AMT),
        TO_INTEGER(999999999),
        lkp_ADDL_OPTION_CHARGE_AMT
      )
      OR IFF(
        ISNULL(ACTUAL_CHARGE),
        TO_INTEGER(999999999),
        ACTUAL_CHARGE
      ) <> IFF(
        ISNULL(lkp_ACTUAL_CHARGE_AMT),
        TO_INTEGER(999999999),
        lkp_ACTUAL_CHARGE_AMT
      )
      OR IFF(
        ISNULL(DIST_CHARGE),
        TO_INTEGER(999999999),
        DIST_CHARGE
      ) <> IFF(
        ISNULL(lkp_DIST_CHARGE_AMT),
        TO_INTEGER(999999999),
        lkp_DIST_CHARGE_AMT
      )
      OR IFF(
        ISNULL(FREIGHT_CHARGE),
        TO_INTEGER(999999999),
        FREIGHT_CHARGE
      ) <> IFF(
        ISNULL(lkp_FREIGHT_CHARGE_AMT),
        TO_INTEGER(999999999),
        lkp_FREIGHT_CHARGE_AMT
      )
      OR IFF(ISNULL(ASN_ID), TO_INTEGER(999999999), ASN_ID) <> IFF(
        ISNULL(lkp_OMS_ASN_ID),
        TO_INTEGER(999999999),
        lkp_OMS_ASN_ID
      )
      OR IFF (
        ISNULL(LTRIM(RTRIM(TC_ASN_ID))),
        ' ',
        LTRIM(RTRIM(TC_ASN_ID))
      ) <> IFF(
        ISNULL(LTRIM(RTRIM(lkp_OMS_TC_ASN_ID))),
        ' ',
        LTRIM(RTRIM(lkp_OMS_TC_ASN_ID))
      )
      OR IFF(
        ISNULL(LPN_STATUS_UPDATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        LPN_STATUS_UPDATED_DTTM
      ) <> IFF(
        ISNULL(lkp_OMS_LPN_STATUS_UPDATED_TSTMP),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        lkp_OMS_LPN_STATUS_UPDATED_TSTMP
      )
      OR IFF(
        ISNULL(CREATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        CREATED_DTTM
      ) <> IFF(
        ISNULL(lkp_OMS_CREATED_TSTMP),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        lkp_OMS_CREATED_TSTMP
      )
      OR IFF(
        ISNULL(LAST_UPDATED_DTTM),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        LAST_UPDATED_DTTM
      ) <> IFF(
        ISNULL(lkp_OMS_LAST_UPDATED_TSTMP),
        To_DATE('12-31-9999', 'MM-DD-YYYY'),
        lkp_OMS_LAST_UPDATED_TSTMP
      )
      OR IFF(ISNULL(ORDER_ID), TO_INTEGER(999999999), ORDER_ID) <> IFF(
        ISNULL(lkp_OMS_ORDER_ID),
        TO_INTEGER(999999999),
        lkp_OMS_ORDER_ID
      )
      OR IFF(
        ISNULL(SHIPMENT_ID),
        TO_INTEGER(999999999),
        SHIPMENT_ID
      ) <> IFF(
        ISNULL(lkp_OMS_SHIPMENT_ID),
        TO_INTEGER(999999999),
        lkp_OMS_SHIPMENT_ID
      )
    )
  )"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("FTR_UNCHANGED_REC_5")

# COMMAND ----------
# DBTITLE 1, EXP_VALID_FLAG_6


query_6 = f"""SELECT
  LPN_ID AS LPN_ID,
  TC_LPN_ID AS TC_LPN_ID,
  PARENT_LPN_ID AS PARENT_LPN_ID,
  LPN_TYPE AS LPN_TYPE,
  FINAL_DEST_FACILITY_ALIAS_ID AS FINAL_DEST_FACILITY_ALIAS_ID,
  LPN_STATUS AS LPN_STATUS,
  LPN_STATUS_UPDATED_DTTM AS LPN_STATUS_UPDATED_DTTM,
  TRACKING_NBR AS TRACKING_NBR,
  BASE_CHARGE AS BASE_CHARGE,
  BASE_CHARGE_CURR_CODE AS BASE_CHARGE_CURR_CODE,
  ADDNL_OPTION_CHARGE AS ADDNL_OPTION_CHARGE,
  ADDNL_OPTION_CHARGE_CURR_CODE AS ADDNL_OPTION_CHARGE_CURR_CODE,
  ACTUAL_CHARGE AS ACTUAL_CHARGE,
  ACTUAL_CHARGE_CURR_CODE AS ACTUAL_CHARGE_CURR_CODE,
  DIST_CHARGE AS DIST_CHARGE,
  DIST_CHARGE_CURR_CODE AS DIST_CHARGE_CURR_CODE,
  FREIGHT_CHARGE AS FREIGHT_CHARGE,
  FREIGHT_CHARGE_CURR_CODE AS FREIGHT_CHARGE_CURR_CODE,
  TC_ASN_ID AS TC_ASN_ID,
  ASN_ID AS ASN_ID,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  ORDER_ID AS ORDER_ID,
  lkp_OMS_LPN_ID AS lkp_OMS_LPN_ID,
  lkp_LOAD_TSTMP AS lkp_LOAD_TSTMP,
  now() AS UPDATE_TSTMP_exp,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS LOAD_TSTMP_exp,
  IFF(ISNULL(lkp_OMS_LPN_ID), 1, 2) AS o_UPD_VALIDATOR,
  SHIPMENT_ID AS SHIPMENT_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FTR_UNCHANGED_REC_5"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("EXP_VALID_FLAG_6")

# COMMAND ----------
# DBTITLE 1, UPD_INS_UPD_7


query_7 = f"""SELECT
  LPN_ID AS LPN_ID,
  TC_LPN_ID AS TC_LPN_ID,
  PARENT_LPN_ID AS PARENT_LPN_ID,
  LPN_TYPE AS LPN_TYPE,
  LPN_STATUS AS LPN_STATUS,
  LPN_STATUS_UPDATED_DTTM AS LPN_STATUS_UPDATED_DTTM,
  ORDER_ID AS ORDER_ID,
  ASN_ID AS ASN_ID,
  TC_ASN_ID AS TC_ASN_ID,
  FINAL_DEST_FACILITY_ALIAS_ID AS FINAL_DEST_FACILITY_ALIAS_ID,
  TRACKING_NBR AS TRACKING_NBR,
  BASE_CHARGE AS BASE_CHARGE,
  BASE_CHARGE_CURR_CODE AS BASE_CHARGE_CURR_CODE,
  ADDNL_OPTION_CHARGE AS ADDNL_OPTION_CHARGE,
  ADDNL_OPTION_CHARGE_CURR_CODE AS ADDNL_OPTION_CHARGE_CURR_CODE,
  ACTUAL_CHARGE AS ACTUAL_CHARGE,
  ACTUAL_CHARGE_CURR_CODE AS ACTUAL_CHARGE_CURR_CODE,
  DIST_CHARGE AS DIST_CHARGE,
  DIST_CHARGE_CURR_CODE AS DIST_CHARGE_CURR_CODE,
  FREIGHT_CHARGE AS FREIGHT_CHARGE,
  FREIGHT_CHARGE_CURR_CODE AS FREIGHT_CHARGE_CURR_CODE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  UPDATE_TSTMP_exp AS UPDATE_TSTMP_exp,
  LOAD_TSTMP_exp AS LOAD_TSTMP_exp,
  o_UPD_VALIDATOR AS o_UPD_VALIDATOR,
  SHIPMENT_ID AS SHIPMENT_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(o_UPD_VALIDATOR, 1, 'DD_INSERT', 2, 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  EXP_VALID_FLAG_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("UPD_INS_UPD_7")

# COMMAND ----------
# DBTITLE 1, OMS_LPN


spark.sql("""MERGE INTO OMS_LPN AS TARGET
USING
  UPD_INS_UPD_7 AS SOURCE ON TARGET.OMS_LPN_ID = SOURCE.LPN_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_LPN_ID = SOURCE.LPN_ID,
  TARGET.OMS_TC_LPN_ID = SOURCE.TC_LPN_ID,
  TARGET.OMS_PARENT_LPN_ID = SOURCE.PARENT_LPN_ID,
  TARGET.OMS_LPN_TYPE_ID = SOURCE.LPN_TYPE,
  TARGET.OMS_LPN_STATUS_ID = SOURCE.LPN_STATUS,
  TARGET.OMS_LPN_STATUS_UPDATED_TSTMP = SOURCE.LPN_STATUS_UPDATED_DTTM,
  TARGET.OMS_ORDER_ID = SOURCE.ORDER_ID,
  TARGET.OMS_SHIPMENT_ID = SOURCE.SHIPMENT_ID,
  TARGET.OMS_ASN_ID = SOURCE.ASN_ID,
  TARGET.OMS_TC_ASN_ID = SOURCE.TC_ASN_ID,
  TARGET.OMS_FINAL_DEST_FACILITY_ALIAS_ID = SOURCE.FINAL_DEST_FACILITY_ALIAS_ID,
  TARGET.OMS_TRACKING_NBR = SOURCE.TRACKING_NBR,
  TARGET.BASE_CHARGE_AMT = SOURCE.BASE_CHARGE,
  TARGET.BASE_CHARGE_CURRENCY_CD = SOURCE.BASE_CHARGE_CURR_CODE,
  TARGET.ADDL_OPTION_CHARGE_AMT = SOURCE.ADDNL_OPTION_CHARGE,
  TARGET.ADDL_OPTION_CHARGE_CURRENCY_CD = SOURCE.ADDNL_OPTION_CHARGE_CURR_CODE,
  TARGET.ACTUAL_CHARGE_AMT = SOURCE.ACTUAL_CHARGE,
  TARGET.ACTUAL_CHARGE_CURRENCY_CD = SOURCE.ACTUAL_CHARGE_CURR_CODE,
  TARGET.DIST_CHARGE_AMT = SOURCE.DIST_CHARGE,
  TARGET.DIST_CHARGE_CURRENCY_CD = SOURCE.DIST_CHARGE_CURR_CODE,
  TARGET.FREIGHT_CHARGE_AMT = SOURCE.FREIGHT_CHARGE,
  TARGET.FREIGHT_CHARGE_CURRENCY_CD = SOURCE.FREIGHT_CHARGE_CURR_CODE,
  TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM,
  TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM,
  TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP_exp,
  TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP_exp
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_TC_LPN_ID = SOURCE.TC_LPN_ID
  AND TARGET.OMS_PARENT_LPN_ID = SOURCE.PARENT_LPN_ID
  AND TARGET.OMS_LPN_TYPE_ID = SOURCE.LPN_TYPE
  AND TARGET.OMS_LPN_STATUS_ID = SOURCE.LPN_STATUS
  AND TARGET.OMS_LPN_STATUS_UPDATED_TSTMP = SOURCE.LPN_STATUS_UPDATED_DTTM
  AND TARGET.OMS_ORDER_ID = SOURCE.ORDER_ID
  AND TARGET.OMS_SHIPMENT_ID = SOURCE.SHIPMENT_ID
  AND TARGET.OMS_ASN_ID = SOURCE.ASN_ID
  AND TARGET.OMS_TC_ASN_ID = SOURCE.TC_ASN_ID
  AND TARGET.OMS_FINAL_DEST_FACILITY_ALIAS_ID = SOURCE.FINAL_DEST_FACILITY_ALIAS_ID
  AND TARGET.OMS_TRACKING_NBR = SOURCE.TRACKING_NBR
  AND TARGET.BASE_CHARGE_AMT = SOURCE.BASE_CHARGE
  AND TARGET.BASE_CHARGE_CURRENCY_CD = SOURCE.BASE_CHARGE_CURR_CODE
  AND TARGET.ADDL_OPTION_CHARGE_AMT = SOURCE.ADDNL_OPTION_CHARGE
  AND TARGET.ADDL_OPTION_CHARGE_CURRENCY_CD = SOURCE.ADDNL_OPTION_CHARGE_CURR_CODE
  AND TARGET.ACTUAL_CHARGE_AMT = SOURCE.ACTUAL_CHARGE
  AND TARGET.ACTUAL_CHARGE_CURRENCY_CD = SOURCE.ACTUAL_CHARGE_CURR_CODE
  AND TARGET.DIST_CHARGE_AMT = SOURCE.DIST_CHARGE
  AND TARGET.DIST_CHARGE_CURRENCY_CD = SOURCE.DIST_CHARGE_CURR_CODE
  AND TARGET.FREIGHT_CHARGE_AMT = SOURCE.FREIGHT_CHARGE
  AND TARGET.FREIGHT_CHARGE_CURRENCY_CD = SOURCE.FREIGHT_CHARGE_CURR_CODE
  AND TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM
  AND TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM
  AND TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP_exp
  AND TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP_exp THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_LPN_ID,
    TARGET.OMS_TC_LPN_ID,
    TARGET.OMS_PARENT_LPN_ID,
    TARGET.OMS_LPN_TYPE_ID,
    TARGET.OMS_LPN_STATUS_ID,
    TARGET.OMS_LPN_STATUS_UPDATED_TSTMP,
    TARGET.OMS_ORDER_ID,
    TARGET.OMS_SHIPMENT_ID,
    TARGET.OMS_ASN_ID,
    TARGET.OMS_TC_ASN_ID,
    TARGET.OMS_FINAL_DEST_FACILITY_ALIAS_ID,
    TARGET.OMS_TRACKING_NBR,
    TARGET.BASE_CHARGE_AMT,
    TARGET.BASE_CHARGE_CURRENCY_CD,
    TARGET.ADDL_OPTION_CHARGE_AMT,
    TARGET.ADDL_OPTION_CHARGE_CURRENCY_CD,
    TARGET.ACTUAL_CHARGE_AMT,
    TARGET.ACTUAL_CHARGE_CURRENCY_CD,
    TARGET.DIST_CHARGE_AMT,
    TARGET.DIST_CHARGE_CURRENCY_CD,
    TARGET.FREIGHT_CHARGE_AMT,
    TARGET.FREIGHT_CHARGE_CURRENCY_CD,
    TARGET.OMS_CREATED_TSTMP,
    TARGET.OMS_LAST_UPDATED_TSTMP,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.LPN_ID,
    SOURCE.TC_LPN_ID,
    SOURCE.PARENT_LPN_ID,
    SOURCE.LPN_TYPE,
    SOURCE.LPN_STATUS,
    SOURCE.LPN_STATUS_UPDATED_DTTM,
    SOURCE.ORDER_ID,
    SOURCE.SHIPMENT_ID,
    SOURCE.ASN_ID,
    SOURCE.TC_ASN_ID,
    SOURCE.FINAL_DEST_FACILITY_ALIAS_ID,
    SOURCE.TRACKING_NBR,
    SOURCE.BASE_CHARGE,
    SOURCE.BASE_CHARGE_CURR_CODE,
    SOURCE.ADDNL_OPTION_CHARGE,
    SOURCE.ADDNL_OPTION_CHARGE_CURR_CODE,
    SOURCE.ACTUAL_CHARGE,
    SOURCE.ACTUAL_CHARGE_CURR_CODE,
    SOURCE.DIST_CHARGE,
    SOURCE.DIST_CHARGE_CURR_CODE,
    SOURCE.FREIGHT_CHARGE,
    SOURCE.FREIGHT_CHARGE_CURR_CODE,
    SOURCE.CREATED_DTTM,
    SOURCE.LAST_UPDATED_DTTM,
    SOURCE.UPDATE_TSTMP_exp,
    SOURCE.LOAD_TSTMP_exp
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Lpn")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_Lpn", mainWorkflowId, parentName)
