# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Payment_Detail_Hist_Load")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_A_Payment_Detail_Hist_Load", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, SRC_NZ_OMS_A_PAYMENT_DETAIL_0


query_0 = f"""SELECT
  OMS_PAYMENT_DETAIL_ID AS OMS_PAYMENT_DETAIL_ID,
  OMS_ENTITY_TYPE_ID AS OMS_ENTITY_TYPE_ID,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_NBR AS OMS_ENTITY_NBR,
  CARD_NUMBER AS CARD_NUMBER,
  BILL_TO_FIRST_NAME AS BILL_TO_FIRST_NAME,
  BILL_TO_MIDDLE_NAME AS BILL_TO_MIDDLE_NAME,
  BILL_TO_LAST_NAME AS BILL_TO_LAST_NAME,
  BILL_TO_ADDR_LINE1 AS BILL_TO_ADDR_LINE1,
  BILL_TO_ADDR_LINE2 AS BILL_TO_ADDR_LINE2,
  BILL_TO_CITY AS BILL_TO_CITY,
  BILL_TO_STATE_PROV AS BILL_TO_STATE_PROV,
  BILL_TO_POSTAL_CD AS BILL_TO_POSTAL_CD,
  BILL_TO_COUNTRY_CD AS BILL_TO_COUNTRY_CD,
  BILL_TO_PHONE_NBR AS BILL_TO_PHONE_NBR,
  BILL_TO_EMAIL AS BILL_TO_EMAIL,
  OMS_PAYMENT_METHOD_ID AS OMS_PAYMENT_METHOD_ID,
  AFTERPAY_FLG AS AFTERPAY_FLG,
  REQ_AUTH_AMT AS REQ_AUTH_AMT,
  REQ_SETTLEMENT_AMT AS REQ_SETTLEMENT_AMT,
  REQ_REFUND_AMT AS REQ_REFUND_AMT,
  CURRENCY_CD AS CURRENCY_CD,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_PAYMENT_DETAIL"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("SRC_NZ_OMS_A_PAYMENT_DETAIL_0")

# COMMAND ----------
# DBTITLE 1, SQ_NZ_OMS_A_PAYMENT_DETAIL_1


query_1 = f"""SELECT
  OMS_PAYMENT_DETAIL_ID AS OMS_PAYMENT_DETAIL_ID,
  OMS_ENTITY_TYPE_ID AS OMS_ENTITY_TYPE_ID,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_NBR AS OMS_ENTITY_NBR,
  CARD_NUMBER AS CARD_NUMBER,
  BILL_TO_FIRST_NAME AS BILL_TO_FIRST_NAME,
  BILL_TO_MIDDLE_NAME AS BILL_TO_MIDDLE_NAME,
  BILL_TO_LAST_NAME AS BILL_TO_LAST_NAME,
  BILL_TO_ADDR_LINE1 AS BILL_TO_ADDR_LINE1,
  BILL_TO_ADDR_LINE2 AS BILL_TO_ADDR_LINE2,
  BILL_TO_CITY AS BILL_TO_CITY,
  BILL_TO_STATE_PROV AS BILL_TO_STATE_PROV,
  BILL_TO_POSTAL_CD AS BILL_TO_POSTAL_CD,
  BILL_TO_COUNTRY_CD AS BILL_TO_COUNTRY_CD,
  BILL_TO_PHONE_NBR AS BILL_TO_PHONE_NBR,
  BILL_TO_EMAIL AS BILL_TO_EMAIL,
  OMS_PAYMENT_METHOD_ID AS OMS_PAYMENT_METHOD_ID,
  AFTERPAY_FLG AS AFTERPAY_FLG,
  REQ_AUTH_AMT AS REQ_AUTH_AMT,
  REQ_SETTLEMENT_AMT AS REQ_SETTLEMENT_AMT,
  REQ_REFUND_AMT AS REQ_REFUND_AMT,
  CURRENCY_CD AS CURRENCY_CD,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  SRC_NZ_OMS_A_PAYMENT_DETAIL_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_NZ_OMS_A_PAYMENT_DETAIL_1")

# COMMAND ----------
# DBTITLE 1, SRC_Oracle_A_PAYMENT_DETAIL_2


query_2 = f"""SELECT
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  EXTERNAL_PAYMENT_DETAIL_ID AS EXTERNAL_PAYMENT_DETAIL_ID,
  COMPANY_ID AS COMPANY_ID,
  ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  ENTITY_ID AS ENTITY_ID,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  CARD_TYPE_ID AS CARD_TYPE_ID,
  CARD_NUMBER AS CARD_NUMBER,
  CARD_DISPLAY_NUMBER AS CARD_DISPLAY_NUMBER,
  NAME_ON_CARD AS NAME_ON_CARD,
  CARD_EXP_MONTH AS CARD_EXP_MONTH,
  CARD_EXP_YEAR AS CARD_EXP_YEAR,
  BILL_TO_FIRST_NAME AS BILL_TO_FIRST_NAME,
  BILL_TO_MIDDLE_NAME AS BILL_TO_MIDDLE_NAME,
  BILL_TO_LAST_NAME AS BILL_TO_LAST_NAME,
  BILL_TO_ADDRESS_LINE1 AS BILL_TO_ADDRESS_LINE1,
  BILL_TO_ADDRESS_LINE2 AS BILL_TO_ADDRESS_LINE2,
  BILL_TO_CITY AS BILL_TO_CITY,
  BILLTO_STATE_PROV AS BILLTO_STATE_PROV,
  BILL_TO_POSTAL_CODE AS BILL_TO_POSTAL_CODE,
  BILL_TO_COUNTRY_CODE AS BILL_TO_COUNTRY_CODE,
  BILL_TO_PHONE_NUMBER AS BILL_TO_PHONE_NUMBER,
  BILL_TO_EMAIL AS BILL_TO_EMAIL,
  SECURITY_CODE AS SECURITY_CODE,
  REQ_AUTH_AMOUNT AS REQ_AUTH_AMOUNT,
  REQ_SETTLEMENT_AMOUNT AS REQ_SETTLEMENT_AMOUNT,
  REQ_REFUND_AMOUNT AS REQ_REFUND_AMOUNT,
  CURRENCY_CODE AS CURRENCY_CODE,
  CHARGE_SEQUENCE AS CHARGE_SEQUENCE,
  IS_COMPLETE AS IS_COMPLETE,
  IS_SUSPENDED AS IS_SUSPENDED,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  REF_FIELD1 AS REF_FIELD1,
  REF_FIELD2 AS REF_FIELD2,
  REF_FIELD3 AS REF_FIELD3,
  IS_DELETED AS IS_DELETED,
  PAYMENT_METHOD AS PAYMENT_METHOD,
  REF_FIELD4 AS REF_FIELD4,
  REF_FIELD5 AS REF_FIELD5,
  REF_FIELD6 AS REF_FIELD6,
  REF_FIELD7 AS REF_FIELD7,
  REF_FIELD8 AS REF_FIELD8,
  REF_FIELD9 AS REF_FIELD9,
  REF_FIELD10 AS REF_FIELD10,
  REF_NUM1 AS REF_NUM1,
  REF_NUM2 AS REF_NUM2,
  REF_NUM3 AS REF_NUM3,
  REF_NUM4 AS REF_NUM4,
  REF_NUM5 AS REF_NUM5,
  PAYMENT_ENTRY_TYPE_ID AS PAYMENT_ENTRY_TYPE_ID,
  ACCOUNT_TYPE_ID AS ACCOUNT_TYPE_ID,
  ROUTING_TRANSIT_NUMBER AS ROUTING_TRANSIT_NUMBER,
  ROUTING_DISPLAY_NUMBER AS ROUTING_DISPLAY_NUMBER,
  CHECK_NUMBER AS CHECK_NUMBER,
  DRIVERS_LICENSE_NUMBER AS DRIVERS_LICENSE_NUMBER,
  DRIVERS_LICENSE_STATE AS DRIVERS_LICENSE_STATE,
  DRIVERS_LICENSE_COUNTRY_CODE AS DRIVERS_LICENSE_COUNTRY_CODE,
  BUSINESS_NAME AS BUSINESS_NAME,
  BUSINESS_TAX_ID AS BUSINESS_TAX_ID,
  BILL_TO_ADDRESS_LINE3 AS BILL_TO_ADDRESS_LINE3,
  ORIG_ENTITY_NUMBER AS ORIG_ENTITY_NUMBER
FROM
  A_PAYMENT_DETAIL"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("SRC_Oracle_A_PAYMENT_DETAIL_2")

# COMMAND ----------
# DBTITLE 1, SQ_Oracle_A_PAYMENT_DETAIL_3


query_3 = f"""SELECT
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  EXTERNAL_PAYMENT_DETAIL_ID AS EXTERNAL_PAYMENT_DETAIL_ID,
  COMPANY_ID AS COMPANY_ID,
  ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  ENTITY_ID AS ENTITY_ID,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  CARD_TYPE_ID AS CARD_TYPE_ID,
  CARD_NUMBER AS CARD_NUMBER,
  CARD_DISPLAY_NUMBER AS CARD_DISPLAY_NUMBER,
  NAME_ON_CARD AS NAME_ON_CARD,
  CARD_EXP_MONTH AS CARD_EXP_MONTH,
  CARD_EXP_YEAR AS CARD_EXP_YEAR,
  BILL_TO_FIRST_NAME AS BILL_TO_FIRST_NAME,
  BILL_TO_MIDDLE_NAME AS BILL_TO_MIDDLE_NAME,
  BILL_TO_LAST_NAME AS BILL_TO_LAST_NAME,
  BILL_TO_ADDRESS_LINE1 AS BILL_TO_ADDRESS_LINE1,
  BILL_TO_ADDRESS_LINE2 AS BILL_TO_ADDRESS_LINE2,
  BILL_TO_CITY AS BILL_TO_CITY,
  BILLTO_STATE_PROV AS BILLTO_STATE_PROV,
  BILL_TO_POSTAL_CODE AS BILL_TO_POSTAL_CODE,
  BILL_TO_COUNTRY_CODE AS BILL_TO_COUNTRY_CODE,
  BILL_TO_PHONE_NUMBER AS BILL_TO_PHONE_NUMBER,
  BILL_TO_EMAIL AS BILL_TO_EMAIL,
  SECURITY_CODE AS SECURITY_CODE,
  REQ_AUTH_AMOUNT AS REQ_AUTH_AMOUNT,
  REQ_SETTLEMENT_AMOUNT AS REQ_SETTLEMENT_AMOUNT,
  REQ_REFUND_AMOUNT AS REQ_REFUND_AMOUNT,
  CURRENCY_CODE AS CURRENCY_CODE,
  CHARGE_SEQUENCE AS CHARGE_SEQUENCE,
  IS_COMPLETE AS IS_COMPLETE,
  IS_SUSPENDED AS IS_SUSPENDED,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  REF_FIELD1 AS REF_FIELD1,
  REF_FIELD2 AS REF_FIELD2,
  REF_FIELD3 AS REF_FIELD3,
  IS_DELETED AS IS_DELETED,
  PAYMENT_METHOD AS PAYMENT_METHOD,
  REF_FIELD4 AS REF_FIELD4,
  REF_FIELD5 AS REF_FIELD5,
  REF_FIELD6 AS REF_FIELD6,
  REF_FIELD7 AS REF_FIELD7,
  REF_FIELD8 AS REF_FIELD8,
  REF_FIELD9 AS REF_FIELD9,
  REF_FIELD10 AS REF_FIELD10,
  REF_NUM1 AS REF_NUM1,
  REF_NUM2 AS REF_NUM2,
  REF_NUM3 AS REF_NUM3,
  REF_NUM4 AS REF_NUM4,
  REF_NUM5 AS REF_NUM5,
  PAYMENT_ENTRY_TYPE_ID AS PAYMENT_ENTRY_TYPE_ID,
  ACCOUNT_TYPE_ID AS ACCOUNT_TYPE_ID,
  ROUTING_TRANSIT_NUMBER AS ROUTING_TRANSIT_NUMBER,
  ROUTING_DISPLAY_NUMBER AS ROUTING_DISPLAY_NUMBER,
  CHECK_NUMBER AS CHECK_NUMBER,
  DRIVERS_LICENSE_NUMBER AS DRIVERS_LICENSE_NUMBER,
  DRIVERS_LICENSE_STATE AS DRIVERS_LICENSE_STATE,
  DRIVERS_LICENSE_COUNTRY_CODE AS DRIVERS_LICENSE_COUNTRY_CODE,
  BUSINESS_NAME AS BUSINESS_NAME,
  BUSINESS_TAX_ID AS BUSINESS_TAX_ID,
  BILL_TO_ADDRESS_LINE3 AS BILL_TO_ADDRESS_LINE3,
  ORIG_ENTITY_NUMBER AS ORIG_ENTITY_NUMBER,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  SRC_Oracle_A_PAYMENT_DETAIL_2
WHERE
  SRC_Oracle_A_PAYMENT_DETAIL_2.CREATED_DTTM >= now() - 120"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Oracle_A_PAYMENT_DETAIL_3")

# COMMAND ----------
# DBTITLE 1, JNR_PAYMENT_DETAIL_DATA_4


query_4 = f"""SELECT
  MASTER.PAYMENT_DETAIL_ID AS lkp_PAYMENT_DETAIL_ID,
  MASTER.CARD_NUMBER AS CARD_NUMBER,
  DETAIL.OMS_PAYMENT_DETAIL_ID AS OMS_PAYMENT_DETAIL_ID,
  DETAIL.OMS_ENTITY_TYPE_ID AS OMS_ENTITY_TYPE_ID,
  DETAIL.OMS_ENTITY_ID AS OMS_ENTITY_ID,
  DETAIL.OMS_ENTITY_NBR AS OMS_ENTITY_NBR,
  DETAIL.BILL_TO_FIRST_NAME AS BILL_TO_FIRST_NAME,
  DETAIL.BILL_TO_MIDDLE_NAME AS BILL_TO_MIDDLE_NAME,
  DETAIL.BILL_TO_LAST_NAME AS BILL_TO_LAST_NAME,
  DETAIL.BILL_TO_ADDR_LINE1 AS BILL_TO_ADDR_LINE1,
  DETAIL.BILL_TO_ADDR_LINE2 AS BILL_TO_ADDR_LINE2,
  DETAIL.BILL_TO_CITY AS BILL_TO_CITY,
  DETAIL.BILL_TO_STATE_PROV AS BILL_TO_STATE_PROV,
  DETAIL.BILL_TO_POSTAL_CD AS BILL_TO_POSTAL_CD,
  DETAIL.BILL_TO_COUNTRY_CD AS BILL_TO_COUNTRY_CD,
  DETAIL.BILL_TO_PHONE_NBR AS BILL_TO_PHONE_NBR,
  DETAIL.BILL_TO_EMAIL AS BILL_TO_EMAIL,
  DETAIL.OMS_PAYMENT_METHOD_ID AS OMS_PAYMENT_METHOD_ID,
  DETAIL.AFTERPAY_FLG AS AFTERPAY_FLG,
  DETAIL.REQ_AUTH_AMT AS REQ_AUTH_AMT,
  DETAIL.REQ_SETTLEMENT_AMT AS REQ_SETTLEMENT_AMT,
  DETAIL.REQ_REFUND_AMT AS REQ_REFUND_AMT,
  DETAIL.CURRENCY_CD AS CURRENCY_CD,
  DETAIL.OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  DETAIL.OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  DETAIL.UPDATE_TSTMP AS UPDATE_TSTMP,
  DETAIL.LOAD_TSTMP AS LOAD_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Oracle_A_PAYMENT_DETAIL_3 MASTER
  INNER JOIN SQ_NZ_OMS_A_PAYMENT_DETAIL_1 DETAIL ON MASTER.PAYMENT_DETAIL_ID = DETAIL.OMS_PAYMENT_DETAIL_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_PAYMENT_DETAIL_DATA_4")

# COMMAND ----------
# DBTITLE 1, FLT_PAYMENT_DETAIL_MISSING_DATA_5


query_5 = f"""SELECT
  OMS_PAYMENT_DETAIL_ID AS OMS_PAYMENT_DETAIL_ID,
  OMS_ENTITY_TYPE_ID AS OMS_ENTITY_TYPE_ID,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_NBR AS OMS_ENTITY_NBR,
  CARD_NUMBER AS CARD_NUMBER,
  BILL_TO_FIRST_NAME AS BILL_TO_FIRST_NAME,
  BILL_TO_MIDDLE_NAME AS BILL_TO_MIDDLE_NAME,
  BILL_TO_LAST_NAME AS BILL_TO_LAST_NAME,
  BILL_TO_ADDR_LINE1 AS BILL_TO_ADDR_LINE1,
  BILL_TO_ADDR_LINE2 AS BILL_TO_ADDR_LINE2,
  BILL_TO_CITY AS BILL_TO_CITY,
  BILL_TO_STATE_PROV AS BILL_TO_STATE_PROV,
  BILL_TO_POSTAL_CD AS BILL_TO_POSTAL_CD,
  BILL_TO_COUNTRY_CD AS BILL_TO_COUNTRY_CD,
  BILL_TO_PHONE_NBR AS BILL_TO_PHONE_NBR,
  BILL_TO_EMAIL AS BILL_TO_EMAIL,
  OMS_PAYMENT_METHOD_ID AS OMS_PAYMENT_METHOD_ID,
  AFTERPAY_FLG AS AFTERPAY_FLG,
  REQ_AUTH_AMT AS REQ_AUTH_AMT,
  REQ_SETTLEMENT_AMT AS REQ_SETTLEMENT_AMT,
  REQ_REFUND_AMT AS REQ_REFUND_AMT,
  CURRENCY_CD AS CURRENCY_CD,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_PAYMENT_DETAIL_DATA_4
WHERE
  NOT(ISNULL(CARD_NUMBER))"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("FLT_PAYMENT_DETAIL_MISSING_DATA_5")

# COMMAND ----------
# DBTITLE 1, EXP_LOAD_TSTMP_6


query_6 = f"""SELECT
  OMS_PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  OMS_ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  OMS_ENTITY_ID AS ENTITY_ID,
  OMS_ENTITY_NBR AS ENTITY_NUMBER,
  CARD_NUMBER AS CARD_NUMBER,
  BILL_TO_FIRST_NAME AS BILL_TO_FIRST_NAME,
  BILL_TO_MIDDLE_NAME AS BILL_TO_MIDDLE_NAME,
  BILL_TO_LAST_NAME AS BILL_TO_LAST_NAME,
  BILL_TO_ADDR_LINE1 AS BILL_TO_ADDRESS_LINE1,
  BILL_TO_ADDR_LINE2 AS BILL_TO_ADDRESS_LINE2,
  BILL_TO_CITY AS BILL_TO_CITY,
  BILL_TO_STATE_PROV AS BILLTO_STATE_PROV,
  BILL_TO_POSTAL_CD AS BILL_TO_POSTAL_CODE,
  BILL_TO_COUNTRY_CD AS BILL_TO_COUNTRY_CODE,
  BILL_TO_PHONE_NBR AS BILL_TO_PHONE_NUMBER,
  BILL_TO_EMAIL AS BILL_TO_EMAIL,
  REQ_AUTH_AMT AS REQ_AUTH_AMOUNT,
  REQ_SETTLEMENT_AMT AS REQ_SETTLEMENT_AMOUNT,
  REQ_REFUND_AMT AS REQ_REFUND_AMOUNT,
  CURRENCY_CD AS CURRENCY_CODE,
  OMS_CREATED_TSTMP AS CREATED_DTTM,
  OMS_LAST_UPDATED_TSTMP AS LAST_UPDATED_DTTM,
  OMS_PAYMENT_METHOD_ID AS PAYMENT_METHOD,
  AFTERPAY_FLG AS AFTERPAY_FLG,
  LOAD_TSTMP AS LOAD_TSTMP,
  now() AS UPDATE_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FLT_PAYMENT_DETAIL_MISSING_DATA_5"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("EXP_LOAD_TSTMP_6")

# COMMAND ----------
# DBTITLE 1, UPD_CARD_NUMBER_7


query_7 = f"""SELECT
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  ENTITY_TYPE_ID AS ENTITY_TYPE_ID,
  ENTITY_ID AS ENTITY_ID,
  ENTITY_NUMBER AS ENTITY_NUMBER,
  CARD_NUMBER AS CARD_NUMBER,
  BILL_TO_FIRST_NAME AS BILL_TO_FIRST_NAME,
  BILL_TO_MIDDLE_NAME AS BILL_TO_MIDDLE_NAME,
  BILL_TO_LAST_NAME AS BILL_TO_LAST_NAME,
  BILL_TO_ADDRESS_LINE1 AS BILL_TO_ADDRESS_LINE1,
  BILL_TO_ADDRESS_LINE2 AS BILL_TO_ADDRESS_LINE2,
  BILL_TO_CITY AS BILL_TO_CITY,
  BILLTO_STATE_PROV AS BILLTO_STATE_PROV,
  BILL_TO_POSTAL_CODE AS BILL_TO_POSTAL_CODE,
  BILL_TO_COUNTRY_CODE AS BILL_TO_COUNTRY_CODE,
  BILL_TO_PHONE_NUMBER AS BILL_TO_PHONE_NUMBER,
  BILL_TO_EMAIL AS BILL_TO_EMAIL,
  REQ_AUTH_AMOUNT AS REQ_AUTH_AMOUNT,
  REQ_SETTLEMENT_AMOUNT AS REQ_SETTLEMENT_AMOUNT,
  REQ_REFUND_AMOUNT AS REQ_REFUND_AMOUNT,
  CURRENCY_CODE AS CURRENCY_CODE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  PAYMENT_METHOD AS PAYMENT_METHOD,
  AFTERPAY_FLG AS AFTERPAY_FLG,
  LOAD_TSTMP AS LOAD_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_LOAD_TSTMP_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("UPD_CARD_NUMBER_7")

# COMMAND ----------
# DBTITLE 1, OMS_A_PAYMENT_DETAIL


spark.sql("""MERGE INTO OMS_A_PAYMENT_DETAIL AS TARGET
USING
  UPD_CARD_NUMBER_7 AS SOURCE ON TARGET.OMS_PAYMENT_DETAIL_ID = SOURCE.PAYMENT_DETAIL_ID
  WHEN MATCHED THEN
UPDATE
SET
  TARGET.OMS_PAYMENT_DETAIL_ID = SOURCE.PAYMENT_DETAIL_ID,
  TARGET.OMS_ENTITY_TYPE_ID = SOURCE.ENTITY_TYPE_ID,
  TARGET.OMS_ENTITY_ID = SOURCE.ENTITY_ID,
  TARGET.OMS_ENTITY_NBR = SOURCE.ENTITY_NUMBER,
  TARGET.CARD_NUMBER = SOURCE.CARD_NUMBER,
  TARGET.BILL_TO_FIRST_NAME = SOURCE.BILL_TO_FIRST_NAME,
  TARGET.BILL_TO_MIDDLE_NAME = SOURCE.BILL_TO_MIDDLE_NAME,
  TARGET.BILL_TO_LAST_NAME = SOURCE.BILL_TO_LAST_NAME,
  TARGET.BILL_TO_ADDR_LINE1 = SOURCE.BILL_TO_ADDRESS_LINE1,
  TARGET.BILL_TO_ADDR_LINE2 = SOURCE.BILL_TO_ADDRESS_LINE2,
  TARGET.BILL_TO_CITY = SOURCE.BILL_TO_CITY,
  TARGET.BILL_TO_STATE_PROV = SOURCE.BILLTO_STATE_PROV,
  TARGET.BILL_TO_POSTAL_CD = SOURCE.BILL_TO_POSTAL_CODE,
  TARGET.BILL_TO_COUNTRY_CD = SOURCE.BILL_TO_COUNTRY_CODE,
  TARGET.BILL_TO_PHONE_NBR = SOURCE.BILL_TO_PHONE_NUMBER,
  TARGET.BILL_TO_EMAIL = SOURCE.BILL_TO_EMAIL,
  TARGET.OMS_PAYMENT_METHOD_ID = SOURCE.PAYMENT_METHOD,
  TARGET.AFTERPAY_FLG = SOURCE.AFTERPAY_FLG,
  TARGET.REQ_AUTH_AMT = SOURCE.REQ_AUTH_AMOUNT,
  TARGET.REQ_SETTLEMENT_AMT = SOURCE.REQ_SETTLEMENT_AMOUNT,
  TARGET.REQ_REFUND_AMT = SOURCE.REQ_REFUND_AMOUNT,
  TARGET.CURRENCY_CD = SOURCE.CURRENCY_CODE,
  TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM,
  TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM,
  TARGET.UPDATE_TSTMP = SOURCE.UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.LOAD_TSTMP""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Payment_Detail_Hist_Load")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_A_Payment_Detail_Hist_Load", mainWorkflowId, parentName)
