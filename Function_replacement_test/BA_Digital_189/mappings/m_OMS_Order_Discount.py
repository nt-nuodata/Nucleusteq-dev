# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Order_Discount")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_OMS_Order_Discount", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_OBJECT_REASON_CODES_0


query_0 = f"""SELECT
  OMS_REASON_CODES_ID AS OMS_REASON_CODES_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  OMS_REASON_CD AS OMS_REASON_CD,
  OMS_REASON_TYPE AS OMS_REASON_TYPE,
  COMMENTS AS COMMENTS,
  REF_FIELD_1 AS REF_FIELD_1,
  REF_FIELD_2 AS REF_FIELD_2,
  ACTIVE_FLAG AS ACTIVE_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_OBJECT_REASON_CODES"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_OBJECT_REASON_CODES_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_OBJECT_REASON_CODES_1


query_1 = f"""SELECT
  OMS_REASON_CODES_ID AS OMS_REASON_CODES_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  OMS_REASON_CD AS OMS_REASON_CD,
  OMS_REASON_TYPE AS OMS_REASON_TYPE,
  COMMENTS AS COMMENTS,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_OBJECT_REASON_CODES_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_OBJECT_REASON_CODES_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ACCESS_CONTROL_2


query_2 = f"""SELECT
  OMS_ACCESS_CONTROL_ID AS OMS_ACCESS_CONTROL_ID,
  OMS_UCL_USER_ID AS OMS_UCL_USER_ID,
  OMS_ROLE_ID AS OMS_ROLE_ID,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ACCESS_CONTROL"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_ACCESS_CONTROL_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ACCESS_CONTROL_3


query_3 = f"""SELECT
  OMS_UCL_USER_ID AS OMS_UCL_USER_ID,
  OMS_ROLE_ID AS OMS_ROLE_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ACCESS_CONTROL_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_ACCESS_CONTROL_3")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ROLE_4


query_4 = f"""SELECT
  OMS_ROLE_ID AS OMS_ROLE_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  OMS_ROLE_NAME AS OMS_ROLE_NAME,
  OMS_ROLE_DESC AS OMS_ROLE_DESC,
  OMS_ROLE_TYPE_ID AS OMS_ROLE_TYPE_ID,
  ACTIVE_FLAG AS ACTIVE_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ROLE"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("Shortcut_to_OMS_ROLE_4")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ROLE_5


query_5 = f"""SELECT
  OMS_ROLE_ID AS OMS_ROLE_ID,
  OMS_ROLE_NAME AS OMS_ROLE_NAME,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ROLE_4
WHERE
  OMS_ROLE_NAME IN (
    'Store Manager',
    'CSR',
    'Store Associate',
    'CSR Supervisor'
  )"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("SQ_Shortcut_to_OMS_ROLE_5")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_DISCOUNT_TYPE_6


query_6 = f"""SELECT
  OMS_DISCOUNT_TYPE_ID AS OMS_DISCOUNT_TYPE_ID,
  OMS_DISCOUNT_TYPE_NAME AS OMS_DISCOUNT_TYPE_NAME,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_DISCOUNT_TYPE"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("Shortcut_to_OMS_A_DISCOUNT_TYPE_6")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_A_DISCOUNT_TYPE_7


query_7 = f"""SELECT
  OMS_DISCOUNT_TYPE_ID AS OMS_DISCOUNT_TYPE_ID,
  OMS_DISCOUNT_TYPE_NAME AS OMS_DISCOUNT_TYPE_NAME,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_DISCOUNT_TYPE_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("SQ_Shortcut_to_OMS_A_DISCOUNT_TYPE_7")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_A_DISCOUNT_DETAIL_8


query_8 = f"""SELECT
  OMS_DISCOUNT_DETAIL_ID AS OMS_DISCOUNT_DETAIL_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  OMS_ENTITY_TYPE_ID AS OMS_ENTITY_TYPE_ID,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_LINE_ID AS OMS_ENTITY_LINE_ID,
  OMS_DISCOUNT_TYPE_ID AS OMS_DISCOUNT_TYPE_ID,
  OMS_DISCOUNT_ID AS OMS_DISCOUNT_ID,
  OMS_EXT_DISCOUNT_ID AS OMS_EXT_DISCOUNT_ID,
  OMS_DISCOUNT_STATUS_ID AS OMS_DISCOUNT_STATUS_ID,
  OMS_REASON_ID AS OMS_REASON_ID,
  DISCOUNT_AMT AS DISCOUNT_AMT,
  DISCOUNT_VALUE AS DISCOUNT_VALUE,
  MARK_FOR_DELETION_FLAG AS MARK_FOR_DELETION_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_SOURCE_TYPE AS OMS_LAST_UPDATED_SOURCE_TYPE,
  OMS_LAST_UPDATED_SOURCE AS OMS_LAST_UPDATED_SOURCE,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_DISCOUNT_DETAIL"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("Shortcut_to_OMS_A_DISCOUNT_DETAIL_8")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_A_DISCOUNT_DETAIL_9


query_9 = f"""SELECT
  OMS_DISCOUNT_DETAIL_ID AS OMS_DISCOUNT_DETAIL_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  OMS_ENTITY_TYPE_ID AS OMS_ENTITY_TYPE_ID,
  OMS_ENTITY_ID AS OMS_ENTITY_ID,
  OMS_ENTITY_LINE_ID AS OMS_ENTITY_LINE_ID,
  OMS_DISCOUNT_TYPE_ID AS OMS_DISCOUNT_TYPE_ID,
  OMS_EXT_DISCOUNT_ID AS OMS_EXT_DISCOUNT_ID,
  OMS_REASON_ID AS OMS_REASON_ID,
  DISCOUNT_AMT AS DISCOUNT_AMT,
  DISCOUNT_VALUE AS DISCOUNT_VALUE,
  MARK_FOR_DELETION_FLAG AS MARK_FOR_DELETION_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_SOURCE AS OMS_LAST_UPDATED_SOURCE,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_A_DISCOUNT_DETAIL_8"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("SQ_Shortcut_to_OMS_A_DISCOUNT_DETAIL_9")

# COMMAND ----------
# DBTITLE 1, JNR_A_DISCOUNT_TYPE_10


query_10 = f"""SELECT
  DETAIL.OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  DETAIL.OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  DETAIL.OMS_ENTITY_TYPE_ID AS dd_OMS_ENTITY_TYPE_ID,
  DETAIL.OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  DETAIL.OMS_ENTITY_LINE_ID AS dd_OMS_ENTITY_LINE_ID,
  DETAIL.OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  DETAIL.OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  DETAIL.OMS_REASON_ID AS dd_OMS_REASON_ID,
  DETAIL.DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  DETAIL.DISCOUNT_VALUE AS dd_DISCOUNT_VALUE,
  DETAIL.MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  DETAIL.OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  DETAIL.OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  DETAIL.UPDATE_TSTMP AS dd_UPDATE_TSTMP,
  MASTER.OMS_DISCOUNT_TYPE_ID AS dt_OMS_DISCOUNT_TYPE_ID,
  MASTER.OMS_DISCOUNT_TYPE_NAME AS dt_OMS_DISCOUNT_TYPE_NAME,
  MASTER.UPDATE_TSTMP AS dt_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_A_DISCOUNT_TYPE_7 MASTER
  INNER JOIN SQ_Shortcut_to_OMS_A_DISCOUNT_DETAIL_9 DETAIL ON MASTER.OMS_DISCOUNT_TYPE_ID = DETAIL.OMS_DISCOUNT_TYPE_ID"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("JNR_A_DISCOUNT_TYPE_10")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_UCL_USER_11


query_11 = f"""SELECT
  OMS_UCL_USER_ID AS OMS_UCL_USER_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  OMS_USER_TYPE_ID AS OMS_USER_TYPE_ID,
  USER_NAME AS USER_NAME,
  USER_FIRST_NAME AS USER_FIRST_NAME,
  USER_MIDDLE_NAME AS USER_MIDDLE_NAME,
  USER_LAST_NAME AS USER_LAST_NAME,
  ACTIVE_FLAG AS ACTIVE_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_UCL_USER"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("Shortcut_to_OMS_UCL_USER_11")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_UCL_USER_12


query_12 = f"""SELECT
  OMS_UCL_USER_ID AS OMS_UCL_USER_ID,
  USER_NAME AS USER_NAME,
  USER_FIRST_NAME AS USER_FIRST_NAME,
  USER_LAST_NAME AS USER_LAST_NAME,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_UCL_USER_11"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("SQ_Shortcut_to_OMS_UCL_USER_12")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_SYS_CODE_13


query_13 = f"""SELECT
  OMS_REC_TYPE AS OMS_REC_TYPE,
  OMS_CODE_TYPE AS OMS_CODE_TYPE,
  OMS_CODE_ID AS OMS_CODE_ID,
  OMS_CODE_DESC AS OMS_CODE_DESC,
  OMS_CODE_SHORT_DESC AS OMS_CODE_SHORT_DESC,
  OMS_SYS_CODE_ID AS OMS_SYS_CODE_ID,
  OMS_SYS_CODE_TYPE_ID AS OMS_SYS_CODE_TYPE_ID,
  OMS_CREATE_TSTMP AS OMS_CREATE_TSTMP,
  OMS_MOD_TSTMP AS OMS_MOD_TSTMP,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_SYS_CODE"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("Shortcut_to_OMS_SYS_CODE_13")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_SYS_CODE_14


query_14 = f"""SELECT
  OMS_CODE_TYPE AS OMS_CODE_TYPE,
  OMS_CODE_ID AS OMS_CODE_ID,
  OMS_CODE_DESC AS OMS_CODE_DESC,
  OMS_CODE_SHORT_DESC AS OMS_CODE_SHORT_DESC,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_SYS_CODE_13"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("SQ_Shortcut_to_OMS_SYS_CODE_14")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_PURCHASE_ORDERS_15


query_15 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_EXT_PURCHASE_ORDERS_ID AS OMS_EXT_PURCHASE_ORDERS_ID,
  OMS_PARENT_PURCHASE_ORDERS_ID AS OMS_PARENT_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_TYPE_ID AS OMS_PURCHASE_ORDERS_TYPE_ID,
  OMS_PURCHASE_ORDERS_STATUS_ID AS OMS_PURCHASE_ORDERS_STATUS_ID,
  OMS_ORDER_CATEGORY_ID AS OMS_ORDER_CATEGORY_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ID,
  OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_DES_SHIP_VIA_FACILITY_ID AS OMS_DES_SHIP_VIA_FACILITY_ID,
  OMS_CUSTOMER_CD AS OMS_CUSTOMER_CD,
  CUSTOMER_FIRST_NAME AS CUSTOMER_FIRST_NAME,
  CUSTOMER_LAST_NAME AS CUSTOMER_LAST_NAME,
  CUSTOMER_PHONE_NBR AS CUSTOMER_PHONE_NBR,
  CUSTOMER_EMAIL AS CUSTOMER_EMAIL,
  OMS_RETURN_REFERENCE_NBR AS OMS_RETURN_REFERENCE_NBR,
  OMS_BILL_OF_LADING_NBR AS OMS_BILL_OF_LADING_NBR,
  OMS_TRANS_RESP_CD AS OMS_TRANS_RESP_CD,
  OMS_COMMODITY_CODE_ID AS OMS_COMMODITY_CODE_ID,
  OMS_CARRIER_ID AS OMS_CARRIER_ID,
  OMS_PRODUCT_CLASS_ID AS OMS_PRODUCT_CLASS_ID,
  OMS_PROTECTION_LEVEL_ID AS OMS_PROTECTION_LEVEL_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_CHANNEL_TYPE_ID AS OMS_CHANNEL_TYPE_ID,
  OMS_CHANNEL_ID AS OMS_CHANNEL_ID,
  OMS_FULFILL_MODE_ID AS OMS_FULFILL_MODE_ID,
  OMS_ENTERED_BY AS OMS_ENTERED_BY,
  OMS_ENTRY_CD AS OMS_ENTRY_CD,
  OMS_PAYMENT_MODE_ID AS OMS_PAYMENT_MODE_ID,
  OMS_PAYMENT_STATUS_ID AS OMS_PAYMENT_STATUS_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  ORDER_RECEIVED_FLAG AS ORDER_RECEIVED_FLAG,
  ON_HOLD_FLAG AS ON_HOLD_FLAG,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  OMS_REASON_ID AS OMS_REASON_ID,
  OMS_DECLINE_REASON_ID AS OMS_DECLINE_REASON_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  IMPORTED_FLAG AS IMPORTED_FLAG,
  PURCHASE_ORDERS_RECONCILED_FLAG AS PURCHASE_ORDERS_RECONCILED_FLAG,
  READY_TO_SHIP_FLAG AS READY_TO_SHIP_FLAG,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  DIRECT_ALLOWED_FLAG AS DIRECT_ALLOWED_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  OMS_PURCHASE_ORDERS_DT_TSTMP AS OMS_PURCHASE_ORDERS_DT_TSTMP,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_REQUESTED_DLVR_TSTMP AS OMS_REQUESTED_DLVR_TSTMP,
  OMS_MUST_DLVR_TSTMP AS OMS_MUST_DLVR_TSTMP,
  OMS_PROMISED_DLVR_TSTMP AS OMS_PROMISED_DLVR_TSTMP,
  OMS_DUE_DT AS OMS_DUE_DT,
  OMS_CANCEL_DT AS OMS_CANCEL_DT,
  OMS_RELEASE_TSTMP AS OMS_RELEASE_TSTMP,
  OMS_FIRST_RCPT_TSTMP AS OMS_FIRST_RCPT_TSTMP,
  OMS_LAST_RCPT_TSTMP AS OMS_LAST_RCPT_TSTMP,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  ORIG_BUDG_COST AS ORIG_BUDG_COST,
  BUDG_COST AS BUDG_COST,
  BUDG_COST_CURRENCY_CD AS BUDG_COST_CURRENCY_CD,
  TAX_CHARGES_AMT AS TAX_CHARGES_AMT,
  MISC_CHARGES_AMT AS MISC_CHARGES_AMT,
  GRAND_TOTAL_AMT AS GRAND_TOTAL_AMT,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  CURRENCY_CD AS CURRENCY_CD,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_PURCHASE_ORDERS"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("Shortcut_to_OMS_PURCHASE_ORDERS_15")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_PURCHASE_ORDERS_16


query_16 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_PURCHASE_ORDERS_15"""

df_16 = spark.sql(query_16)

df_16.createOrReplaceTempView("SQ_Shortcut_to_OMS_PURCHASE_ORDERS_16")

# COMMAND ----------
# DBTITLE 1, JNR_PURCHASE_ORDERS_17


query_17 = f"""SELECT
  DETAIL.dd_OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  DETAIL.dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  DETAIL.dd_OMS_ENTITY_TYPE_ID AS dd_OMS_ENTITY_TYPE_ID,
  DETAIL.dd_OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  DETAIL.dd_OMS_ENTITY_LINE_ID AS dd_OMS_ENTITY_LINE_ID,
  DETAIL.dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  DETAIL.dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  DETAIL.dd_OMS_REASON_ID AS dd_OMS_REASON_ID,
  DETAIL.dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  DETAIL.dd_DISCOUNT_VALUE AS dd_DISCOUNT_VALUE,
  DETAIL.dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  DETAIL.dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  DETAIL.dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  DETAIL.dd_UPDATE_TSTMP AS dd_UPDATE_TSTMP,
  DETAIL.dt_OMS_DISCOUNT_TYPE_ID AS dt_OMS_DISCOUNT_TYPE_ID,
  DETAIL.dt_OMS_DISCOUNT_TYPE_NAME AS dt_OMS_DISCOUNT_TYPE_NAME,
  DETAIL.dt_UPDATE_TSTMP AS dt_UPDATE_TSTMP,
  MASTER.OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  MASTER.OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  MASTER.OMS_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  MASTER.UPDATE_TSTMP AS po_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_PURCHASE_ORDERS_16 MASTER
  INNER JOIN JNR_A_DISCOUNT_TYPE_10 DETAIL ON MASTER.OMS_PURCHASE_ORDERS_ID = DETAIL.dd_OMS_ENTITY_ID"""

df_17 = spark.sql(query_17)

df_17.createOrReplaceTempView("JNR_PURCHASE_ORDERS_17")

# COMMAND ----------
# DBTITLE 1, JNR_OBJECT_REASON_CODES_18


query_18 = f"""SELECT
  DETAIL.dd_OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  DETAIL.dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  DETAIL.dd_OMS_ENTITY_TYPE_ID AS dd_OMS_ENTITY_TYPE_ID,
  DETAIL.dd_OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  DETAIL.dd_OMS_ENTITY_LINE_ID AS dd_OMS_ENTITY_LINE_ID,
  DETAIL.dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  DETAIL.dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  DETAIL.dd_OMS_REASON_ID AS dd_OMS_REASON_ID,
  DETAIL.dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  DETAIL.dd_DISCOUNT_VALUE AS dd_DISCOUNT_VALUE,
  DETAIL.dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  DETAIL.dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  DETAIL.dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  DETAIL.dd_UPDATE_TSTMP AS dd_UPDATE_TSTMP,
  DETAIL.dt_OMS_DISCOUNT_TYPE_ID AS dt_OMS_DISCOUNT_TYPE_ID,
  DETAIL.dt_OMS_DISCOUNT_TYPE_NAME AS dt_OMS_DISCOUNT_TYPE_NAME,
  DETAIL.dt_UPDATE_TSTMP AS dt_UPDATE_TSTMP,
  DETAIL.po_OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  MASTER.OMS_REASON_CODES_ID AS orc_OMS_REASON_CODES_ID,
  MASTER.OMS_REASON_CODES_GROUP_ID AS orc_OMS_REASON_CODES_GROUP_ID,
  MASTER.OMS_REASON_CD AS orc_OMS_REASON_CD,
  MASTER.OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  MASTER.COMMENTS AS orc_COMMENTS,
  MASTER.UPDATE_TSTMP AS orc_UPDATE_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_OBJECT_REASON_CODES_1 MASTER
  RIGHT JOIN JNR_PURCHASE_ORDERS_17 DETAIL ON MASTER.OMS_REASON_CODES_GROUP_ID = DETAIL.dd_OMS_REASON_ID"""

df_18 = spark.sql(query_18)

df_18.createOrReplaceTempView("JNR_OBJECT_REASON_CODES_18")

# COMMAND ----------
# DBTITLE 1, JNR_SYS_CODE_19


query_19 = f"""SELECT
  DETAIL.dd_OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  DETAIL.dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  DETAIL.dd_OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  DETAIL.dd_OMS_ENTITY_LINE_ID AS dd_OMS_ENTITY_LINE_ID,
  DETAIL.dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  DETAIL.dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  DETAIL.dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  DETAIL.dd_DISCOUNT_VALUE AS dd_DISCOUNT_VALUE,
  DETAIL.dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  DETAIL.dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  DETAIL.dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  DETAIL.dd_UPDATE_TSTMP AS dd_UPDATE_TSTMP,
  DETAIL.dt_UPDATE_TSTMP AS dt_UPDATE_TSTMP,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.orc_OMS_REASON_CODES_ID AS orc_OMS_REASON_CODES_ID,
  DETAIL.orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  DETAIL.orc_OMS_REASON_TYPE AS orc_OMS_REASON_TYPE,
  DETAIL.orc_COMMENTS AS orc_COMMENTS,
  DETAIL.orc_UPDATE_TSTMP AS orc_UPDATE_TSTMP,
  MASTER.OMS_CODE_TYPE AS sc_OMS_CODE_TYPE,
  MASTER.OMS_CODE_ID AS sc_OMS_CODE_ID,
  MASTER.OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  MASTER.OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  MASTER.UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_SYS_CODE_14 MASTER
  RIGHT JOIN JNR_OBJECT_REASON_CODES_18 DETAIL ON MASTER.OMS_CODE_ID = DETAIL.orc_OMS_REASON_CD
  AND MASTER.OMS_CODE_TYPE = DETAIL.orc_OMS_REASON_TYPE"""

df_19 = spark.sql(query_19)

df_19.createOrReplaceTempView("JNR_SYS_CODE_19")

# COMMAND ----------
# DBTITLE 1, JNR_UCL_USER_20


query_20 = f"""SELECT
  DETAIL.dd_OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  DETAIL.dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  DETAIL.dd_OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  DETAIL.dd_OMS_ENTITY_LINE_ID AS dd_OMS_ENTITY_LINE_ID,
  DETAIL.dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  DETAIL.dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  DETAIL.dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  DETAIL.dd_DISCOUNT_VALUE AS dd_DISCOUNT_VALUE,
  DETAIL.dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  DETAIL.dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  DETAIL.dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  DETAIL.dd_UPDATE_TSTMP AS dd_UPDATE_TSTMP,
  DETAIL.dt_UPDATE_TSTMP AS dt_UPDATE_TSTMP,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  DETAIL.orc_COMMENTS AS orc_COMMENTS,
  DETAIL.orc_UPDATE_TSTMP AS orc_UPDATE_TSTMP,
  DETAIL.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  DETAIL.sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  DETAIL.sc_UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  MASTER.OMS_UCL_USER_ID AS ucl_OMS_UCL_USER_ID,
  MASTER.USER_NAME AS ucl_USER_NAME,
  MASTER.USER_FIRST_NAME AS ucl_USER_FIRST_NAME,
  MASTER.USER_LAST_NAME AS ucl_USER_LAST_NAME,
  MASTER.UPDATE_TSTMP AS ucl_UPDATE_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_UCL_USER_12 MASTER
  RIGHT JOIN JNR_SYS_CODE_19 DETAIL ON MASTER.USER_NAME = DETAIL.dd_OMS_LAST_UPDATED_SOURCE"""

df_20 = spark.sql(query_20)

df_20.createOrReplaceTempView("JNR_UCL_USER_20")

# COMMAND ----------
# DBTITLE 1, JNR_ACCESS_CONTROL_21


query_21 = f"""SELECT
  DETAIL.dd_OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  DETAIL.dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  DETAIL.dd_OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  DETAIL.dd_OMS_ENTITY_LINE_ID AS dd_OMS_ENTITY_LINE_ID,
  DETAIL.dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  DETAIL.dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  DETAIL.dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  DETAIL.dd_DISCOUNT_VALUE AS dd_DISCOUNT_VALUE,
  DETAIL.dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  DETAIL.dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  DETAIL.dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  DETAIL.dd_UPDATE_TSTMP AS dd_UPDATE_TSTMP,
  DETAIL.dt_UPDATE_TSTMP AS dt_UPDATE_TSTMP,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  DETAIL.orc_COMMENTS AS orc_COMMENTS,
  DETAIL.orc_UPDATE_TSTMP AS orc_UPDATE_TSTMP,
  DETAIL.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  DETAIL.sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  DETAIL.sc_UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  DETAIL.ucl_OMS_UCL_USER_ID AS ucl_OMS_UCL_USER_ID,
  DETAIL.ucl_USER_FIRST_NAME AS ucl_USER_FIRST_NAME,
  DETAIL.ucl_USER_LAST_NAME AS ucl_USER_LAST_NAME,
  DETAIL.ucl_UPDATE_TSTMP AS ucl_UPDATE_TSTMP,
  MASTER.OMS_UCL_USER_ID AS ac_OMS_UCL_USER_ID,
  MASTER.OMS_ROLE_ID AS ac_OMS_ROLE_ID,
  MASTER.UPDATE_TSTMP AS ac_UPDATE_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ACCESS_CONTROL_3 MASTER
  RIGHT JOIN JNR_UCL_USER_20 DETAIL ON MASTER.OMS_UCL_USER_ID = DETAIL.ucl_OMS_UCL_USER_ID"""

df_21 = spark.sql(query_21)

df_21.createOrReplaceTempView("JNR_ACCESS_CONTROL_21")

# COMMAND ----------
# DBTITLE 1, JNR_ROLE_22


query_22 = f"""SELECT
  DETAIL.dd_OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  DETAIL.dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  DETAIL.dd_OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  DETAIL.dd_OMS_ENTITY_LINE_ID AS dd_OMS_ENTITY_LINE_ID,
  DETAIL.dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  DETAIL.dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  DETAIL.dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  DETAIL.dd_DISCOUNT_VALUE AS dd_DISCOUNT_VALUE,
  DETAIL.dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  DETAIL.dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  DETAIL.dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  DETAIL.dd_UPDATE_TSTMP AS dd_UPDATE_TSTMP,
  DETAIL.dt_UPDATE_TSTMP AS dt_UPDATE_TSTMP,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  DETAIL.orc_COMMENTS AS orc_COMMENTS,
  DETAIL.orc_UPDATE_TSTMP AS orc_UPDATE_TSTMP,
  DETAIL.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  DETAIL.sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  DETAIL.sc_UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  DETAIL.ucl_USER_FIRST_NAME AS ucl_USER_FIRST_NAME,
  DETAIL.ucl_USER_LAST_NAME AS ucl_USER_LAST_NAME,
  DETAIL.ucl_UPDATE_TSTMP AS ucl_UPDATE_TSTMP,
  DETAIL.ac_OMS_ROLE_ID AS ac_OMS_ROLE_ID,
  DETAIL.ac_UPDATE_TSTMP AS ac_UPDATE_TSTMP,
  MASTER.OMS_ROLE_ID AS r_OMS_ROLE_ID,
  MASTER.OMS_ROLE_NAME AS r_OMS_ROLE_NAME,
  MASTER.UPDATE_TSTMP AS r_UPDATE_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ROLE_5 MASTER
  RIGHT JOIN JNR_ACCESS_CONTROL_21 DETAIL ON MASTER.OMS_ROLE_ID = DETAIL.ac_OMS_ROLE_ID"""

df_22 = spark.sql(query_22)

df_22.createOrReplaceTempView("JNR_ROLE_22")

# COMMAND ----------
# DBTITLE 1, FIL_UPDATE_TSTMP_23


query_23 = f"""SELECT
  dd_OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  dd_OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  dd_OMS_ENTITY_LINE_ID AS dd_OMS_ENTITY_LINE_ID,
  dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  dd_DISCOUNT_VALUE AS dd_DISCOUNT_VALUE,
  dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  dd_UPDATE_TSTMP AS dd_UPDATE_TSTMP,
  dt_UPDATE_TSTMP AS dt_UPDATE_TSTMP,
  po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  orc_COMMENTS AS orc_COMMENTS,
  orc_UPDATE_TSTMP AS orc_UPDATE_TSTMP,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  sc_UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  ucl_USER_FIRST_NAME AS ucl_USER_FIRST_NAME,
  ucl_USER_LAST_NAME AS ucl_USER_LAST_NAME,
  ucl_UPDATE_TSTMP AS ucl_UPDATE_TSTMP,
  ac_UPDATE_TSTMP AS ac_UPDATE_TSTMP,
  r_OMS_ROLE_NAME AS r_OMS_ROLE_NAME,
  r_UPDATE_TSTMP AS r_UPDATE_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_ROLE_22
WHERE
  dd_UPDATE_TSTMP > TRUNC(now())
  OR dt_UPDATE_TSTMP > TRUNC(now())
  OR po_UPDATE_TSTMP > TRUNC(now())
  OR orc_UPDATE_TSTMP > TRUNC(now())
  OR sc_UPDATE_TSTMP > TRUNC(now())
  OR ucl_UPDATE_TSTMP > TRUNC(now())
  OR ac_UPDATE_TSTMP > TRUNC(now())
  OR r_UPDATE_TSTMP > TRUNC(now())"""

df_23 = spark.sql(query_23)

df_23.createOrReplaceTempView("FIL_UPDATE_TSTMP_23")

# COMMAND ----------
# DBTITLE 1, EXP_ORDER_NBR_24


query_24 = f"""SELECT
  dd_OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  dd_OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  IFF(
    ISNULL(dd_OMS_ENTITY_LINE_ID),
    0,
    dd_OMS_ENTITY_LINE_ID
  ) AS o_OMS_ENTITY_LINE_ID,
  dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  IFF(ISNULL(dd_DISCOUNT_VALUE), 0, dd_DISCOUNT_VALUE) AS o_DISCOUNT_VALUE,
  dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  IFF(
    TO_CHAR(SUBSTR(po_OMS_TC_PURCHASE_ORDERS_ID, 1, 1)) = 'X',
    TO_BIGINT(
      SUBSTR(
        po_OMS_TC_PURCHASE_ORDERS_ID,
        2,
        LENGTH(po_OMS_TC_PURCHASE_ORDERS_ID)
      )
    ),
    IFF(
      LOWER(po_OMS_TC_PURCHASE_ORDERS_ID) <> UPPER(po_OMS_TC_PURCHASE_ORDERS_ID),
      0,
      TO_BIGINT(po_OMS_TC_PURCHASE_ORDERS_ID)
    )
  ) AS o_ORDER_NBR,
  po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  TRUNC(po_OMS_ORDER_CREATED_TSTMP) AS o_OMS_ORDER_CREATED_TSTMP,
  orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  orc_COMMENTS AS orc_COMMENTS,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  ucl_USER_FIRST_NAME AS ucl_USER_FIRST_NAME,
  ucl_USER_LAST_NAME AS ucl_USER_LAST_NAME,
  r_OMS_ROLE_NAME AS r_OMS_ROLE_NAME,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_UPDATE_TSTMP_23"""

df_24 = spark.sql(query_24)

df_24.createOrReplaceTempView("EXP_ORDER_NBR_24")

# COMMAND ----------
# DBTITLE 1, LKP_CURRENCY_DAY_25


query_25 = f"""SELECT
  CD.EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  EON2.dd_OMS_DISCOUNT_DETAIL_ID AS dd_OMS_DISCOUNT_DETAIL_ID,
  EON2.dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  EON2.dd_OMS_ENTITY_ID AS dd_OMS_ENTITY_ID,
  EON2.o_OMS_ENTITY_LINE_ID AS o_OMS_ENTITY_LINE_ID,
  EON2.dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  EON2.dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  EON2.dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  EON2.o_DISCOUNT_VALUE AS o_DISCOUNT_VALUE,
  EON2.dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  EON2.dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  EON2.dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  EON2.o_ORDER_NBR AS o_ORDER_NBR,
  EON2.po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  EON2.orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  EON2.orc_COMMENTS AS orc_COMMENTS,
  EON2.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  EON2.sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  EON2.ucl_USER_FIRST_NAME AS ucl_USER_FIRST_NAME,
  EON2.ucl_USER_LAST_NAME AS ucl_USER_LAST_NAME,
  EON2.r_OMS_ROLE_NAME AS r_OMS_ROLE_NAME,
  EON2.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_ORDER_NBR_24 EON2
  LEFT JOIN CURRENCY_DAY CD ON CD.DAY_DT = EON2.o_OMS_ORDER_CREATED_TSTMP"""

df_25 = spark.sql(query_25)

df_25.createOrReplaceTempView("LKP_CURRENCY_DAY_25")

# COMMAND ----------
# DBTITLE 1, EXP_PRE_26


query_26 = f"""SELECT
  TO_INTEGER(dd_OMS_DISCOUNT_DETAIL_ID) AS o_OMS_DISCOUNT_DETAIL_ID,
  TO_INTEGER(dd_OMS_ENTITY_ID) AS o_OMS_ENTITY_ID,
  dd_OMS_COMPANY_ID AS dd_OMS_COMPANY_ID,
  o_OMS_ENTITY_LINE_ID AS o_OMS_ENTITY_LINE_ID,
  dd_OMS_DISCOUNT_TYPE_ID AS dd_OMS_DISCOUNT_TYPE_ID,
  dd_OMS_EXT_DISCOUNT_ID AS dd_OMS_EXT_DISCOUNT_ID,
  orc_OMS_REASON_CD AS orc_OMS_REASON_CD,
  sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  dd_DISCOUNT_AMT AS dd_DISCOUNT_AMT,
  o_DISCOUNT_VALUE AS o_DISCOUNT_VALUE,
  orc_COMMENTS AS orc_COMMENTS,
  dd_OMS_LAST_UPDATED_SOURCE AS dd_OMS_LAST_UPDATED_SOURCE,
  dd_OMS_CREATED_TSTMP AS dd_OMS_CREATED_TSTMP,
  o_ORDER_NBR AS o_ORDER_NBR,
  po_OMS_ORDER_CREATED_TSTMP AS po_OMS_ORDER_CREATED_TSTMP,
  ucl_USER_FIRST_NAME AS ucl_USER_FIRST_NAME,
  ucl_USER_LAST_NAME AS ucl_USER_LAST_NAME,
  r_OMS_ROLE_NAME AS r_OMS_ROLE_NAME,
  dd_MARK_FOR_DELETION_FLAG AS dd_MARK_FOR_DELETION_FLAG,
  IFF(dd_OMS_COMPANY_ID = 8840, 1, EXCHANGE_RATE_PCNT) AS EXCHANGE_RATE_PCNT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_CURRENCY_DAY_25"""

df_26 = spark.sql(query_26)

df_26.createOrReplaceTempView("EXP_PRE_26")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ORDER_DISCOUNT_27


query_27 = f"""SELECT
  OMS_ORDER_DISCOUNT_ID AS OMS_ORDER_DISCOUNT_ID,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  OMS_DISCOUNT_TYPE_ID AS OMS_DISCOUNT_TYPE_ID,
  DISCOUNT_ID AS DISCOUNT_ID,
  REASON_CODE AS REASON_CODE,
  SHORT_DESC AS SHORT_DESC,
  CODE_DESC AS CODE_DESC,
  DISCOUNT_AMT AS DISCOUNT_AMT,
  DISCOUNT_VALUE AS DISCOUNT_VALUE,
  DISCOUNT_COMMENTS AS DISCOUNT_COMMENTS,
  LAST_UPDATED_SRC AS LAST_UPDATED_SRC,
  CREATED_DT AS CREATED_DT,
  ORDER_NBR AS ORDER_NBR,
  OMS_ORDER_CREATED_TSTMP AS OMS_ORDER_CREATED_TSTMP,
  USER_FIRST_NAME AS USER_FIRST_NAME,
  USER_LAST_NAME AS USER_LAST_NAME,
  ROLE_NAME AS ROLE_NAME,
  DELETE_FLG AS DELETE_FLG,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ORDER_DISCOUNT"""

df_27 = spark.sql(query_27)

df_27.createOrReplaceTempView("Shortcut_to_OMS_ORDER_DISCOUNT_27")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ORDER_DISCOUNT_28


query_28 = f"""SELECT
  OMS_ORDER_DISCOUNT_ID AS OMS_ORDER_DISCOUNT_ID,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  OMS_DISCOUNT_TYPE_ID AS OMS_DISCOUNT_TYPE_ID,
  DISCOUNT_ID AS DISCOUNT_ID,
  REASON_CODE AS REASON_CODE,
  SHORT_DESC AS SHORT_DESC,
  CODE_DESC AS CODE_DESC,
  DISCOUNT_AMT AS DISCOUNT_AMT,
  DISCOUNT_VALUE AS DISCOUNT_VALUE,
  DISCOUNT_COMMENTS AS DISCOUNT_COMMENTS,
  LAST_UPDATED_SRC AS LAST_UPDATED_SRC,
  CREATED_DT AS CREATED_DT,
  ORDER_NBR AS ORDER_NBR,
  OMS_ORDER_CREATED_TSTMP AS OMS_ORDER_CREATED_TSTMP,
  USER_FIRST_NAME AS USER_FIRST_NAME,
  USER_LAST_NAME AS USER_LAST_NAME,
  ROLE_NAME AS ROLE_NAME,
  DELETE_FLG AS DELETE_FLG,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ORDER_DISCOUNT_27"""

df_28 = spark.sql(query_28)

df_28.createOrReplaceTempView("SQ_Shortcut_to_OMS_ORDER_DISCOUNT_28")

# COMMAND ----------
# DBTITLE 1, JNR_ORDER_DISCOUNT_29


query_29 = f"""SELECT
  DETAIL.o_OMS_DISCOUNT_DETAIL_ID AS src_OMS_DISCOUNT_DETAIL_ID,
  DETAIL.o_OMS_ENTITY_ID AS src_OMS_ENTITY_ID,
  DETAIL.dd_OMS_COMPANY_ID AS src_OMS_COMPANY_ID,
  DETAIL.o_OMS_ENTITY_LINE_ID AS src_OMS_ENTITY_LINE_ID,
  DETAIL.dd_OMS_DISCOUNT_TYPE_ID AS src_OMS_DISCOUNT_TYPE_ID,
  DETAIL.dd_OMS_EXT_DISCOUNT_ID AS src_OMS_EXT_DISCOUNT_ID,
  DETAIL.orc_OMS_REASON_CD AS src_OMS_REASON_CD,
  DETAIL.sc_OMS_CODE_SHORT_DESC AS src_OMS_CODE_SHORT_DESC,
  DETAIL.sc_OMS_CODE_DESC AS src_OMS_CODE_DESC,
  DETAIL.dd_DISCOUNT_AMT AS src_DISCOUNT_AMT,
  DETAIL.o_DISCOUNT_VALUE AS src_DISCOUNT_VALUE,
  DETAIL.orc_COMMENTS AS src_COMMENTS,
  DETAIL.dd_OMS_LAST_UPDATED_SOURCE AS src_OMS_LAST_UPDATED_SOURCE,
  DETAIL.dd_OMS_CREATED_TSTMP AS src_OMS_CREATED_TSTMP,
  DETAIL.o_ORDER_NBR AS src_ORDER_NBR,
  DETAIL.po_OMS_ORDER_CREATED_TSTMP AS src_OMS_ORDER_CREATED_TSTMP,
  DETAIL.ucl_USER_FIRST_NAME AS src_USER_FIRST_NAME,
  DETAIL.ucl_USER_LAST_NAME AS src_USER_LAST_NAME,
  DETAIL.r_OMS_ROLE_NAME AS src_OMS_ROLE_NAME,
  DETAIL.dd_MARK_FOR_DELETION_FLAG AS src_MARK_FOR_DELETION_FLAG,
  DETAIL.EXCHANGE_RATE_PCNT AS src_EXCHANGE_RATE_PCNT,
  MASTER.OMS_ORDER_DISCOUNT_ID AS lkp_OMS_ORDER_DISCOUNT_ID,
  MASTER.OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  MASTER.OMS_COMPANY_ID AS lkp_OMS_COMPANY_ID,
  MASTER.OMS_ORDER_LN_ID AS lkp_OMS_ORDER_LN_ID,
  MASTER.OMS_DISCOUNT_TYPE_ID AS lkp_OMS_DISCOUNT_TYPE_ID,
  MASTER.DISCOUNT_ID AS lkp_DISCOUNT_ID,
  MASTER.REASON_CODE AS lkp_REASON_CODE,
  MASTER.SHORT_DESC AS lkp_SHORT_DESC,
  MASTER.CODE_DESC AS lkp_CODE_DESC,
  MASTER.DISCOUNT_AMT AS lkp_DISCOUNT_AMT,
  MASTER.DISCOUNT_VALUE AS lkp_DISCOUNT_VALUE,
  MASTER.DISCOUNT_COMMENTS AS lkp_DISCOUNT_COMMENTS,
  MASTER.LAST_UPDATED_SRC AS lkp_LAST_UPDATED_SRC,
  MASTER.CREATED_DT AS lkp_CREATED_DT,
  MASTER.ORDER_NBR AS lkp_ORDER_NBR,
  MASTER.OMS_ORDER_CREATED_TSTMP AS lkp_OMS_ORDER_CREATED_TSTMP,
  MASTER.USER_FIRST_NAME AS lkp_USER_FIRST_NAME,
  MASTER.USER_LAST_NAME AS lkp_USER_LAST_NAME,
  MASTER.ROLE_NAME AS lkp_ROLE_NAME,
  MASTER.DELETE_FLG AS lkp_DELETE_FLG,
  MASTER.EXCHANGE_RATE_PCNT AS lkp_EXCHANGE_RATE_PCNT,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ORDER_DISCOUNT_28 MASTER
  RIGHT JOIN EXP_PRE_26 DETAIL ON MASTER.OMS_ORDER_DISCOUNT_ID = DETAIL.o_OMS_DISCOUNT_DETAIL_ID
  AND MASTER.OMS_ORDER_ID = DETAIL.o_OMS_ENTITY_ID"""

df_29 = spark.sql(query_29)

df_29.createOrReplaceTempView("JNR_ORDER_DISCOUNT_29")

# COMMAND ----------
# DBTITLE 1, EXP_UPDATE_FLAG_30


query_30 = f"""SELECT
  src_OMS_DISCOUNT_DETAIL_ID AS src_OMS_DISCOUNT_DETAIL_ID,
  src_OMS_ENTITY_ID AS src_OMS_ENTITY_ID,
  src_OMS_COMPANY_ID AS src_OMS_COMPANY_ID,
  src_OMS_ENTITY_LINE_ID AS src_OMS_ENTITY_LINE_ID,
  src_OMS_DISCOUNT_TYPE_ID AS src_OMS_DISCOUNT_TYPE_ID,
  src_OMS_EXT_DISCOUNT_ID AS src_OMS_EXT_DISCOUNT_ID,
  src_OMS_REASON_CD AS src_OMS_REASON_CD,
  src_OMS_CODE_SHORT_DESC AS src_OMS_CODE_SHORT_DESC,
  src_OMS_CODE_DESC AS src_OMS_CODE_DESC,
  src_DISCOUNT_AMT AS src_DISCOUNT_AMT,
  src_DISCOUNT_VALUE AS src_DISCOUNT_VALUE,
  src_COMMENTS AS src_COMMENTS,
  src_OMS_LAST_UPDATED_SOURCE AS src_OMS_LAST_UPDATED_SOURCE,
  src_OMS_CREATED_TSTMP AS src_OMS_CREATED_TSTMP,
  src_ORDER_NBR AS src_ORDER_NBR,
  src_OMS_ORDER_CREATED_TSTMP AS src_OMS_ORDER_CREATED_TSTMP,
  src_USER_FIRST_NAME AS src_USER_FIRST_NAME,
  src_USER_LAST_NAME AS src_USER_LAST_NAME,
  src_OMS_ROLE_NAME AS src_OMS_ROLE_NAME,
  src_MARK_FOR_DELETION_FLAG AS src_MARK_FOR_DELETION_FLAG,
  src_EXCHANGE_RATE_PCNT AS src_EXCHANGE_RATE_PCNT,
  now() AS o_UPDATE_TSTMP,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS o_LOAD_TSTMP,
  IFF(
    (
      ISNULL(lkp_OMS_ORDER_DISCOUNT_ID)
      and isnull (lkp_OMS_ORDER_ID)
    ),
    1,
    IFF(
      (
        (
          NOT ISNULL(lkp_OMS_ORDER_DISCOUNT_ID)
          and not isnull (lkp_OMS_ORDER_ID)
        )
        AND (
          src_OMS_COMPANY_ID <> lkp_OMS_COMPANY_ID
          OR src_OMS_ENTITY_LINE_ID <> lkp_OMS_ORDER_LN_ID
          OR src_OMS_DISCOUNT_TYPE_ID <> lkp_OMS_DISCOUNT_TYPE_ID
          OR src_OMS_EXT_DISCOUNT_ID <> lkp_DISCOUNT_ID
          OR src_OMS_REASON_CD <> lkp_REASON_CODE
          OR src_OMS_CODE_SHORT_DESC <> lkp_SHORT_DESC
          OR src_OMS_CODE_DESC <> lkp_CODE_DESC
          OR src_DISCOUNT_AMT <> lkp_DISCOUNT_AMT
          OR src_DISCOUNT_VALUE <> lkp_DISCOUNT_VALUE
          OR src_COMMENTS <> lkp_DISCOUNT_COMMENTS
          OR src_OMS_LAST_UPDATED_SOURCE <> lkp_LAST_UPDATED_SRC
          OR TRUNC(src_OMS_CREATED_TSTMP) <> TRUNC(lkp_CREATED_DT)
          OR src_ORDER_NBR <> lkp_ORDER_NBR
          OR src_OMS_ORDER_CREATED_TSTMP <> lkp_OMS_ORDER_CREATED_TSTMP
          OR src_USER_FIRST_NAME <> lkp_USER_FIRST_NAME
          OR src_USER_LAST_NAME <> lkp_USER_LAST_NAME
          OR src_OMS_ROLE_NAME <> lkp_ROLE_NAME
          OR src_MARK_FOR_DELETION_FLAG <> lkp_DELETE_FLG
          OR src_EXCHANGE_RATE_PCNT <> lkp_EXCHANGE_RATE_PCNT
        )
      ),
      2,
      3
    )
  ) AS o_UPDATE_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_ORDER_DISCOUNT_29"""

df_30 = spark.sql(query_30)

df_30.createOrReplaceTempView("EXP_UPDATE_FLAG_30")

# COMMAND ----------
# DBTITLE 1, UPD_INSERT_UPDATE_31


query_31 = f"""SELECT
  src_OMS_DISCOUNT_DETAIL_ID AS src_OMS_DISCOUNT_DETAIL_ID,
  src_OMS_ENTITY_ID AS src_OMS_ENTITY_ID,
  src_OMS_COMPANY_ID AS src_OMS_COMPANY_ID,
  src_OMS_ENTITY_LINE_ID AS src_OMS_ENTITY_LINE_ID,
  src_OMS_DISCOUNT_TYPE_ID AS src_OMS_DISCOUNT_TYPE_ID,
  src_OMS_EXT_DISCOUNT_ID AS src_OMS_EXT_DISCOUNT_ID,
  src_OMS_REASON_CD AS src_OMS_REASON_CD,
  src_OMS_CODE_SHORT_DESC AS src_OMS_CODE_SHORT_DESC,
  src_OMS_CODE_DESC AS src_OMS_CODE_DESC,
  src_DISCOUNT_AMT AS src_DISCOUNT_AMT,
  src_DISCOUNT_VALUE AS src_DISCOUNT_VALUE,
  src_COMMENTS AS src_COMMENTS,
  src_OMS_LAST_UPDATED_SOURCE AS src_OMS_LAST_UPDATED_SOURCE,
  src_OMS_CREATED_TSTMP AS src_OMS_CREATED_TSTMP,
  src_ORDER_NBR AS src_ORDER_NBR,
  src_OMS_ORDER_CREATED_TSTMP AS src_OMS_ORDER_CREATED_TSTMP,
  src_USER_FIRST_NAME AS src_USER_FIRST_NAME,
  src_USER_LAST_NAME AS src_USER_LAST_NAME,
  src_OMS_ROLE_NAME AS src_OMS_ROLE_NAME,
  src_MARK_FOR_DELETION_FLAG AS src_MARK_FOR_DELETION_FLAG,
  src_EXCHANGE_RATE_PCNT AS src_EXCHANGE_RATE_PCNT,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  o_UPDATE_FLAG AS o_UPDATE_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(
    o_UPDATE_FLAG,
    1,
    'DD_INSERT',
    2,
    'DD_UPDATE',
    3,
    dd_reject
  ) AS UPDATE_STRATEGY_FLAG
FROM
  EXP_UPDATE_FLAG_30"""

df_31 = spark.sql(query_31)

df_31.createOrReplaceTempView("UPD_INSERT_UPDATE_31")

# COMMAND ----------
# DBTITLE 1, OMS_ORDER_DISCOUNT


spark.sql("""MERGE INTO OMS_ORDER_DISCOUNT AS TARGET
USING
  UPD_INSERT_UPDATE_31 AS SOURCE ON TARGET.OMS_ORDER_ID = SOURCE.src_OMS_ENTITY_ID
  AND TARGET.OMS_ORDER_DISCOUNT_ID = SOURCE.src_OMS_DISCOUNT_DETAIL_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_ORDER_DISCOUNT_ID = SOURCE.src_OMS_DISCOUNT_DETAIL_ID,
  TARGET.OMS_ORDER_ID = SOURCE.src_OMS_ENTITY_ID,
  TARGET.OMS_COMPANY_ID = SOURCE.src_OMS_COMPANY_ID,
  TARGET.OMS_ORDER_LN_ID = SOURCE.src_OMS_ENTITY_LINE_ID,
  TARGET.OMS_DISCOUNT_TYPE_ID = SOURCE.src_OMS_DISCOUNT_TYPE_ID,
  TARGET.DISCOUNT_ID = SOURCE.src_OMS_EXT_DISCOUNT_ID,
  TARGET.REASON_CODE = SOURCE.src_OMS_REASON_CD,
  TARGET.SHORT_DESC = SOURCE.src_OMS_CODE_SHORT_DESC,
  TARGET.CODE_DESC = SOURCE.src_OMS_CODE_DESC,
  TARGET.DISCOUNT_AMT = SOURCE.src_DISCOUNT_AMT,
  TARGET.DISCOUNT_VALUE = SOURCE.src_DISCOUNT_VALUE,
  TARGET.DISCOUNT_COMMENTS = SOURCE.src_COMMENTS,
  TARGET.LAST_UPDATED_SRC = SOURCE.src_OMS_LAST_UPDATED_SOURCE,
  TARGET.CREATED_DT = SOURCE.src_OMS_CREATED_TSTMP,
  TARGET.ORDER_NBR = SOURCE.src_ORDER_NBR,
  TARGET.OMS_ORDER_CREATED_TSTMP = SOURCE.src_OMS_ORDER_CREATED_TSTMP,
  TARGET.USER_FIRST_NAME = SOURCE.src_USER_FIRST_NAME,
  TARGET.USER_LAST_NAME = SOURCE.src_USER_LAST_NAME,
  TARGET.ROLE_NAME = SOURCE.src_OMS_ROLE_NAME,
  TARGET.DELETE_FLG = SOURCE.src_MARK_FOR_DELETION_FLAG,
  TARGET.EXCHANGE_RATE_PCNT = SOURCE.src_EXCHANGE_RATE_PCNT,
  TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_COMPANY_ID = SOURCE.src_OMS_COMPANY_ID
  AND TARGET.OMS_ORDER_LN_ID = SOURCE.src_OMS_ENTITY_LINE_ID
  AND TARGET.OMS_DISCOUNT_TYPE_ID = SOURCE.src_OMS_DISCOUNT_TYPE_ID
  AND TARGET.DISCOUNT_ID = SOURCE.src_OMS_EXT_DISCOUNT_ID
  AND TARGET.REASON_CODE = SOURCE.src_OMS_REASON_CD
  AND TARGET.SHORT_DESC = SOURCE.src_OMS_CODE_SHORT_DESC
  AND TARGET.CODE_DESC = SOURCE.src_OMS_CODE_DESC
  AND TARGET.DISCOUNT_AMT = SOURCE.src_DISCOUNT_AMT
  AND TARGET.DISCOUNT_VALUE = SOURCE.src_DISCOUNT_VALUE
  AND TARGET.DISCOUNT_COMMENTS = SOURCE.src_COMMENTS
  AND TARGET.LAST_UPDATED_SRC = SOURCE.src_OMS_LAST_UPDATED_SOURCE
  AND TARGET.CREATED_DT = SOURCE.src_OMS_CREATED_TSTMP
  AND TARGET.ORDER_NBR = SOURCE.src_ORDER_NBR
  AND TARGET.OMS_ORDER_CREATED_TSTMP = SOURCE.src_OMS_ORDER_CREATED_TSTMP
  AND TARGET.USER_FIRST_NAME = SOURCE.src_USER_FIRST_NAME
  AND TARGET.USER_LAST_NAME = SOURCE.src_USER_LAST_NAME
  AND TARGET.ROLE_NAME = SOURCE.src_OMS_ROLE_NAME
  AND TARGET.DELETE_FLG = SOURCE.src_MARK_FOR_DELETION_FLAG
  AND TARGET.EXCHANGE_RATE_PCNT = SOURCE.src_EXCHANGE_RATE_PCNT
  AND TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_ORDER_DISCOUNT_ID,
    TARGET.OMS_ORDER_ID,
    TARGET.OMS_COMPANY_ID,
    TARGET.OMS_ORDER_LN_ID,
    TARGET.OMS_DISCOUNT_TYPE_ID,
    TARGET.DISCOUNT_ID,
    TARGET.REASON_CODE,
    TARGET.SHORT_DESC,
    TARGET.CODE_DESC,
    TARGET.DISCOUNT_AMT,
    TARGET.DISCOUNT_VALUE,
    TARGET.DISCOUNT_COMMENTS,
    TARGET.LAST_UPDATED_SRC,
    TARGET.CREATED_DT,
    TARGET.ORDER_NBR,
    TARGET.OMS_ORDER_CREATED_TSTMP,
    TARGET.USER_FIRST_NAME,
    TARGET.USER_LAST_NAME,
    TARGET.ROLE_NAME,
    TARGET.DELETE_FLG,
    TARGET.EXCHANGE_RATE_PCNT,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.src_OMS_DISCOUNT_DETAIL_ID,
    SOURCE.src_OMS_ENTITY_ID,
    SOURCE.src_OMS_COMPANY_ID,
    SOURCE.src_OMS_ENTITY_LINE_ID,
    SOURCE.src_OMS_DISCOUNT_TYPE_ID,
    SOURCE.src_OMS_EXT_DISCOUNT_ID,
    SOURCE.src_OMS_REASON_CD,
    SOURCE.src_OMS_CODE_SHORT_DESC,
    SOURCE.src_OMS_CODE_DESC,
    SOURCE.src_DISCOUNT_AMT,
    SOURCE.src_DISCOUNT_VALUE,
    SOURCE.src_COMMENTS,
    SOURCE.src_OMS_LAST_UPDATED_SOURCE,
    SOURCE.src_OMS_CREATED_TSTMP,
    SOURCE.src_ORDER_NBR,
    SOURCE.src_OMS_ORDER_CREATED_TSTMP,
    SOURCE.src_USER_FIRST_NAME,
    SOURCE.src_USER_LAST_NAME,
    SOURCE.src_OMS_ROLE_NAME,
    SOURCE.src_MARK_FOR_DELETION_FLAG,
    SOURCE.src_EXCHANGE_RATE_PCNT,
    SOURCE.o_UPDATE_TSTMP,
    SOURCE.o_LOAD_TSTMP
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Order_Discount")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_OMS_Order_Discount", mainWorkflowId, parentName)
