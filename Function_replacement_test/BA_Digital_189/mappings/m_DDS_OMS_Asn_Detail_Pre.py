# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Asn_Detail_Pre")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_Asn_Detail_Pre", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0


query_0 = f"""SELECT
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID
FROM
  OMS_PURCH_ORDER_LOAD_CTRL"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_ASN_DETAIL_1


query_1 = f"""SELECT
  ASN_DETAIL_ID AS ASN_DETAIL_ID,
  ASN_ID AS ASN_ID,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  PURCHASE_ORDERS_ID AS PURCHASE_ORDERS_ID,
  SKU_ID AS SKU_ID,
  SKU_NAME AS SKU_NAME,
  SKU_ATTR_1 AS SKU_ATTR_1,
  SKU_ATTR_2 AS SKU_ATTR_2,
  SKU_ATTR_3 AS SKU_ATTR_3,
  SKU_ATTR_4 AS SKU_ATTR_4,
  SKU_ATTR_5 AS SKU_ATTR_5,
  BUSINESS_PARTNER_ID AS BUSINESS_PARTNER_ID,
  PACKAGE_TYPE_ID AS PACKAGE_TYPE_ID,
  PACKAGE_TYPE_DESC AS PACKAGE_TYPE_DESC,
  PACKAGE_TYPE_INSTANCE AS PACKAGE_TYPE_INSTANCE,
  EPC_TRACKING_RFID_VALUE AS EPC_TRACKING_RFID_VALUE,
  ORDER_TYPE_DESC AS ORDER_TYPE_DESC,
  GTIN AS GTIN,
  SHIPPED_QTY AS SHIPPED_QTY,
  STD_PACK_QTY AS STD_PACK_QTY,
  STD_CASE_QTY AS STD_CASE_QTY,
  ASN_DETAIL_STATUS AS ASN_DETAIL_STATUS,
  RECEIVED_QTY AS RECEIVED_QTY,
  STD_SUB_PACK_QTY AS STD_SUB_PACK_QTY,
  LPN_PER_TIER AS LPN_PER_TIER,
  TIER_PER_PALLET AS TIER_PER_PALLET,
  MFG_PLNT AS MFG_PLNT,
  MFG_DATE AS MFG_DATE,
  SHIP_BY_DATE AS SHIP_BY_DATE,
  EXPIRE_DATE AS EXPIRE_DATE,
  INCUBATION_DATE AS INCUBATION_DATE,
  EPC_REQ_ON_ALL_CASES AS EPC_REQ_ON_ALL_CASES,
  WEIGHT_UOM_ID_BASE AS WEIGHT_UOM_ID_BASE,
  REGION_ID AS REGION_ID,
  IS_ASSOCIATED_TO_OUTBOUND AS IS_ASSOCIATED_TO_OUTBOUND,
  IS_CANCELLED AS IS_CANCELLED,
  IS_CLOSED AS IS_CLOSED,
  INVN_TYPE AS INVN_TYPE,
  PROD_STAT AS PROD_STAT,
  BATCH_NBR AS BATCH_NBR,
  CNTRY_OF_ORGN AS CNTRY_OF_ORGN,
  SHIPPED_LPN_COUNT AS SHIPPED_LPN_COUNT,
  RECEIVED_LPN_COUNT AS RECEIVED_LPN_COUNT,
  UNITS_ASSIGNED_TO_LPN AS UNITS_ASSIGNED_TO_LPN,
  PROC_IMMD_NEEDS AS PROC_IMMD_NEEDS,
  QUALITY_CHECK_HOLD_UPON_RCPT AS QUALITY_CHECK_HOLD_UPON_RCPT,
  REFERENCE_ORDER_NBR AS REFERENCE_ORDER_NBR,
  ACTUAL_WEIGHT AS ACTUAL_WEIGHT,
  ACTUAL_WEIGHT_PACK_COUNT AS ACTUAL_WEIGHT_PACK_COUNT,
  NBR_OF_PACK_FOR_CATCH_WT AS NBR_OF_PACK_FOR_CATCH_WT,
  PUTWY_TYPE AS PUTWY_TYPE,
  RETAIL_PRICE AS RETAIL_PRICE,
  PRICE_TIX_AVAIL AS PRICE_TIX_AVAIL,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  HIBERNATE_VERSION AS HIBERNATE_VERSION,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  TC_PO_LINE_ID AS TC_PO_LINE_ID,
  INVENTORY_SEGMENT_ID AS INVENTORY_SEGMENT_ID,
  PPACK_GRP_CODE AS PPACK_GRP_CODE,
  CUT_NBR AS CUT_NBR,
  QTY_CONV_FACTOR AS QTY_CONV_FACTOR,
  QTY_UOM_ID AS QTY_UOM_ID,
  WEIGHT_UOM_ID AS WEIGHT_UOM_ID,
  QTY_UOM_ID_BASE AS QTY_UOM_ID_BASE,
  TC_ORDER_ID AS TC_ORDER_ID,
  ORDER_ID AS ORDER_ID,
  TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  ORDER_LINE_ITEM_ID AS ORDER_LINE_ITEM_ID,
  SEQ_NBR AS SEQ_NBR,
  EXP_RECEIVE_CONDITION_CODE AS EXP_RECEIVE_CONDITION_CODE,
  ASN_RECV_RULES AS ASN_RECV_RULES,
  CHECKSUM AS CHECKSUM,
  ACTUAL_WEIGHT_RECEIVED AS ACTUAL_WEIGHT_RECEIVED,
  REF_FIELD_1 AS REF_FIELD_1,
  REF_FIELD_2 AS REF_FIELD_2,
  REF_FIELD_3 AS REF_FIELD_3,
  REF_FIELD_4 AS REF_FIELD_4,
  REF_FIELD_5 AS REF_FIELD_5,
  REF_FIELD_6 AS REF_FIELD_6,
  REF_FIELD_7 AS REF_FIELD_7,
  REF_FIELD_8 AS REF_FIELD_8,
  REF_FIELD_9 AS REF_FIELD_9,
  REF_FIELD_10 AS REF_FIELD_10,
  REF_NUM1 AS REF_NUM1,
  REF_NUM2 AS REF_NUM2,
  REF_NUM3 AS REF_NUM3,
  REF_NUM4 AS REF_NUM4,
  REF_NUM5 AS REF_NUM5,
  DISPOSITION_TYPE AS DISPOSITION_TYPE,
  PRE_RECEIPT_STATUS AS PRE_RECEIPT_STATUS,
  INV_DISPOSITION AS INV_DISPOSITION,
  EXT_PLAN_ID AS EXT_PLAN_ID,
  PURCHASE_ORDERS_LINE_ITEM_ID AS PURCHASE_ORDERS_LINE_ITEM_ID
FROM
  ASN_DETAIL"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("Shortcut_to_ASN_DETAIL_1")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ASN_DETAIL_2


query_2 = f"""SELECT
  Shortcut_to_ASN_DETAIL_1.ASN_DETAIL_ID AS ASN_DETAIL_ID,
  Shortcut_to_ASN_DETAIL_1.ASN_ID AS ASN_ID,
  Shortcut_to_ASN_DETAIL_1.TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  Shortcut_to_ASN_DETAIL_1.SKU_ID AS SKU_ID,
  Shortcut_to_ASN_DETAIL_1.SKU_NAME AS SKU_NAME,
  Shortcut_to_ASN_DETAIL_1.SHIPPED_QTY AS SHIPPED_QTY,
  Shortcut_to_ASN_DETAIL_1.IS_CANCELLED AS IS_CANCELLED,
  Shortcut_to_ASN_DETAIL_1.IS_CLOSED AS IS_CLOSED,
  Shortcut_to_ASN_DETAIL_1.CREATED_DTTM AS CREATED_DTTM,
  Shortcut_to_ASN_DETAIL_1.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  Shortcut_to_ASN_DETAIL_1.TC_PO_LINE_ID AS TC_PO_LINE_ID,
  Shortcut_to_ASN_DETAIL_1.TC_ORDER_ID AS TC_ORDER_ID,
  Shortcut_to_ASN_DETAIL_1.ORDER_ID AS ORDER_ID,
  Shortcut_to_ASN_DETAIL_1.TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  Shortcut_to_ASN_DETAIL_1.ORDER_LINE_ITEM_ID AS ORDER_LINE_ITEM_ID,
  Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0.TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID1,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0,
  Shortcut_to_ASN_DETAIL_1
WHERE
  Shortcut_to_ASN_DETAIL_1.TC_PURCHASE_ORDERS_ID = Shortcut_to_OMS_PURCH_ORDER_LOAD_CTRL_0.TC_PURCHASE_ORDERS_ID"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("SQ_Shortcut_to_ASN_DETAIL_2")

# COMMAND ----------
# DBTITLE 1, EXP_LOAD_TSTMP_3


query_3 = f"""SELECT
  ASN_DETAIL_ID AS ASN_DETAIL_ID,
  ASN_ID AS ASN_ID,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  SKU_ID AS SKU_ID,
  SKU_NAME AS SKU_NAME,
  SHIPPED_QTY AS SHIPPED_QTY,
  IS_CANCELLED AS IS_CANCELLED,
  IS_CLOSED AS IS_CLOSED,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TC_PO_LINE_ID AS TC_PO_LINE_ID,
  TC_ORDER_ID AS TC_ORDER_ID,
  ORDER_ID AS ORDER_ID,
  TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  ORDER_LINE_ITEM_ID AS ORDER_LINE_ITEM_ID,
  now() AS o_LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_ASN_DETAIL_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("EXP_LOAD_TSTMP_3")

# COMMAND ----------
# DBTITLE 1, OMS_ASN_DETAIL_PRE


spark.sql("""INSERT INTO
  OMS_ASN_DETAIL_PRE
SELECT
  ASN_DETAIL_ID AS ASN_DETAIL_ID,
  ASN_ID AS ASN_ID,
  TC_PURCHASE_ORDERS_ID AS TC_PURCHASE_ORDERS_ID,
  SKU_ID AS SKU_ID,
  SKU_NAME AS SKU_NAME,
  SHIPPED_QTY AS SHIPPED_QTY,
  IS_CANCELLED AS IS_CANCELLED,
  IS_CLOSED AS IS_CLOSED,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TC_PO_LINE_ID AS TC_PO_LINE_ID,
  TC_ORDER_ID AS TC_ORDER_ID,
  ORDER_ID AS ORDER_ID,
  TC_ORDER_LINE_ID AS TC_ORDER_LINE_ID,
  ORDER_LINE_ITEM_ID AS ORDER_LINE_ITEM_ID,
  o_LOAD_TSTMP AS LOAD_TSTMP
FROM
  EXP_LOAD_TSTMP_3""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Asn_Detail_Pre")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_Asn_Detail_Pre", mainWorkflowId, parentName)
