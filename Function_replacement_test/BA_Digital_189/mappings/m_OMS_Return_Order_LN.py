# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Return_Order_LN")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_OMS_Return_Order_LN", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_ASN_DETAIL_0


query_0 = f"""SELECT
  OMS_ASN_DETAIL_ID AS OMS_ASN_DETAIL_ID,
  OMS_ASN_ID AS OMS_ASN_ID,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_TC_PO_LINE_ID AS OMS_TC_PO_LINE_ID,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  OMS_ORDER_LINE_ITEM_ID AS OMS_ORDER_LINE_ITEM_ID,
  OMS_TC_ORDER_ID AS OMS_TC_ORDER_ID,
  OMS_TC_ORDER_LINE_ID AS OMS_TC_ORDER_LINE_ID,
  OMS_SKU_ID AS OMS_SKU_ID,
  OMS_SKU_NAME AS OMS_SKU_NAME,
  SHIPPED_QTY AS SHIPPED_QTY,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_ASN_DETAIL"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_ASN_DETAIL_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_ASN_DETAIL_1


query_1 = f"""SELECT
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_TC_PO_LINE_ID AS OMS_TC_PO_LINE_ID,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_ASN_DETAIL_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_ASN_DETAIL_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM1_2


query_2 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  OMS_TC_PO_LINE_ID AS OMS_TC_PO_LINE_ID,
  OMS_PARENT_PO_LINE_ITEM_ID AS OMS_PARENT_PO_LINE_ITEM_ID,
  OMS_ORIGINAL_PO_LINE_ITEM_ID AS OMS_ORIGINAL_PO_LINE_ITEM_ID,
  OMS_PURCHASE_ORDERS_LINE_STATUS_ID AS OMS_PURCHASE_ORDERS_LINE_STATUS_ID,
  ORDER_FULFILLMENT_OPTION_ID AS ORDER_FULFILLMENT_OPTION_ID,
  SKU AS SKU,
  CUST_SKU AS CUST_SKU,
  OMS_PRODUCT_CLASS_ID AS OMS_PRODUCT_CLASS_ID,
  RETURNABLE_FLAG AS RETURNABLE_FLAG,
  EXCHANGEABLE_FLAG AS EXCHANGEABLE_FLAG,
  PRICE_OVERRIDE_FLAG AS PRICE_OVERRIDE_FLAG,
  OMS_STORE_FACILITY_ALIAS_ID AS OMS_STORE_FACILITY_ALIAS_ID,
  OMS_STORE_FACILITY_ID AS OMS_STORE_FACILITY_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  D_FIRST_NAME AS D_FIRST_NAME,
  D_LAST_NAME AS D_LAST_NAME,
  D_ADDR_1 AS D_ADDR_1,
  D_ADDR_2 AS D_ADDR_2,
  D_ADDR_3 AS D_ADDR_3,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CD AS D_POSTAL_CD,
  D_COUNTY AS D_COUNTY,
  D_COUNTRY_CD AS D_COUNTRY_CD,
  D_PHONE_NBR AS D_PHONE_NBR,
  D_EMAIL AS D_EMAIL,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_ALLOC_FINALIZER AS OMS_ALLOC_FINALIZER,
  OMS_DSG_CARRIER_ID AS OMS_DSG_CARRIER_ID,
  DSG_SHIP_VIA AS DSG_SHIP_VIA,
  DO_CREATED_FLAG AS DO_CREATED_FLAG,
  READY_TO_SHIP_FLAG AS READY_TO_SHIP_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  DELETED_FLAG AS DELETED_FLAG,
  OMS_REASON_ID AS OMS_REASON_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  OMS_BACK_ORD_REASON_ID AS OMS_BACK_ORD_REASON_ID,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_REQ_DLVR_TSTMP AS OMS_REQ_DLVR_TSTMP,
  OMS_MUST_DLVR_TSTMP AS OMS_MUST_DLVR_TSTMP,
  OMS_SHIP_BY_DT AS OMS_SHIP_BY_DT,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ORDER_QTY AS ORDER_QTY,
  CANCELLED_QTY AS CANCELLED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  RELEASED_QTY AS RELEASED_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  PPACK_QTY AS PPACK_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  ORIGINAL_PRICE_AMT AS ORIGINAL_PRICE_AMT,
  RETAIL_PRICE_AMT AS RETAIL_PRICE_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  LINE_TOTAL_AMT AS LINE_TOTAL_AMT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  OMS_EXT_CREATED_TSTMP AS OMS_EXT_CREATED_TSTMP,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_PURCHASE_ORDERS_LINE_ITEM"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM1_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM1_3


query_3 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  OMS_TC_PO_LINE_ID AS OMS_TC_PO_LINE_ID,
  OMS_PARENT_PO_LINE_ITEM_ID AS OMS_PARENT_PO_LINE_ITEM_ID,
  OMS_ORIGINAL_PO_LINE_ITEM_ID AS OMS_ORIGINAL_PO_LINE_ITEM_ID,
  SKU AS SKU,
  ORDER_QTY AS ORDER_QTY,
  LINE_TOTAL_AMT AS LINE_TOTAL_AMT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM1_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM1_3")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_4


query_4 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  OMS_TC_PO_LINE_ID AS OMS_TC_PO_LINE_ID,
  OMS_PARENT_PO_LINE_ITEM_ID AS OMS_PARENT_PO_LINE_ITEM_ID,
  OMS_ORIGINAL_PO_LINE_ITEM_ID AS OMS_ORIGINAL_PO_LINE_ITEM_ID,
  OMS_PURCHASE_ORDERS_LINE_STATUS_ID AS OMS_PURCHASE_ORDERS_LINE_STATUS_ID,
  ORDER_FULFILLMENT_OPTION_ID AS ORDER_FULFILLMENT_OPTION_ID,
  SKU AS SKU,
  CUST_SKU AS CUST_SKU,
  OMS_PRODUCT_CLASS_ID AS OMS_PRODUCT_CLASS_ID,
  RETURNABLE_FLAG AS RETURNABLE_FLAG,
  EXCHANGEABLE_FLAG AS EXCHANGEABLE_FLAG,
  PRICE_OVERRIDE_FLAG AS PRICE_OVERRIDE_FLAG,
  OMS_STORE_FACILITY_ALIAS_ID AS OMS_STORE_FACILITY_ALIAS_ID,
  OMS_STORE_FACILITY_ID AS OMS_STORE_FACILITY_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  D_FIRST_NAME AS D_FIRST_NAME,
  D_LAST_NAME AS D_LAST_NAME,
  D_ADDR_1 AS D_ADDR_1,
  D_ADDR_2 AS D_ADDR_2,
  D_ADDR_3 AS D_ADDR_3,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CD AS D_POSTAL_CD,
  D_COUNTY AS D_COUNTY,
  D_COUNTRY_CD AS D_COUNTRY_CD,
  D_PHONE_NBR AS D_PHONE_NBR,
  D_EMAIL AS D_EMAIL,
  ADDR_VALID_FLAG AS ADDR_VALID_FLAG,
  OMS_ALLOC_FINALIZER AS OMS_ALLOC_FINALIZER,
  OMS_DSG_CARRIER_ID AS OMS_DSG_CARRIER_ID,
  DSG_SHIP_VIA AS DSG_SHIP_VIA,
  DO_CREATED_FLAG AS DO_CREATED_FLAG,
  READY_TO_SHIP_FLAG AS READY_TO_SHIP_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  DELETED_FLAG AS DELETED_FLAG,
  OMS_REASON_ID AS OMS_REASON_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  OMS_BACK_ORD_REASON_ID AS OMS_BACK_ORD_REASON_ID,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_REQ_DLVR_TSTMP AS OMS_REQ_DLVR_TSTMP,
  OMS_MUST_DLVR_TSTMP AS OMS_MUST_DLVR_TSTMP,
  OMS_SHIP_BY_DT AS OMS_SHIP_BY_DT,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  ORDER_QTY AS ORDER_QTY,
  CANCELLED_QTY AS CANCELLED_QTY,
  ALLOCATED_QTY AS ALLOCATED_QTY,
  RELEASED_QTY AS RELEASED_QTY,
  RECEIVED_QTY AS RECEIVED_QTY,
  PPACK_QTY AS PPACK_QTY,
  SHIPPED_QTY AS SHIPPED_QTY,
  ORIGINAL_PRICE_AMT AS ORIGINAL_PRICE_AMT,
  RETAIL_PRICE_AMT AS RETAIL_PRICE_AMT,
  UNIT_TAX_AMT AS UNIT_TAX_AMT,
  LINE_TOTAL_AMT AS LINE_TOTAL_AMT,
  UNIT_MONETARY_VALUE AS UNIT_MONETARY_VALUE,
  TOTAL_MONETARY_VALUE AS TOTAL_MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  OMS_EXT_CREATED_TSTMP AS OMS_EXT_CREATED_TSTMP,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_PURCHASE_ORDERS_LINE_ITEM"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_4")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_5


query_5 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  ORDER_QTY AS ORDER_QTY,
  LINE_TOTAL_AMT AS LINE_TOTAL_AMT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("SQ_Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_5")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_SYS_CODE_6


query_6 = f"""SELECT
  OMS_REC_TYPE AS OMS_REC_TYPE,
  OMS_CODE_TYPE AS OMS_CODE_TYPE,
  OMS_CODE_ID AS OMS_CODE_ID,
  OMS_CODE_DESC AS OMS_CODE_DESC,
  OMS_CODE_SHORT_DESC AS OMS_CODE_SHORT_DESC,
  OMS_SYS_CODE_ID AS OMS_SYS_CODE_ID,
  OMS_SYS_CODE_TYPE_ID AS OMS_SYS_CODE_TYPE_ID,
  OMS_CREATE_TSTMP AS OMS_CREATE_TSTMP,
  OMS_MOD_TSTMP AS OMS_MOD_TSTMP,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_SYS_CODE"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("Shortcut_to_OMS_SYS_CODE_6")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_SYS_CODE_7


query_7 = f"""SELECT
  OMS_REC_TYPE AS OMS_REC_TYPE,
  OMS_CODE_TYPE AS OMS_CODE_TYPE,
  OMS_CODE_ID AS OMS_CODE_ID,
  OMS_CODE_DESC AS OMS_CODE_DESC,
  OMS_CODE_SHORT_DESC AS OMS_CODE_SHORT_DESC,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_SYS_CODE_6
WHERE
  OMS_REC_TYPE = 'B'
  AND OMS_CODE_TYPE = '032'"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("SQ_Shortcut_to_OMS_SYS_CODE_7")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_RLM_RETURN_ORDERS_LINE_ITEM_8


query_8 = f"""SELECT
  OMS_RETURN_ORDERS_LINE_ITEM_ID AS OMS_RETURN_ORDERS_LINE_ITEM_ID,
  OMS_RETURN_ORDERS_ID AS OMS_RETURN_ORDERS_ID,
  OMS_RETURN_REASON_ID AS OMS_RETURN_REASON_ID,
  OMS_RETURN_ACTION_ID AS OMS_RETURN_ACTION_ID,
  RECEIVABLE_FLAG AS RECEIVABLE_FLAG,
  EXPECTED_RECEIVING_CONDITION AS EXPECTED_RECEIVING_CONDITION,
  OMS_RECEIVING_VARIANCE_CD AS OMS_RECEIVING_VARIANCE_CD,
  UNIT_SHIPPING_HANDLING_CHARGE_AMT AS UNIT_SHIPPING_HANDLING_CHARGE_AMT,
  TOTAL_FEE AS TOTAL_FEE,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_RLM_RETURN_ORDERS_LINE_ITEM"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("Shortcut_to_OMS_RLM_RETURN_ORDERS_LINE_ITEM_8")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_RLM_RETURN_ORDERS_LINE_ITEM_9


query_9 = f"""SELECT
  OMS_RETURN_ORDERS_LINE_ITEM_ID AS OMS_RETURN_ORDERS_LINE_ITEM_ID,
  OMS_RETURN_ORDERS_ID AS OMS_RETURN_ORDERS_ID,
  OMS_RETURN_REASON_ID AS OMS_RETURN_REASON_ID,
  RECEIVABLE_FLAG AS RECEIVABLE_FLAG,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_RLM_RETURN_ORDERS_LINE_ITEM_8"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("SQ_Shortcut_to_OMS_RLM_RETURN_ORDERS_LINE_ITEM_9")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_RLM_RETURN_ORDERS_10


query_10 = f"""SELECT
  OMS_RETURN_ORDERS_ID AS OMS_RETURN_ORDERS_ID,
  RETURN_ORDERS_XO_CREATED_FLAG AS RETURN_ORDERS_XO_CREATED_FLAG,
  AUTOMATED_RMA_FLAG AS AUTOMATED_RMA_FLAG,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_RLM_RETURN_ORDERS"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("Shortcut_to_OMS_RLM_RETURN_ORDERS_10")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_RLM_RETURN_ORDERS_11


query_11 = f"""SELECT
  OMS_RETURN_ORDERS_ID AS OMS_RETURN_ORDERS_ID,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_RLM_RETURN_ORDERS_10"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("SQ_Shortcut_to_OMS_RLM_RETURN_ORDERS_11")

# COMMAND ----------
# DBTITLE 1, JNR_RO_ROL_12


query_12 = f"""SELECT
  DETAIL.OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  DETAIL.UPDATE_TSTMP AS ro_UPDATE_TSTMP,
  MASTER.OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  MASTER.OMS_RETURN_ORDERS_ID AS rol_OMS_RETURN_ORDERS_ID,
  MASTER.OMS_RETURN_REASON_ID AS rol_OMS_RETURN_REASON_ID,
  MASTER.RECEIVABLE_FLAG AS rol_RECEIVABLE_FLAG,
  MASTER.UPDATE_TSTMP AS rol_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_RLM_RETURN_ORDERS_LINE_ITEM_9 MASTER
  INNER JOIN SQ_Shortcut_to_OMS_RLM_RETURN_ORDERS_11 DETAIL ON MASTER.OMS_RETURN_ORDERS_ID = DETAIL.OMS_RETURN_ORDERS_ID"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("JNR_RO_ROL_12")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_PURCHASE_ORDERS1_13


query_13 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_EXT_PURCHASE_ORDERS_ID AS OMS_EXT_PURCHASE_ORDERS_ID,
  OMS_PARENT_PURCHASE_ORDERS_ID AS OMS_PARENT_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_TYPE_ID AS OMS_PURCHASE_ORDERS_TYPE_ID,
  OMS_PURCHASE_ORDERS_STATUS_ID AS OMS_PURCHASE_ORDERS_STATUS_ID,
  OMS_ORDER_CATEGORY_ID AS OMS_ORDER_CATEGORY_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ID,
  OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_DES_SHIP_VIA_FACILITY_ID AS OMS_DES_SHIP_VIA_FACILITY_ID,
  OMS_CUSTOMER_CD AS OMS_CUSTOMER_CD,
  CUSTOMER_FIRST_NAME AS CUSTOMER_FIRST_NAME,
  CUSTOMER_LAST_NAME AS CUSTOMER_LAST_NAME,
  CUSTOMER_PHONE_NBR AS CUSTOMER_PHONE_NBR,
  CUSTOMER_EMAIL AS CUSTOMER_EMAIL,
  OMS_RETURN_REFERENCE_NBR AS OMS_RETURN_REFERENCE_NBR,
  OMS_BILL_OF_LADING_NBR AS OMS_BILL_OF_LADING_NBR,
  OMS_TRANS_RESP_CD AS OMS_TRANS_RESP_CD,
  OMS_COMMODITY_CODE_ID AS OMS_COMMODITY_CODE_ID,
  OMS_CARRIER_ID AS OMS_CARRIER_ID,
  OMS_PRODUCT_CLASS_ID AS OMS_PRODUCT_CLASS_ID,
  OMS_PROTECTION_LEVEL_ID AS OMS_PROTECTION_LEVEL_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_CHANNEL_TYPE_ID AS OMS_CHANNEL_TYPE_ID,
  OMS_CHANNEL_ID AS OMS_CHANNEL_ID,
  OMS_FULFILL_MODE_ID AS OMS_FULFILL_MODE_ID,
  OMS_ENTERED_BY AS OMS_ENTERED_BY,
  OMS_ENTRY_CD AS OMS_ENTRY_CD,
  OMS_PAYMENT_MODE_ID AS OMS_PAYMENT_MODE_ID,
  OMS_PAYMENT_STATUS_ID AS OMS_PAYMENT_STATUS_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  ORDER_RECEIVED_FLAG AS ORDER_RECEIVED_FLAG,
  ON_HOLD_FLAG AS ON_HOLD_FLAG,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  OMS_REASON_ID AS OMS_REASON_ID,
  OMS_DECLINE_REASON_ID AS OMS_DECLINE_REASON_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  IMPORTED_FLAG AS IMPORTED_FLAG,
  PURCHASE_ORDERS_RECONCILED_FLAG AS PURCHASE_ORDERS_RECONCILED_FLAG,
  READY_TO_SHIP_FLAG AS READY_TO_SHIP_FLAG,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  DIRECT_ALLOWED_FLAG AS DIRECT_ALLOWED_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  OMS_PURCHASE_ORDERS_DT_TSTMP AS OMS_PURCHASE_ORDERS_DT_TSTMP,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_REQUESTED_DLVR_TSTMP AS OMS_REQUESTED_DLVR_TSTMP,
  OMS_MUST_DLVR_TSTMP AS OMS_MUST_DLVR_TSTMP,
  OMS_PROMISED_DLVR_TSTMP AS OMS_PROMISED_DLVR_TSTMP,
  OMS_DUE_DT AS OMS_DUE_DT,
  OMS_CANCEL_DT AS OMS_CANCEL_DT,
  OMS_RELEASE_TSTMP AS OMS_RELEASE_TSTMP,
  OMS_FIRST_RCPT_TSTMP AS OMS_FIRST_RCPT_TSTMP,
  OMS_LAST_RCPT_TSTMP AS OMS_LAST_RCPT_TSTMP,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  ORIG_BUDG_COST AS ORIG_BUDG_COST,
  BUDG_COST AS BUDG_COST,
  BUDG_COST_CURRENCY_CD AS BUDG_COST_CURRENCY_CD,
  TAX_CHARGES_AMT AS TAX_CHARGES_AMT,
  MISC_CHARGES_AMT AS MISC_CHARGES_AMT,
  GRAND_TOTAL_AMT AS GRAND_TOTAL_AMT,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  CURRENCY_CD AS CURRENCY_CD,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_PURCHASE_ORDERS"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("Shortcut_to_OMS_PURCHASE_ORDERS1_13")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_PURCHASE_ORDERS1_14


query_14 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_PARENT_PURCHASE_ORDERS_ID AS OMS_PARENT_PURCHASE_ORDERS_ID,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_PURCHASE_ORDERS1_13"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("SQ_Shortcut_to_OMS_PURCHASE_ORDERS1_14")

# COMMAND ----------
# DBTITLE 1, JNR_PO_15


query_15 = f"""SELECT
  DETAIL.ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  DETAIL.ro_UPDATE_TSTMP AS ro_UPDATE_TSTMP,
  DETAIL.rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  DETAIL.rol_OMS_RETURN_REASON_ID AS rol_OMS_RETURN_REASON_ID,
  DETAIL.rol_RECEIVABLE_FLAG AS rol_RECEIVABLE_FLAG,
  DETAIL.rol_UPDATE_TSTMP AS rol_UPDATE_TSTMP,
  MASTER.OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  MASTER.OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  MASTER.OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  MASTER.OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  MASTER.OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  MASTER.OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  MASTER.UPDATE_TSTMP AS po_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_PURCHASE_ORDERS1_14 MASTER
  INNER JOIN JNR_RO_ROL_12 DETAIL ON MASTER.OMS_PURCHASE_ORDERS_ID = DETAIL.ro_OMS_RETURN_ORDERS_ID"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("JNR_PO_15")

# COMMAND ----------
# DBTITLE 1, JNR_POL_16


query_16 = f"""SELECT
  DETAIL.ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  DETAIL.ro_UPDATE_TSTMP AS ro_UPDATE_TSTMP,
  DETAIL.rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  DETAIL.rol_OMS_RETURN_REASON_ID AS rol_OMS_RETURN_REASON_ID,
  DETAIL.rol_RECEIVABLE_FLAG AS rol_RECEIVABLE_FLAG,
  DETAIL.rol_UPDATE_TSTMP AS rol_UPDATE_TSTMP,
  DETAIL.po_OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  MASTER.OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  MASTER.OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  MASTER.OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  MASTER.OMS_PARENT_PO_LINE_ITEM_ID AS pol_OMS_PARENT_PO_LINE_ITEM_ID,
  MASTER.OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  MASTER.SKU AS pol_SKU,
  MASTER.ORDER_QTY AS pol_ORDER_QTY,
  MASTER.LINE_TOTAL_AMT AS pol_LINE_TOTAL_AMT,
  MASTER.UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM1_3 MASTER
  INNER JOIN JNR_PO_15 DETAIL ON MASTER.OMS_PURCHASE_ORDERS_ID = DETAIL.ro_OMS_RETURN_ORDERS_ID
  AND MASTER.OMS_PURCHASE_ORDERS_LINE_ITEM_ID = DETAIL.rol_OMS_RETURN_ORDERS_LINE_ITEM_ID"""

df_16 = spark.sql(query_16)

df_16.createOrReplaceTempView("JNR_POL_16")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_PURCHASE_ORDERS_17


query_17 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_EXT_PURCHASE_ORDERS_ID AS OMS_EXT_PURCHASE_ORDERS_ID,
  OMS_PARENT_PURCHASE_ORDERS_ID AS OMS_PARENT_PURCHASE_ORDERS_ID,
  OMS_PURCHASE_ORDERS_TYPE_ID AS OMS_PURCHASE_ORDERS_TYPE_ID,
  OMS_PURCHASE_ORDERS_STATUS_ID AS OMS_PURCHASE_ORDERS_STATUS_ID,
  OMS_ORDER_CATEGORY_ID AS OMS_ORDER_CATEGORY_ID,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  OMS_O_FACILITY_ALIAS_ID AS OMS_O_FACILITY_ALIAS_ID,
  OMS_D_FACILITY_ID AS OMS_D_FACILITY_ID,
  OMS_D_FACILITY_ALIAS_ID AS OMS_D_FACILITY_ALIAS_ID,
  OMS_BILL_FACILITY_ID AS OMS_BILL_FACILITY_ID,
  OMS_BILL_FACILITY_ALIAS_ID AS OMS_BILL_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_ORIGIN_SHIP_VIA_FACILITY_ID AS OMS_ORIGIN_SHIP_VIA_FACILITY_ID,
  OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID AS OMS_DES_SHIP_VIA_FACILITY_ALIAS_ID,
  OMS_DES_SHIP_VIA_FACILITY_ID AS OMS_DES_SHIP_VIA_FACILITY_ID,
  OMS_CUSTOMER_CD AS OMS_CUSTOMER_CD,
  CUSTOMER_FIRST_NAME AS CUSTOMER_FIRST_NAME,
  CUSTOMER_LAST_NAME AS CUSTOMER_LAST_NAME,
  CUSTOMER_PHONE_NBR AS CUSTOMER_PHONE_NBR,
  CUSTOMER_EMAIL AS CUSTOMER_EMAIL,
  OMS_RETURN_REFERENCE_NBR AS OMS_RETURN_REFERENCE_NBR,
  OMS_BILL_OF_LADING_NBR AS OMS_BILL_OF_LADING_NBR,
  OMS_TRANS_RESP_CD AS OMS_TRANS_RESP_CD,
  OMS_COMMODITY_CODE_ID AS OMS_COMMODITY_CODE_ID,
  OMS_CARRIER_ID AS OMS_CARRIER_ID,
  OMS_PRODUCT_CLASS_ID AS OMS_PRODUCT_CLASS_ID,
  OMS_PROTECTION_LEVEL_ID AS OMS_PROTECTION_LEVEL_ID,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  OMS_CHANNEL_TYPE_ID AS OMS_CHANNEL_TYPE_ID,
  OMS_CHANNEL_ID AS OMS_CHANNEL_ID,
  OMS_FULFILL_MODE_ID AS OMS_FULFILL_MODE_ID,
  OMS_ENTERED_BY AS OMS_ENTERED_BY,
  OMS_ENTRY_CD AS OMS_ENTRY_CD,
  OMS_PAYMENT_MODE_ID AS OMS_PAYMENT_MODE_ID,
  OMS_PAYMENT_STATUS_ID AS OMS_PAYMENT_STATUS_ID,
  DROPOFF_PICKUP AS DROPOFF_PICKUP,
  ORDER_RECEIVED_FLAG AS ORDER_RECEIVED_FLAG,
  ON_HOLD_FLAG AS ON_HOLD_FLAG,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  CLOSED_FLAG AS CLOSED_FLAG,
  OMS_REASON_ID AS OMS_REASON_ID,
  OMS_DECLINE_REASON_ID AS OMS_DECLINE_REASON_ID,
  OMS_REASON_CODES_GROUP_ID AS OMS_REASON_CODES_GROUP_ID,
  IMPORTED_FLAG AS IMPORTED_FLAG,
  PURCHASE_ORDERS_RECONCILED_FLAG AS PURCHASE_ORDERS_RECONCILED_FLAG,
  READY_TO_SHIP_FLAG AS READY_TO_SHIP_FLAG,
  CUSTOMER_PICKUP_FLAG AS CUSTOMER_PICKUP_FLAG,
  DIRECT_ALLOWED_FLAG AS DIRECT_ALLOWED_FLAG,
  PARTIALLY_PLANNED_FLAG AS PARTIALLY_PLANNED_FLAG,
  OMS_PURCHASE_ORDERS_DT_TSTMP AS OMS_PURCHASE_ORDERS_DT_TSTMP,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  OMS_REQUESTED_DLVR_TSTMP AS OMS_REQUESTED_DLVR_TSTMP,
  OMS_MUST_DLVR_TSTMP AS OMS_MUST_DLVR_TSTMP,
  OMS_PROMISED_DLVR_TSTMP AS OMS_PROMISED_DLVR_TSTMP,
  OMS_DUE_DT AS OMS_DUE_DT,
  OMS_CANCEL_DT AS OMS_CANCEL_DT,
  OMS_RELEASE_TSTMP AS OMS_RELEASE_TSTMP,
  OMS_FIRST_RCPT_TSTMP AS OMS_FIRST_RCPT_TSTMP,
  OMS_LAST_RCPT_TSTMP AS OMS_LAST_RCPT_TSTMP,
  MONETARY_VALUE AS MONETARY_VALUE,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  ORIG_BUDG_COST AS ORIG_BUDG_COST,
  BUDG_COST AS BUDG_COST,
  BUDG_COST_CURRENCY_CD AS BUDG_COST_CURRENCY_CD,
  TAX_CHARGES_AMT AS TAX_CHARGES_AMT,
  MISC_CHARGES_AMT AS MISC_CHARGES_AMT,
  GRAND_TOTAL_AMT AS GRAND_TOTAL_AMT,
  FREIGHT_REVENUE_AMT AS FREIGHT_REVENUE_AMT,
  CURRENCY_CD AS CURRENCY_CD,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_PURCHASE_ORDERS"""

df_17 = spark.sql(query_17)

df_17.createOrReplaceTempView("Shortcut_to_OMS_PURCHASE_ORDERS_17")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_PURCHASE_ORDERS_18


query_18 = f"""SELECT
  OMS_PURCHASE_ORDERS_ID AS OMS_PURCHASE_ORDERS_ID,
  OMS_TC_PURCHASE_ORDERS_ID AS OMS_TC_PURCHASE_ORDERS_ID,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_PURCHASE_ORDERS_17"""

df_18 = spark.sql(query_18)

df_18.createOrReplaceTempView("SQ_Shortcut_to_OMS_PURCHASE_ORDERS_18")

# COMMAND ----------
# DBTITLE 1, JNR_PO2_19


query_19 = f"""SELECT
  DETAIL.ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  DETAIL.ro_UPDATE_TSTMP AS ro_UPDATE_TSTMP,
  DETAIL.rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  DETAIL.rol_OMS_RETURN_REASON_ID AS rol_OMS_RETURN_REASON_ID,
  DETAIL.rol_RECEIVABLE_FLAG AS rol_RECEIVABLE_FLAG,
  DETAIL.rol_UPDATE_TSTMP AS rol_UPDATE_TSTMP,
  DETAIL.po_OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  DETAIL.pol_OMS_PARENT_PO_LINE_ITEM_ID AS pol_OMS_PARENT_PO_LINE_ITEM_ID,
  DETAIL.pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  DETAIL.pol_SKU AS pol_SKU,
  DETAIL.pol_ORDER_QTY AS pol_ORDER_QTY,
  DETAIL.pol_LINE_TOTAL_AMT AS pol_LINE_TOTAL_AMT,
  DETAIL.pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  MASTER.OMS_PURCHASE_ORDERS_ID AS po2_OMS_PURCHASE_ORDERS_ID,
  MASTER.OMS_TC_PURCHASE_ORDERS_ID AS po2_OMS_TC_PURCHASE_ORDERS_ID,
  MASTER.OMS_CREATED_TSTMP AS po2_OMS_CREATED_TSTMP,
  MASTER.UPDATE_TSTMP AS po2_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_PURCHASE_ORDERS_18 MASTER
  INNER JOIN JNR_POL_16 DETAIL ON MASTER.OMS_PURCHASE_ORDERS_ID = DETAIL.po_OMS_PARENT_PURCHASE_ORDERS_ID"""

df_19 = spark.sql(query_19)

df_19.createOrReplaceTempView("JNR_PO2_19")

# COMMAND ----------
# DBTITLE 1, JNR_POL2_20


query_20 = f"""SELECT
  DETAIL.ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  DETAIL.ro_UPDATE_TSTMP AS ro_UPDATE_TSTMP,
  DETAIL.rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  DETAIL.rol_OMS_RETURN_REASON_ID AS rol_OMS_RETURN_REASON_ID,
  DETAIL.rol_RECEIVABLE_FLAG AS rol_RECEIVABLE_FLAG,
  DETAIL.rol_UPDATE_TSTMP AS rol_UPDATE_TSTMP,
  DETAIL.po_OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  DETAIL.pol_OMS_PARENT_PO_LINE_ITEM_ID AS pol_OMS_PARENT_PO_LINE_ITEM_ID,
  DETAIL.pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  DETAIL.pol_SKU AS pol_SKU,
  DETAIL.pol_ORDER_QTY AS pol_ORDER_QTY,
  DETAIL.pol_LINE_TOTAL_AMT AS pol_LINE_TOTAL_AMT,
  DETAIL.pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  DETAIL.po2_OMS_PURCHASE_ORDERS_ID AS po2_OMS_PURCHASE_ORDERS_ID,
  DETAIL.po2_OMS_TC_PURCHASE_ORDERS_ID AS po2_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po2_OMS_CREATED_TSTMP AS po2_OMS_CREATED_TSTMP,
  DETAIL.po2_UPDATE_TSTMP AS po2_UPDATE_TSTMP,
  MASTER.OMS_PURCHASE_ORDERS_ID AS pol2_OMS_PURCHASE_ORDERS_ID,
  MASTER.OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol2_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  MASTER.ORDER_QTY AS pol2_ORDER_QTY,
  MASTER.LINE_TOTAL_AMT AS pol2_LINE_TOTAL_AMT,
  MASTER.UPDATE_TSTMP AS pol2_UPDATE_TSTMP,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_PURCHASE_ORDERS_LINE_ITEM_5 MASTER
  INNER JOIN JNR_PO2_19 DETAIL ON MASTER.OMS_PURCHASE_ORDERS_ID = DETAIL.po_OMS_PARENT_PURCHASE_ORDERS_ID
  AND MASTER.OMS_PURCHASE_ORDERS_LINE_ITEM_ID = DETAIL.pol_OMS_ORIGINAL_PO_LINE_ITEM_ID"""

df_20 = spark.sql(query_20)

df_20.createOrReplaceTempView("JNR_POL2_20")

# COMMAND ----------
# DBTITLE 1, JNR_SC_21


query_21 = f"""SELECT
  DETAIL.ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  DETAIL.ro_UPDATE_TSTMP AS ro_UPDATE_TSTMP,
  DETAIL.rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  DETAIL.rol_OMS_RETURN_REASON_ID AS rol_OMS_RETURN_REASON_ID,
  DETAIL.rol_RECEIVABLE_FLAG AS rol_RECEIVABLE_FLAG,
  DETAIL.rol_UPDATE_TSTMP AS rol_UPDATE_TSTMP,
  DETAIL.po_OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.pol_OMS_PURCHASE_ORDERS_ID AS pol_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  DETAIL.pol_OMS_PARENT_PO_LINE_ITEM_ID AS pol_OMS_PARENT_PO_LINE_ITEM_ID,
  DETAIL.pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  DETAIL.pol_SKU AS pol_SKU,
  DETAIL.pol_ORDER_QTY AS pol_ORDER_QTY,
  DETAIL.pol_LINE_TOTAL_AMT AS pol_LINE_TOTAL_AMT,
  DETAIL.pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  DETAIL.po2_OMS_PURCHASE_ORDERS_ID AS po2_OMS_PURCHASE_ORDERS_ID,
  DETAIL.po2_OMS_TC_PURCHASE_ORDERS_ID AS po2_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po2_OMS_CREATED_TSTMP AS po2_OMS_CREATED_TSTMP,
  DETAIL.po2_UPDATE_TSTMP AS po2_UPDATE_TSTMP,
  DETAIL.pol2_OMS_PURCHASE_ORDERS_ID AS pol2_OMS_PURCHASE_ORDERS_ID,
  DETAIL.pol2_OMS_PURCHASE_ORDERS_LINE_ITEM_ID AS pol2_OMS_PURCHASE_ORDERS_LINE_ITEM_ID,
  DETAIL.pol2_ORDER_QTY AS pol2_ORDER_QTY,
  DETAIL.pol2_LINE_TOTAL_AMT AS pol2_LINE_TOTAL_AMT,
  DETAIL.pol2_UPDATE_TSTMP AS pol2_UPDATE_TSTMP,
  MASTER.OMS_REC_TYPE AS sc_OMS_REC_TYPE,
  MASTER.OMS_CODE_TYPE AS sc_OMS_CODE_TYPE,
  MASTER.OMS_CODE_ID AS sc_OMS_CODE_ID,
  MASTER.OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  MASTER.OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  MASTER.UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_SYS_CODE_7 MASTER
  RIGHT JOIN JNR_POL2_20 DETAIL ON MASTER.OMS_CODE_ID = DETAIL.rol_OMS_RETURN_REASON_ID"""

df_21 = spark.sql(query_21)

df_21.createOrReplaceTempView("JNR_SC_21")

# COMMAND ----------
# DBTITLE 1, JNR_AD_22


query_22 = f"""SELECT
  DETAIL.ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  DETAIL.ro_UPDATE_TSTMP AS ro_UPDATE_TSTMP,
  DETAIL.rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  DETAIL.rol_RECEIVABLE_FLAG AS rol_RECEIVABLE_FLAG,
  DETAIL.rol_UPDATE_TSTMP AS rol_UPDATE_TSTMP,
  DETAIL.po_OMS_PURCHASE_ORDERS_ID AS po_OMS_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  DETAIL.po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  DETAIL.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  DETAIL.pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  DETAIL.pol_SKU AS pol_SKU,
  DETAIL.pol_ORDER_QTY AS pol_ORDER_QTY,
  DETAIL.pol_LINE_TOTAL_AMT AS pol_LINE_TOTAL_AMT,
  DETAIL.pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  DETAIL.po2_OMS_TC_PURCHASE_ORDERS_ID AS po2_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po2_OMS_CREATED_TSTMP AS po2_OMS_CREATED_TSTMP,
  DETAIL.po2_UPDATE_TSTMP AS po2_UPDATE_TSTMP,
  DETAIL.pol2_ORDER_QTY AS pol2_ORDER_QTY,
  DETAIL.pol2_LINE_TOTAL_AMT AS pol2_LINE_TOTAL_AMT,
  DETAIL.pol2_UPDATE_TSTMP AS pol2_UPDATE_TSTMP,
  DETAIL.sc_OMS_CODE_ID AS sc_OMS_CODE_ID,
  DETAIL.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  DETAIL.sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  DETAIL.sc_UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  MASTER.OMS_TC_PURCHASE_ORDERS_ID AS ad_OMS_TC_PURCHASE_ORDERS_ID,
  MASTER.OMS_TC_PO_LINE_ID AS ad_OMS_TC_PO_LINE_ID,
  MASTER.OMS_CREATED_TSTMP AS ad_OMS_CREATED_TSTMP,
  MASTER.UPDATE_TSTMP AS ad_UPDATE_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_ASN_DETAIL_1 MASTER
  RIGHT JOIN JNR_SC_21 DETAIL ON MASTER.OMS_TC_PURCHASE_ORDERS_ID = DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID
  AND MASTER.OMS_TC_PO_LINE_ID = DETAIL.pol_OMS_TC_PO_LINE_ID"""

df_22 = spark.sql(query_22)

df_22.createOrReplaceTempView("JNR_AD_22")

# COMMAND ----------
# DBTITLE 1, EXP_ORDER_NBR_23


query_23 = f"""SELECT
  ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  TO_INTEGER(pol_SKU) AS o_SKU,
  pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  pol_ORDER_QTY AS pol_RETURN_ORDER_QTY,
  pol2_ORDER_QTY AS pol2_ORIG_ORDER_QTY,
  pol_LINE_TOTAL_AMT AS pol_RETURN_LINE_TOTAL_AMT,
  pol2_LINE_TOTAL_AMT AS pol2_ORIG_LINE_TOTAL_AMT,
  po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  po2_OMS_TC_PURCHASE_ORDERS_ID AS po2_OMS_TC_PURCHASE_ORDERS_ID,
  IFF(
    TO_CHAR(SUBSTR(po2_OMS_TC_PURCHASE_ORDERS_ID, 1, 1)) = 'X',
    TO_BIGINT(
      SUBSTR(
        po2_OMS_TC_PURCHASE_ORDERS_ID,
        2,
        LENGTH(po2_OMS_TC_PURCHASE_ORDERS_ID)
      )
    ),
    IFF(
      LOWER(po2_OMS_TC_PURCHASE_ORDERS_ID) <> UPPER(po2_OMS_TC_PURCHASE_ORDERS_ID),
      0,
      TO_BIGINT(po2_OMS_TC_PURCHASE_ORDERS_ID)
    )
  ) AS o_ORDER_NBR,
  po2_OMS_CREATED_TSTMP AS in_po2_OMS_ORDER_CREATED_TSTMP,
  TRUNC(po2_OMS_CREATED_TSTMP) AS o_OMS_ORDER_CREATED_TSTMP,
  po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  sc_OMS_CODE_ID AS sc_OMS_CODE_ID,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  IFF(
    ISNULL(rol_RECEIVABLE_FLAG),
    0,
    rol_RECEIVABLE_FLAG
  ) AS o_RECEIVABLE_FLAG,
  ad_OMS_CREATED_TSTMP AS ad_PRODUCT_RETURNED_TSTMP,
  ro_UPDATE_TSTMP AS ro_UPDATE_TSTMP,
  rol_UPDATE_TSTMP AS rol_UPDATE_TSTMP,
  po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  po2_UPDATE_TSTMP AS po2_UPDATE_TSTMP,
  pol2_UPDATE_TSTMP AS pol2_UPDATE_TSTMP,
  sc_UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  ad_UPDATE_TSTMP AS ad_UPDATE_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_AD_22"""

df_23 = spark.sql(query_23)

df_23.createOrReplaceTempView("EXP_ORDER_NBR_23")

# COMMAND ----------
# DBTITLE 1, FIL_UPDATED_TSTMP_24


query_24 = f"""SELECT
  ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  o_SKU AS pol_SKU,
  pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  pol_RETURN_ORDER_QTY AS pol_RETURN_ORDER_QTY,
  pol2_ORIG_ORDER_QTY AS pol2_ORIG_ORDER_QTY,
  pol_RETURN_LINE_TOTAL_AMT AS pol_RETURN_LINE_TOTAL_AMT,
  pol2_ORIG_LINE_TOTAL_AMT AS pol2_ORIG_LINE_TOTAL_AMT,
  po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  po2_OMS_TC_PURCHASE_ORDERS_ID AS po2_OMS_TC_PURCHASE_ORDERS_ID,
  o_ORDER_NBR AS o_ORDER_NBR,
  o_OMS_ORDER_CREATED_TSTMP AS po2_OMS_ORDER_CREATED_TSTMP,
  po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  sc_OMS_CODE_ID AS sc_OMS_CODE_ID,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  o_RECEIVABLE_FLAG AS o_RECEIVABLE_FLAG,
  ad_PRODUCT_RETURNED_TSTMP AS ad_PRODUCT_RETURNED_TSTMP,
  ro_UPDATE_TSTMP AS ro_UPDATE_TSTMP,
  rol_UPDATE_TSTMP AS rol_UPDATE_TSTMP,
  po_UPDATE_TSTMP AS po_UPDATE_TSTMP,
  pol_UPDATE_TSTMP AS pol_UPDATE_TSTMP,
  po2_UPDATE_TSTMP AS po2_UPDATE_TSTMP,
  pol2_UPDATE_TSTMP AS pol2_UPDATE_TSTMP,
  sc_UPDATE_TSTMP AS sc_UPDATE_TSTMP,
  ad_UPDATE_TSTMP AS ad_UPDATE_TSTMP,
  in_po2_OMS_ORDER_CREATED_TSTMP AS in_po2_OMS_ORDER_CREATED_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_ORDER_NBR_23
WHERE
  ro_UPDATE_TSTMP > TRUNC(now())
  OR rol_UPDATE_TSTMP > TRUNC(now())
  OR po_UPDATE_TSTMP > TRUNC(now())
  OR pol_UPDATE_TSTMP > TRUNC(now())
  OR po2_UPDATE_TSTMP > TRUNC(now())
  OR pol2_UPDATE_TSTMP > TRUNC(now())"""

df_24 = spark.sql(query_24)

df_24.createOrReplaceTempView("FIL_UPDATED_TSTMP_24")

# COMMAND ----------
# DBTITLE 1, LKP_SKU_PROFILE_25


query_25 = f"""SELECT
  SP.PRODUCT_ID AS PRODUCT_ID,
  FUT2.ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  FUT2.rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  FUT2.po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  FUT2.pol_SKU AS pol_SKU,
  FUT2.pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  FUT2.pol_RETURN_ORDER_QTY AS pol_RETURN_ORDER_QTY,
  FUT2.pol2_ORIG_ORDER_QTY AS pol2_ORIG_ORDER_QTY,
  FUT2.pol_RETURN_LINE_TOTAL_AMT AS pol_RETURN_LINE_TOTAL_AMT,
  FUT2.pol2_ORIG_LINE_TOTAL_AMT AS pol2_ORIG_LINE_TOTAL_AMT,
  FUT2.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  FUT2.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  FUT2.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  FUT2.po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  FUT2.po2_OMS_TC_PURCHASE_ORDERS_ID AS po2_OMS_TC_PURCHASE_ORDERS_ID,
  FUT2.o_ORDER_NBR AS o_ORDER_NBR,
  FUT2.po2_OMS_ORDER_CREATED_TSTMP AS po2_OMS_ORDER_CREATED_TSTMP,
  FUT2.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  FUT2.sc_OMS_CODE_ID AS sc_OMS_CODE_ID,
  FUT2.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  FUT2.sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  FUT2.o_RECEIVABLE_FLAG AS o_RECEIVABLE_FLAG,
  FUT2.ad_PRODUCT_RETURNED_TSTMP AS ad_PRODUCT_RETURNED_TSTMP,
  FUT2.in_po2_OMS_ORDER_CREATED_TSTMP AS in_po2_OMS_ORDER_CREATED_TSTMP,
  FUT2.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_UPDATED_TSTMP_24 FUT2
  LEFT JOIN SKU_PROFILE SP ON SP.SKU_NBR = FUT2.pol_SKU"""

df_25 = spark.sql(query_25)

df_25.createOrReplaceTempView("LKP_SKU_PROFILE_25")

# COMMAND ----------
# DBTITLE 1, LKP_CURRENCY_DAY_26


query_26 = f"""SELECT
  CD.DAY_DT AS DAY_DT,
  CD.EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  LSP2.ro_OMS_RETURN_ORDERS_ID AS ro_OMS_RETURN_ORDERS_ID,
  LSP2.rol_OMS_RETURN_ORDERS_LINE_ITEM_ID AS rol_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  LSP2.po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  LSP2.pol_SKU AS pol_SKU,
  LSP2.pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  LSP2.pol_RETURN_ORDER_QTY AS pol_RETURN_ORDER_QTY,
  LSP2.pol2_ORIG_ORDER_QTY AS pol2_ORIG_ORDER_QTY,
  LSP2.pol_RETURN_LINE_TOTAL_AMT AS pol_RETURN_LINE_TOTAL_AMT,
  LSP2.pol2_ORIG_LINE_TOTAL_AMT AS pol2_ORIG_LINE_TOTAL_AMT,
  LSP2.po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  LSP2.pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  LSP2.po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  LSP2.po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  LSP2.po2_OMS_TC_PURCHASE_ORDERS_ID AS po2_OMS_TC_PURCHASE_ORDERS_ID,
  LSP2.o_ORDER_NBR AS o_ORDER_NBR,
  LSP2.po2_OMS_ORDER_CREATED_TSTMP AS po2_OMS_ORDER_CREATED_TSTMP,
  LSP2.po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  LSP2.sc_OMS_CODE_ID AS sc_OMS_CODE_ID,
  LSP2.sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  LSP2.sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  LSP2.o_RECEIVABLE_FLAG AS o_RECEIVABLE_FLAG,
  LSP2.ad_PRODUCT_RETURNED_TSTMP AS ad_PRODUCT_RETURNED_TSTMP,
  LSP2.PRODUCT_ID AS PRODUCT_ID,
  LSP2.in_po2_OMS_ORDER_CREATED_TSTMP AS in_po2_OMS_ORDER_CREATED_TSTMP,
  LSP2.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_SKU_PROFILE_25 LSP2
  LEFT JOIN CURRENCY_DAY CD ON CD.DAY_DT = LSP2.po2_OMS_ORDER_CREATED_TSTMP"""

df_26 = spark.sql(query_26)

df_26.createOrReplaceTempView("LKP_CURRENCY_DAY_26")

# COMMAND ----------
# DBTITLE 1, EXP_PRE_27


query_27 = f"""SELECT
  TO_INTEGER(ro_OMS_RETURN_ORDERS_ID) AS o_OMS_RETURN_ORDERS_ID,
  TO_INTEGER(rol_OMS_RETURN_ORDERS_LINE_ITEM_ID) AS o_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  po_OMS_TC_COMPANY_ID AS po_OMS_TC_COMPANY_ID,
  pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS pol_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  pol_RETURN_ORDER_QTY AS pol_RETURN_ORDER_QTY,
  pol2_ORIG_ORDER_QTY AS pol2_ORIG_ORDER_QTY,
  pol_RETURN_LINE_TOTAL_AMT AS pol_RETURN_LINE_TOTAL_AMT,
  pol2_ORIG_LINE_TOTAL_AMT AS pol2_ORIG_LINE_TOTAL_AMT,
  po_OMS_LAST_UPDATED_TSTMP AS po_OMS_LAST_UPDATED_TSTMP,
  pol_OMS_TC_PO_LINE_ID AS pol_OMS_TC_PO_LINE_ID,
  po_OMS_TC_PURCHASE_ORDERS_ID AS po_OMS_TC_PURCHASE_ORDERS_ID,
  po_OMS_PARENT_PURCHASE_ORDERS_ID AS po_OMS_PARENT_PURCHASE_ORDERS_ID,
  po2_OMS_TC_PURCHASE_ORDERS_ID AS po2_OMS_TC_PURCHASE_ORDERS_ID,
  o_ORDER_NBR AS o_ORDER_NBR,
  in_po2_OMS_ORDER_CREATED_TSTMP AS po2_OMS_ORDER_CREATED_TSTMP,
  po_OMS_CREATED_TSTMP AS po_OMS_CREATED_TSTMP,
  sc_OMS_CODE_ID AS sc_OMS_CODE_ID,
  sc_OMS_CODE_DESC AS sc_OMS_CODE_DESC,
  sc_OMS_CODE_SHORT_DESC AS sc_OMS_CODE_SHORT_DESC,
  o_RECEIVABLE_FLAG AS o_RECEIVABLE_FLAG,
  ad_PRODUCT_RETURNED_TSTMP AS ad_PRODUCT_RETURNED_TSTMP,
  PRODUCT_ID AS PRODUCT_ID,
  IFF(po_OMS_TC_COMPANY_ID = 8840, 1, EXCHANGE_RATE_PCNT) AS o_EXCHANGE_RATE_PCNT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_CURRENCY_DAY_26"""

df_27 = spark.sql(query_27)

df_27.createOrReplaceTempView("EXP_PRE_27")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_RETURN_ORDER_LN1_28


query_28 = f"""SELECT
  OMS_RETURN_ORDER_ID AS OMS_RETURN_ORDER_ID,
  OMS_RETURN_ORDER_LN_ID AS OMS_RETURN_ORDER_LN_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  PRODUCT_ID AS PRODUCT_ID,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  RETURN_ORDER_QTY AS RETURN_ORDER_QTY,
  ORIG_LINE_TOTAL AS ORIG_LINE_TOTAL,
  RETURN_LINE_TOTAL AS RETURN_LINE_TOTAL,
  LAST_UPDATED_TSTMP AS LAST_UPDATED_TSTMP,
  OMS_RETURN_ORDER_LN_NBR AS OMS_RETURN_ORDER_LN_NBR,
  OMS_RETURN_ORDER_NBR AS OMS_RETURN_ORDER_NBR,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  ORDER_NBR AS ORDER_NBR,
  OMS_ORDER_CREATED_TSTMP AS OMS_ORDER_CREATED_TSTMP,
  OMS_ORDER_RETURNED_TSTMP AS OMS_ORDER_RETURNED_TSTMP,
  RETURN_REASON_ID AS RETURN_REASON_ID,
  RETURN_DESC AS RETURN_DESC,
  RETURN_SHORT_DESC AS RETURN_SHORT_DESC,
  GOODS_EXPECTED_FLG AS GOODS_EXPECTED_FLG,
  PRODUCT_RETURNED_TSTMP AS PRODUCT_RETURNED_TSTMP,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_RETURN_ORDER_LN"""

df_28 = spark.sql(query_28)

df_28.createOrReplaceTempView("Shortcut_to_OMS_RETURN_ORDER_LN1_28")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_RETURN_ORDER_LN_29


query_29 = f"""SELECT
  OMS_RETURN_ORDER_ID AS OMS_RETURN_ORDER_ID,
  OMS_RETURN_ORDER_LN_ID AS OMS_RETURN_ORDER_LN_ID,
  OMS_COMPANY_ID AS OMS_COMPANY_ID,
  PRODUCT_ID AS PRODUCT_ID,
  OMS_ORDER_LN_ID AS OMS_ORDER_LN_ID,
  ORIG_ORDER_QTY AS ORIG_ORDER_QTY,
  RETURN_ORDER_QTY AS RETURN_ORDER_QTY,
  ORIG_LINE_TOTAL AS ORIG_LINE_TOTAL,
  RETURN_LINE_TOTAL AS RETURN_LINE_TOTAL,
  LAST_UPDATED_TSTMP AS LAST_UPDATED_TSTMP,
  OMS_RETURN_ORDER_LN_NBR AS OMS_RETURN_ORDER_LN_NBR,
  OMS_RETURN_ORDER_NBR AS OMS_RETURN_ORDER_NBR,
  OMS_ORDER_ID AS OMS_ORDER_ID,
  ORDER_NBR AS ORDER_NBR,
  OMS_ORDER_CREATED_TSTMP AS OMS_ORDER_CREATED_TSTMP,
  OMS_ORDER_RETURNED_TSTMP AS OMS_ORDER_RETURNED_TSTMP,
  RETURN_REASON_ID AS RETURN_REASON_ID,
  RETURN_DESC AS RETURN_DESC,
  RETURN_SHORT_DESC AS RETURN_SHORT_DESC,
  GOODS_EXPECTED_FLG AS GOODS_EXPECTED_FLG,
  PRODUCT_RETURNED_TSTMP AS PRODUCT_RETURNED_TSTMP,
  EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_RETURN_ORDER_LN1_28"""

df_29 = spark.sql(query_29)

df_29.createOrReplaceTempView("SQ_Shortcut_to_OMS_RETURN_ORDER_LN_29")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_RETURN_ORDER_LN_30


query_30 = f"""SELECT
  DETAIL.o_OMS_RETURN_ORDERS_ID AS src_OMS_RETURN_ORDERS_ID,
  DETAIL.o_OMS_RETURN_ORDERS_LINE_ITEM_ID AS src_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  DETAIL.po_OMS_TC_COMPANY_ID AS src_OMS_TC_COMPANY_ID,
  DETAIL.PRODUCT_ID AS src_PRODUCT_ID,
  DETAIL.pol_OMS_ORIGINAL_PO_LINE_ITEM_ID AS srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  DETAIL.pol_RETURN_ORDER_QTY AS src_RETURN_ORDER_QTY,
  DETAIL.pol2_ORIG_ORDER_QTY AS src_ORIG_ORDER_QTY,
  DETAIL.pol_RETURN_LINE_TOTAL_AMT AS src_RETURN_LINE_TOTAL_AMT,
  DETAIL.pol2_ORIG_LINE_TOTAL_AMT AS src_ORIG_LINE_TOTAL_AMT,
  DETAIL.po_OMS_LAST_UPDATED_TSTMP AS src_OMS_LAST_UPDATED_TSTMP,
  DETAIL.pol_OMS_TC_PO_LINE_ID AS src_OMS_TC_PO_LINE_ID,
  DETAIL.po_OMS_TC_PURCHASE_ORDERS_ID AS src_OMS_TC_PURCHASE_ORDERS_ID,
  DETAIL.po_OMS_PARENT_PURCHASE_ORDERS_ID AS src_OMS_PARENT_PURCHASE_ORDERS_ID,
  DETAIL.o_ORDER_NBR AS src_ORDER_NBR,
  DETAIL.po2_OMS_ORDER_CREATED_TSTMP AS src_OMS_ORDER_CREATED_TSTMP,
  DETAIL.po_OMS_CREATED_TSTMP AS src_OMS_CREATED_TSTMP,
  DETAIL.sc_OMS_CODE_ID AS src_OMS_CODE_ID,
  DETAIL.sc_OMS_CODE_DESC AS src_OMS_CODE_DESC,
  DETAIL.sc_OMS_CODE_SHORT_DESC AS src_OMS_CODE_SHORT_DESC,
  DETAIL.o_RECEIVABLE_FLAG AS src_RECEIVABLE_FLAG,
  DETAIL.ad_PRODUCT_RETURNED_TSTMP AS src_PRODUCT_RETURNED_TSTMP,
  DETAIL.o_EXCHANGE_RATE_PCNT AS src_EXCHANGE_RATE_PCNT,
  MASTER.OMS_RETURN_ORDER_ID AS lkp_OMS_RETURN_ORDER_ID,
  MASTER.OMS_RETURN_ORDER_LN_ID AS lkp_OMS_RETURN_ORDER_LN_ID,
  MASTER.OMS_COMPANY_ID AS lkp_OMS_COMPANY_ID,
  MASTER.PRODUCT_ID AS lkp_PRODUCT_ID,
  MASTER.OMS_ORDER_LN_ID AS lkp_OMS_ORDER_LN_ID,
  MASTER.ORIG_ORDER_QTY AS lkp_ORIG_ORDER_QTY,
  MASTER.RETURN_ORDER_QTY AS lkp_RETURN_ORDER_QTY,
  MASTER.ORIG_LINE_TOTAL AS lkp_ORIG_LINE_TOTAL,
  MASTER.RETURN_LINE_TOTAL AS lkp_RETURN_LINE_TOTAL,
  MASTER.LAST_UPDATED_TSTMP AS lkp_LAST_UPDATED_TSTMP,
  MASTER.OMS_RETURN_ORDER_LN_NBR AS lkp_OMS_RETURN_ORDER_LN_NBR,
  MASTER.OMS_RETURN_ORDER_NBR AS lkp_OMS_RETURN_ORDER_NBR,
  MASTER.OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  MASTER.ORDER_NBR AS lkp_ORDER_NBR,
  MASTER.OMS_ORDER_CREATED_TSTMP AS lkp_OMS_ORDER_CREATED_TSTMP,
  MASTER.OMS_ORDER_RETURNED_TSTMP AS lkp_OMS_ORDER_RETURNED_TSTMP,
  MASTER.RETURN_REASON_ID AS lkp_RETURN_REASON_ID,
  MASTER.RETURN_DESC AS lkp_RETURN_DESC,
  MASTER.RETURN_SHORT_DESC AS lkp_RETURN_SHORT_DESC,
  MASTER.GOODS_EXPECTED_FLG AS lkp_GOODS_EXPECTED_FLG,
  MASTER.PRODUCT_RETURNED_TSTMP AS lkp_PRODUCT_RETURNED_TSTMP,
  MASTER.EXCHANGE_RATE_PCNT AS lkp_EXCHANGE_RATE_PCNT,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_RETURN_ORDER_LN_29 MASTER
  RIGHT JOIN EXP_PRE_27 DETAIL ON MASTER.OMS_RETURN_ORDER_ID = DETAIL.o_OMS_RETURN_ORDERS_ID
  AND MASTER.OMS_RETURN_ORDER_LN_ID = DETAIL.o_OMS_RETURN_ORDERS_LINE_ITEM_ID"""

df_30 = spark.sql(query_30)

df_30.createOrReplaceTempView("JNR_OMS_RETURN_ORDER_LN_30")

# COMMAND ----------
# DBTITLE 1, FIL_UNCHANGED_RECORDS_31


query_31 = f"""SELECT
  src_OMS_RETURN_ORDERS_ID AS src_OMS_RETURN_ORDERS_ID,
  src_OMS_RETURN_ORDERS_LINE_ITEM_ID AS src_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  src_OMS_TC_COMPANY_ID AS src_OMS_TC_COMPANY_ID,
  src_PRODUCT_ID AS src_PRODUCT_ID,
  srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID AS srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  src_RETURN_ORDER_QTY AS src_RETURN_ORDER_QTY,
  src_ORIG_ORDER_QTY AS src_ORIG_ORDER_QTY,
  src_RETURN_LINE_TOTAL_AMT AS src_RETURN_LINE_TOTAL_AMT,
  src_ORIG_LINE_TOTAL_AMT AS src_ORIG_LINE_TOTAL_AMT,
  src_OMS_LAST_UPDATED_TSTMP AS src_OMS_LAST_UPDATED_TSTMP,
  src_OMS_TC_PO_LINE_ID AS src_OMS_TC_PO_LINE_ID,
  src_OMS_TC_PURCHASE_ORDERS_ID AS src_OMS_TC_PURCHASE_ORDERS_ID,
  src_OMS_PARENT_PURCHASE_ORDERS_ID AS src_OMS_PARENT_PURCHASE_ORDERS_ID,
  src_ORDER_NBR AS src_ORDER_NBR,
  src_OMS_ORDER_CREATED_TSTMP AS src_OMS_ORDER_CREATED_TSTMP,
  src_OMS_CREATED_TSTMP AS src_OMS_CREATED_TSTMP,
  src_OMS_CODE_ID AS src_OMS_CODE_ID,
  src_OMS_CODE_DESC AS src_OMS_CODE_DESC,
  src_OMS_CODE_SHORT_DESC AS src_OMS_CODE_SHORT_DESC,
  src_RECEIVABLE_FLAG AS src_RECEIVABLE_FLAG,
  src_PRODUCT_RETURNED_TSTMP AS src_PRODUCT_RETURNED_TSTMP,
  src_EXCHANGE_RATE_PCNT AS src_EXCHANGE_RATE_PCNT,
  lkp_OMS_RETURN_ORDER_ID AS lkp_OMS_RETURN_ORDER_ID,
  lkp_OMS_RETURN_ORDER_LN_ID AS lkp_OMS_RETURN_ORDER_LN_ID,
  lkp_OMS_COMPANY_ID AS lkp_OMS_COMPANY_ID,
  lkp_PRODUCT_ID AS lkp_PRODUCT_ID,
  lkp_OMS_ORDER_LN_ID AS lkp_OMS_ORDER_LN_ID,
  lkp_ORIG_ORDER_QTY AS lkp_ORIG_ORDER_QTY,
  lkp_RETURN_ORDER_QTY AS lkp_RETURN_ORDER_QTY,
  lkp_ORIG_LINE_TOTAL AS lkp_ORIG_LINE_TOTAL,
  lkp_RETURN_LINE_TOTAL AS lkp_RETURN_LINE_TOTAL,
  lkp_LAST_UPDATED_TSTMP AS lkp_LAST_UPDATED_TSTMP,
  lkp_OMS_RETURN_ORDER_LN_NBR AS lkp_OMS_RETURN_ORDER_LN_NBR,
  lkp_OMS_RETURN_ORDER_NBR AS lkp_OMS_RETURN_ORDER_NBR,
  lkp_OMS_ORDER_ID AS lkp_OMS_ORDER_ID,
  lkp_ORDER_NBR AS lkp_ORDER_NBR,
  lkp_OMS_ORDER_CREATED_TSTMP AS lkp_OMS_ORDER_CREATED_TSTMP,
  lkp_OMS_ORDER_RETURNED_TSTMP AS lkp_OMS_ORDER_RETURNED_TSTMP,
  lkp_RETURN_REASON_ID AS lkp_RETURN_REASON_ID,
  lkp_RETURN_DESC AS lkp_RETURN_DESC,
  lkp_RETURN_SHORT_DESC AS lkp_RETURN_SHORT_DESC,
  lkp_GOODS_EXPECTED_FLG AS lkp_GOODS_EXPECTED_FLG,
  lkp_PRODUCT_RETURNED_TSTMP AS lkp_PRODUCT_RETURNED_TSTMP,
  lkp_EXCHANGE_RATE_PCNT AS lkp_EXCHANGE_RATE_PCNT,
  lkp_LOAD_TSTMP AS lkp_LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_RETURN_ORDER_LN_30
WHERE
  ISNULL(lkp_OMS_RETURN_ORDER_LN_ID)
  OR (
    NOT ISNULL(lkp_OMS_RETURN_ORDER_LN_ID)
    AND (
      src_OMS_TC_COMPANY_ID <> lkp_OMS_COMPANY_ID
      OR src_PRODUCT_ID <> lkp_PRODUCT_ID
      OR srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID <> lkp_OMS_ORDER_LN_ID
      OR src_RETURN_ORDER_QTY <> lkp_RETURN_ORDER_QTY
      OR src_ORIG_ORDER_QTY <> lkp_ORIG_ORDER_QTY
      OR src_RETURN_LINE_TOTAL_AMT <> lkp_RETURN_LINE_TOTAL
      OR src_ORIG_LINE_TOTAL_AMT <> lkp_ORIG_LINE_TOTAL
      OR src_OMS_LAST_UPDATED_TSTMP <> lkp_LAST_UPDATED_TSTMP
      OR src_OMS_TC_PO_LINE_ID <> lkp_OMS_RETURN_ORDER_LN_NBR
      OR src_OMS_TC_PURCHASE_ORDERS_ID <> lkp_OMS_RETURN_ORDER_NBR
      OR src_OMS_PARENT_PURCHASE_ORDERS_ID <> lkp_OMS_ORDER_ID
      OR src_ORDER_NBR <> lkp_ORDER_NBR
      OR src_OMS_ORDER_CREATED_TSTMP <> lkp_OMS_ORDER_CREATED_TSTMP
      OR src_OMS_CREATED_TSTMP <> lkp_OMS_ORDER_RETURNED_TSTMP
      OR src_OMS_CODE_ID <> lkp_RETURN_REASON_ID
      OR src_OMS_CODE_DESC <> lkp_RETURN_DESC
      OR src_OMS_CODE_SHORT_DESC <> lkp_RETURN_SHORT_DESC
      OR src_RECEIVABLE_FLAG <> lkp_GOODS_EXPECTED_FLG
      OR src_PRODUCT_RETURNED_TSTMP <> lkp_PRODUCT_RETURNED_TSTMP
      OR src_EXCHANGE_RATE_PCNT <> lkp_EXCHANGE_RATE_PCNT
    )
  )"""

df_31 = spark.sql(query_31)

df_31.createOrReplaceTempView("FIL_UNCHANGED_RECORDS_31")

# COMMAND ----------
# DBTITLE 1, EXP_UPDATE_FLAG_32


query_32 = f"""SELECT
  src_OMS_RETURN_ORDERS_ID AS src_OMS_RETURN_ORDERS_ID,
  src_OMS_RETURN_ORDERS_LINE_ITEM_ID AS src_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  src_OMS_TC_COMPANY_ID AS src_OMS_TC_COMPANY_ID,
  src_PRODUCT_ID AS src_PRODUCT_ID,
  srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID AS srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  src_RETURN_ORDER_QTY AS src_RETURN_ORDER_QTY,
  src_ORIG_ORDER_QTY AS src_ORIG_ORDER_QTY,
  src_RETURN_LINE_TOTAL_AMT AS src_RETURN_LINE_TOTAL_AMT,
  src_ORIG_LINE_TOTAL_AMT AS src_ORIG_LINE_TOTAL_AMT,
  src_OMS_LAST_UPDATED_TSTMP AS src_OMS_LAST_UPDATED_TSTMP,
  src_OMS_TC_PO_LINE_ID AS src_OMS_TC_PO_LINE_ID,
  src_OMS_TC_PURCHASE_ORDERS_ID AS src_OMS_TC_PURCHASE_ORDERS_ID,
  src_OMS_PARENT_PURCHASE_ORDERS_ID AS src_OMS_PARENT_PURCHASE_ORDERS_ID,
  src_ORDER_NBR AS src_ORDER_NBR,
  src_OMS_ORDER_CREATED_TSTMP AS src_OMS_ORDER_CREATED_TSTMP,
  src_OMS_CREATED_TSTMP AS src_OMS_CREATED_TSTMP,
  src_OMS_CODE_ID AS src_OMS_CODE_ID,
  src_OMS_CODE_DESC AS src_OMS_CODE_DESC,
  src_OMS_CODE_SHORT_DESC AS src_OMS_CODE_SHORT_DESC,
  src_RECEIVABLE_FLAG AS src_RECEIVABLE_FLAG,
  src_PRODUCT_RETURNED_TSTMP AS src_PRODUCT_RETURNED_TSTMP,
  src_EXCHANGE_RATE_PCNT AS src_EXCHANGE_RATE_PCNT,
  now() AS o_UPDATE_TSTMP,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS o_LOAD_TSTMP,
  IFF(ISNULL(lkp_OMS_RETURN_ORDER_LN_ID), 1, 2) AS o_UPDATE_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_UNCHANGED_RECORDS_31"""

df_32 = spark.sql(query_32)

df_32.createOrReplaceTempView("EXP_UPDATE_FLAG_32")

# COMMAND ----------
# DBTITLE 1, UPD_INSERT_UPDATE_33


query_33 = f"""SELECT
  src_OMS_RETURN_ORDERS_ID AS src_OMS_RETURN_ORDERS_ID,
  src_OMS_RETURN_ORDERS_LINE_ITEM_ID AS src_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  src_OMS_TC_COMPANY_ID AS src_OMS_TC_COMPANY_ID,
  src_PRODUCT_ID AS src_PRODUCT_ID,
  srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID AS srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  src_RETURN_ORDER_QTY AS src_RETURN_ORDER_QTY,
  src_ORIG_ORDER_QTY AS src_ORIG_ORDER_QTY,
  src_RETURN_LINE_TOTAL_AMT AS src_RETURN_LINE_TOTAL_AMT,
  src_ORIG_LINE_TOTAL_AMT AS src_ORIG_LINE_TOTAL_AMT,
  src_OMS_LAST_UPDATED_TSTMP AS src_OMS_LAST_UPDATED_TSTMP,
  src_OMS_TC_PO_LINE_ID AS src_OMS_TC_PO_LINE_ID,
  src_OMS_TC_PURCHASE_ORDERS_ID AS src_OMS_TC_PURCHASE_ORDERS_ID,
  src_OMS_PARENT_PURCHASE_ORDERS_ID AS src_OMS_PARENT_PURCHASE_ORDERS_ID,
  src_ORDER_NBR AS src_ORDER_NBR,
  src_OMS_ORDER_CREATED_TSTMP AS src_OMS_ORDER_CREATED_TSTMP,
  src_OMS_CREATED_TSTMP AS src_OMS_CREATED_TSTMP,
  src_OMS_CODE_ID AS src_OMS_CODE_ID,
  src_OMS_CODE_DESC AS src_OMS_CODE_DESC,
  src_OMS_CODE_SHORT_DESC AS src_OMS_CODE_SHORT_DESC,
  src_RECEIVABLE_FLAG AS src_RECEIVABLE_FLAG,
  src_PRODUCT_RETURNED_TSTMP AS src_PRODUCT_RETURNED_TSTMP,
  src_EXCHANGE_RATE_PCNT AS src_EXCHANGE_RATE_PCNT,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  o_UPDATE_FLAG AS o_UPDATE_FLAG,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(
    o_UPDATE_FLAG,
    1,
    'DD_INSERT',
    2,
    'DD_UPDATE',
    'DD_REJECT'
  ) AS UPDATE_STRATEGY_FLAG
FROM
  EXP_UPDATE_FLAG_32"""

df_33 = spark.sql(query_33)

df_33.createOrReplaceTempView("UPD_INSERT_UPDATE_33")

# COMMAND ----------
# DBTITLE 1, OMS_RETURN_ORDER_LN


spark.sql("""MERGE INTO OMS_RETURN_ORDER_LN AS TARGET
USING
  UPD_INSERT_UPDATE_33 AS SOURCE ON TARGET.OMS_RETURN_ORDER_LN_ID = SOURCE.src_OMS_RETURN_ORDERS_LINE_ITEM_ID
  AND TARGET.OMS_RETURN_ORDER_ID = SOURCE.src_OMS_RETURN_ORDERS_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_RETURN_ORDER_ID = SOURCE.src_OMS_RETURN_ORDERS_ID,
  TARGET.OMS_RETURN_ORDER_LN_ID = SOURCE.src_OMS_RETURN_ORDERS_LINE_ITEM_ID,
  TARGET.OMS_COMPANY_ID = SOURCE.src_OMS_TC_COMPANY_ID,
  TARGET.PRODUCT_ID = SOURCE.src_PRODUCT_ID,
  TARGET.OMS_ORDER_LN_ID = SOURCE.srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID,
  TARGET.ORIG_ORDER_QTY = SOURCE.src_ORIG_ORDER_QTY,
  TARGET.RETURN_ORDER_QTY = SOURCE.src_RETURN_ORDER_QTY,
  TARGET.ORIG_LINE_TOTAL = SOURCE.src_ORIG_LINE_TOTAL_AMT,
  TARGET.RETURN_LINE_TOTAL = SOURCE.src_RETURN_LINE_TOTAL_AMT,
  TARGET.LAST_UPDATED_TSTMP = SOURCE.src_OMS_LAST_UPDATED_TSTMP,
  TARGET.OMS_RETURN_ORDER_LN_NBR = SOURCE.src_OMS_TC_PO_LINE_ID,
  TARGET.OMS_RETURN_ORDER_NBR = SOURCE.src_OMS_TC_PURCHASE_ORDERS_ID,
  TARGET.OMS_ORDER_ID = SOURCE.src_OMS_PARENT_PURCHASE_ORDERS_ID,
  TARGET.ORDER_NBR = SOURCE.src_ORDER_NBR,
  TARGET.OMS_ORDER_CREATED_TSTMP = SOURCE.src_OMS_ORDER_CREATED_TSTMP,
  TARGET.OMS_ORDER_RETURNED_TSTMP = SOURCE.src_OMS_CREATED_TSTMP,
  TARGET.RETURN_REASON_ID = SOURCE.src_OMS_CODE_ID,
  TARGET.RETURN_DESC = SOURCE.src_OMS_CODE_DESC,
  TARGET.RETURN_SHORT_DESC = SOURCE.src_OMS_CODE_SHORT_DESC,
  TARGET.GOODS_EXPECTED_FLG = SOURCE.src_RECEIVABLE_FLAG,
  TARGET.PRODUCT_RETURNED_TSTMP = SOURCE.src_PRODUCT_RETURNED_TSTMP,
  TARGET.EXCHANGE_RATE_PCNT = SOURCE.src_EXCHANGE_RATE_PCNT,
  TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_COMPANY_ID = SOURCE.src_OMS_TC_COMPANY_ID
  AND TARGET.PRODUCT_ID = SOURCE.src_PRODUCT_ID
  AND TARGET.OMS_ORDER_LN_ID = SOURCE.srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID
  AND TARGET.ORIG_ORDER_QTY = SOURCE.src_ORIG_ORDER_QTY
  AND TARGET.RETURN_ORDER_QTY = SOURCE.src_RETURN_ORDER_QTY
  AND TARGET.ORIG_LINE_TOTAL = SOURCE.src_ORIG_LINE_TOTAL_AMT
  AND TARGET.RETURN_LINE_TOTAL = SOURCE.src_RETURN_LINE_TOTAL_AMT
  AND TARGET.LAST_UPDATED_TSTMP = SOURCE.src_OMS_LAST_UPDATED_TSTMP
  AND TARGET.OMS_RETURN_ORDER_LN_NBR = SOURCE.src_OMS_TC_PO_LINE_ID
  AND TARGET.OMS_RETURN_ORDER_NBR = SOURCE.src_OMS_TC_PURCHASE_ORDERS_ID
  AND TARGET.OMS_ORDER_ID = SOURCE.src_OMS_PARENT_PURCHASE_ORDERS_ID
  AND TARGET.ORDER_NBR = SOURCE.src_ORDER_NBR
  AND TARGET.OMS_ORDER_CREATED_TSTMP = SOURCE.src_OMS_ORDER_CREATED_TSTMP
  AND TARGET.OMS_ORDER_RETURNED_TSTMP = SOURCE.src_OMS_CREATED_TSTMP
  AND TARGET.RETURN_REASON_ID = SOURCE.src_OMS_CODE_ID
  AND TARGET.RETURN_DESC = SOURCE.src_OMS_CODE_DESC
  AND TARGET.RETURN_SHORT_DESC = SOURCE.src_OMS_CODE_SHORT_DESC
  AND TARGET.GOODS_EXPECTED_FLG = SOURCE.src_RECEIVABLE_FLAG
  AND TARGET.PRODUCT_RETURNED_TSTMP = SOURCE.src_PRODUCT_RETURNED_TSTMP
  AND TARGET.EXCHANGE_RATE_PCNT = SOURCE.src_EXCHANGE_RATE_PCNT
  AND TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_RETURN_ORDER_ID,
    TARGET.OMS_RETURN_ORDER_LN_ID,
    TARGET.OMS_COMPANY_ID,
    TARGET.PRODUCT_ID,
    TARGET.OMS_ORDER_LN_ID,
    TARGET.ORIG_ORDER_QTY,
    TARGET.RETURN_ORDER_QTY,
    TARGET.ORIG_LINE_TOTAL,
    TARGET.RETURN_LINE_TOTAL,
    TARGET.LAST_UPDATED_TSTMP,
    TARGET.OMS_RETURN_ORDER_LN_NBR,
    TARGET.OMS_RETURN_ORDER_NBR,
    TARGET.OMS_ORDER_ID,
    TARGET.ORDER_NBR,
    TARGET.OMS_ORDER_CREATED_TSTMP,
    TARGET.OMS_ORDER_RETURNED_TSTMP,
    TARGET.RETURN_REASON_ID,
    TARGET.RETURN_DESC,
    TARGET.RETURN_SHORT_DESC,
    TARGET.GOODS_EXPECTED_FLG,
    TARGET.PRODUCT_RETURNED_TSTMP,
    TARGET.EXCHANGE_RATE_PCNT,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.src_OMS_RETURN_ORDERS_ID,
    SOURCE.src_OMS_RETURN_ORDERS_LINE_ITEM_ID,
    SOURCE.src_OMS_TC_COMPANY_ID,
    SOURCE.src_PRODUCT_ID,
    SOURCE.srcl_OMS_ORIGINAL_PO_LINE_ITEM_ID,
    SOURCE.src_ORIG_ORDER_QTY,
    SOURCE.src_RETURN_ORDER_QTY,
    SOURCE.src_ORIG_LINE_TOTAL_AMT,
    SOURCE.src_RETURN_LINE_TOTAL_AMT,
    SOURCE.src_OMS_LAST_UPDATED_TSTMP,
    SOURCE.src_OMS_TC_PO_LINE_ID,
    SOURCE.src_OMS_TC_PURCHASE_ORDERS_ID,
    SOURCE.src_OMS_PARENT_PURCHASE_ORDERS_ID,
    SOURCE.src_ORDER_NBR,
    SOURCE.src_OMS_ORDER_CREATED_TSTMP,
    SOURCE.src_OMS_CREATED_TSTMP,
    SOURCE.src_OMS_CODE_ID,
    SOURCE.src_OMS_CODE_DESC,
    SOURCE.src_OMS_CODE_SHORT_DESC,
    SOURCE.src_RECEIVABLE_FLAG,
    SOURCE.src_PRODUCT_RETURNED_TSTMP,
    SOURCE.src_EXCHANGE_RATE_PCNT,
    SOURCE.o_UPDATE_TSTMP,
    SOURCE.o_LOAD_TSTMP
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_OMS_Return_Order_LN")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_OMS_Return_Order_LN", mainWorkflowId, parentName)
