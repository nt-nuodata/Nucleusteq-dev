# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Shipment")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_Shipment", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_SHIPMENT_DDS1_0


query_0 = f"""SELECT
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_SHIPMENT_ID AS OMS_TC_SHIPMENT_ID,
  OMS_SHIPMENT_TYPE_CD AS OMS_SHIPMENT_TYPE_CD,
  OMS_SHIPMENT_STATUS_ID AS OMS_SHIPMENT_STATUS_ID,
  SHIPMENT_CLOSED_IND AS SHIPMENT_CLOSED_IND,
  OMS_STATUS_CHANGE_TSTMP AS OMS_STATUS_CHANGE_TSTMP,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  AUTO_DELIVERED_FLAG AS AUTO_DELIVERED_FLAG,
  SHIPMENT_RECONCILED_FLAG AS SHIPMENT_RECONCILED_FLAG,
  OMS_SHIPMENT_LEG_TYPE_ID AS OMS_SHIPMENT_LEG_TYPE_ID,
  DELIVERY_REQ AS DELIVERY_REQ,
  OMS_AVAILABLE_TSTMP AS OMS_AVAILABLE_TSTMP,
  OMS_REGION_ID AS OMS_REGION_ID,
  OMS_INBOUND_REGION_ID AS OMS_INBOUND_REGION_ID,
  OMS_OUTBOUND_REGION_ID AS OMS_OUTBOUND_REGION_ID,
  OMS_O_FACILITY_NBR AS OMS_O_FACILITY_NBR,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  O_STOP_LOCATION_NAME AS O_STOP_LOCATION_NAME,
  D_STOP_LOCATION_NAME AS D_STOP_LOCATION_NAME,
  O_ADDR AS O_ADDR,
  O_CITY AS O_CITY,
  O_STATE_PROV AS O_STATE_PROV,
  O_POSTAL_CD AS O_POSTAL_CD,
  O_COUNTRY_CD AS O_COUNTRY_CD,
  D_ADDR AS D_ADDR,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CD AS D_POSTAL_CD,
  D_COUNTRY_CD AS D_COUNTRY_CD,
  PERISHABLE_FLAG AS PERISHABLE_FLAG,
  HAS_NOTES_FLAG AS HAS_NOTES_FLAG,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  HAS_EM_NOTIFY_FLAG AS HAS_EM_NOTIFY_FLAG,
  SHIPMENT_WIN_ADJ_FLAG AS SHIPMENT_WIN_ADJ_FLAG,
  HAS_IMPORT_ERROR_FLAG AS HAS_IMPORT_ERROR_FLAG,
  HAS_SOFT_CHECK_ERROR_FLAG AS HAS_SOFT_CHECK_ERROR_FLAG,
  HAS_TRACKING_MSG_FLAG AS HAS_TRACKING_MSG_FLAG,
  TRACKING_MSG_PROBLEM_FLAG AS TRACKING_MSG_PROBLEM_FLAG,
  USE_BROKER_AS_CARRIER_FLAG AS USE_BROKER_AS_CARRIER_FLAG,
  UPDATE_SENT_FLAG AS UPDATE_SENT_FLAG,
  MANUAL_ASSIGN_FLAG AS MANUAL_ASSIGN_FLAG,
  OMS_PRIORITY_TYPE_ID AS OMS_PRIORITY_TYPE_ID,
  RETAIN_CONSOLIDATOR_TIMES_FLAG AS RETAIN_CONSOLIDATOR_TIMES_FLAG,
  OMS_EVENT_IND_TYPE_ID AS OMS_EVENT_IND_TYPE_ID,
  OMS_DELAY_TYPE_ID AS OMS_DELAY_TYPE_ID,
  OMS_ASSIGNED_CARRIER_ID AS OMS_ASSIGNED_CARRIER_ID,
  OMS_ASSIGNED_CARRIER_CD AS OMS_ASSIGNED_CARRIER_CD,
  OMS_BILLING_METHOD_ID AS OMS_BILLING_METHOD_ID,
  OMS_TRANS_RESP_CD AS OMS_TRANS_RESP_CD,
  OMS_PICK_START_TSTMP AS OMS_PICK_START_TSTMP,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  NUM_CHARGE_LAYOVERS AS NUM_CHARGE_LAYOVERS,
  NUM_STOPS AS NUM_STOPS,
  NUM_DOCKS AS NUM_DOCKS,
  TOTAL_TIME AS TOTAL_TIME,
  ORDER_QTY AS ORDER_QTY,
  REPORTED_COST AS REPORTED_COST,
  WAYPOINT_TOTAL_COST AS WAYPOINT_TOTAL_COST,
  WAYPOINT_HANDLING_COST AS WAYPOINT_HANDLING_COST,
  TOTAL_COST AS TOTAL_COST,
  CURRENCY_CD AS CURRENCY_CD,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_SOURCE_TYPE_ID AS OMS_LAST_UPDATED_SOURCE_TYPE_ID,
  OMS_LAST_UPDATED_SOURCE AS OMS_LAST_UPDATED_SOURCE,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_SHIPMENT_DDS"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_OMS_SHIPMENT_DDS1_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_SHIPMENT_DDS_1


query_1 = f"""SELECT
  OMS_SHIPMENT_ID AS OMS_SHIPMENT_ID,
  OMS_TC_COMPANY_ID AS OMS_TC_COMPANY_ID,
  OMS_TC_SHIPMENT_ID AS OMS_TC_SHIPMENT_ID,
  OMS_SHIPMENT_TYPE_CD AS OMS_SHIPMENT_TYPE_CD,
  OMS_SHIPMENT_STATUS_ID AS OMS_SHIPMENT_STATUS_ID,
  SHIPMENT_CLOSED_IND AS SHIPMENT_CLOSED_IND,
  OMS_STATUS_CHANGE_TSTMP AS OMS_STATUS_CHANGE_TSTMP,
  OMS_CREATION_TYPE_ID AS OMS_CREATION_TYPE_ID,
  CANCELLED_FLAG AS CANCELLED_FLAG,
  AUTO_DELIVERED_FLAG AS AUTO_DELIVERED_FLAG,
  SHIPMENT_RECONCILED_FLAG AS SHIPMENT_RECONCILED_FLAG,
  OMS_SHIPMENT_LEG_TYPE_ID AS OMS_SHIPMENT_LEG_TYPE_ID,
  DELIVERY_REQ AS DELIVERY_REQ,
  OMS_AVAILABLE_TSTMP AS OMS_AVAILABLE_TSTMP,
  OMS_REGION_ID AS OMS_REGION_ID,
  OMS_INBOUND_REGION_ID AS OMS_INBOUND_REGION_ID,
  OMS_OUTBOUND_REGION_ID AS OMS_OUTBOUND_REGION_ID,
  OMS_O_FACILITY_NBR AS OMS_O_FACILITY_NBR,
  OMS_O_FACILITY_ID AS OMS_O_FACILITY_ID,
  O_STOP_LOCATION_NAME AS O_STOP_LOCATION_NAME,
  D_STOP_LOCATION_NAME AS D_STOP_LOCATION_NAME,
  O_ADDR AS O_ADDR,
  O_CITY AS O_CITY,
  O_STATE_PROV AS O_STATE_PROV,
  O_POSTAL_CD AS O_POSTAL_CD,
  O_COUNTRY_CD AS O_COUNTRY_CD,
  D_ADDR AS D_ADDR,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CD AS D_POSTAL_CD,
  D_COUNTRY_CD AS D_COUNTRY_CD,
  PERISHABLE_FLAG AS PERISHABLE_FLAG,
  HAS_NOTES_FLAG AS HAS_NOTES_FLAG,
  HAS_ALERTS_FLAG AS HAS_ALERTS_FLAG,
  HAS_EM_NOTIFY_FLAG AS HAS_EM_NOTIFY_FLAG,
  SHIPMENT_WIN_ADJ_FLAG AS SHIPMENT_WIN_ADJ_FLAG,
  HAS_IMPORT_ERROR_FLAG AS HAS_IMPORT_ERROR_FLAG,
  HAS_SOFT_CHECK_ERROR_FLAG AS HAS_SOFT_CHECK_ERROR_FLAG,
  HAS_TRACKING_MSG_FLAG AS HAS_TRACKING_MSG_FLAG,
  TRACKING_MSG_PROBLEM_FLAG AS TRACKING_MSG_PROBLEM_FLAG,
  USE_BROKER_AS_CARRIER_FLAG AS USE_BROKER_AS_CARRIER_FLAG,
  UPDATE_SENT_FLAG AS UPDATE_SENT_FLAG,
  MANUAL_ASSIGN_FLAG AS MANUAL_ASSIGN_FLAG,
  OMS_PRIORITY_TYPE_ID AS OMS_PRIORITY_TYPE_ID,
  RETAIN_CONSOLIDATOR_TIMES_FLAG AS RETAIN_CONSOLIDATOR_TIMES_FLAG,
  OMS_EVENT_IND_TYPE_ID AS OMS_EVENT_IND_TYPE_ID,
  OMS_DELAY_TYPE_ID AS OMS_DELAY_TYPE_ID,
  OMS_ASSIGNED_CARRIER_ID AS OMS_ASSIGNED_CARRIER_ID,
  OMS_ASSIGNED_CARRIER_CD AS OMS_ASSIGNED_CARRIER_CD,
  OMS_BILLING_METHOD_ID AS OMS_BILLING_METHOD_ID,
  OMS_TRANS_RESP_CD AS OMS_TRANS_RESP_CD,
  OMS_PICK_START_TSTMP AS OMS_PICK_START_TSTMP,
  OMS_PICKUP_START_TSTMP AS OMS_PICKUP_START_TSTMP,
  OMS_PICKUP_END_TSTMP AS OMS_PICKUP_END_TSTMP,
  OMS_PICKUP_TZ_ID AS OMS_PICKUP_TZ_ID,
  OMS_DELIVERY_START_TSTMP AS OMS_DELIVERY_START_TSTMP,
  OMS_DELIVERY_END_TSTMP AS OMS_DELIVERY_END_TSTMP,
  OMS_DELIVERY_TZ_ID AS OMS_DELIVERY_TZ_ID,
  NUM_CHARGE_LAYOVERS AS NUM_CHARGE_LAYOVERS,
  NUM_STOPS AS NUM_STOPS,
  NUM_DOCKS AS NUM_DOCKS,
  TOTAL_TIME AS TOTAL_TIME,
  ORDER_QTY AS ORDER_QTY,
  REPORTED_COST AS REPORTED_COST,
  WAYPOINT_TOTAL_COST AS WAYPOINT_TOTAL_COST,
  WAYPOINT_HANDLING_COST AS WAYPOINT_HANDLING_COST,
  TOTAL_COST AS TOTAL_COST,
  CURRENCY_CD AS CURRENCY_CD,
  MV_CURRENCY_CD AS MV_CURRENCY_CD,
  OMS_CREATED_SOURCE_TYPE_ID AS OMS_CREATED_SOURCE_TYPE_ID,
  OMS_CREATED_SOURCE AS OMS_CREATED_SOURCE,
  OMS_CREATED_TSTMP AS OMS_CREATED_TSTMP,
  OMS_LAST_UPDATED_SOURCE_TYPE_ID AS OMS_LAST_UPDATED_SOURCE_TYPE_ID,
  OMS_LAST_UPDATED_SOURCE AS OMS_LAST_UPDATED_SOURCE,
  OMS_LAST_UPDATED_TSTMP AS OMS_LAST_UPDATED_TSTMP,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_SHIPMENT_DDS1_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_OMS_SHIPMENT_DDS_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_OMS_SHIPMENT_PRE_DDS_2


query_2 = f"""SELECT
  SHIPMENT_ID AS SHIPMENT_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  TC_SHIPMENT_ID AS TC_SHIPMENT_ID,
  SHIPMENT_STATUS AS SHIPMENT_STATUS,
  UPDATE_SENT AS UPDATE_SENT,
  CREATION_TYPE AS CREATION_TYPE,
  IS_CANCELLED AS IS_CANCELLED,
  AVAILABLE_DTTM AS AVAILABLE_DTTM,
  O_FACILITY_NUMBER AS O_FACILITY_NUMBER,
  O_FACILITY_ID AS O_FACILITY_ID,
  O_ADDRESS AS O_ADDRESS,
  O_CITY AS O_CITY,
  O_STATE_PROV AS O_STATE_PROV,
  O_POSTAL_CODE AS O_POSTAL_CODE,
  O_COUNTRY_CODE AS O_COUNTRY_CODE,
  D_ADDRESS AS D_ADDRESS,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CODE AS D_POSTAL_CODE,
  D_COUNTRY_CODE AS D_COUNTRY_CODE,
  IS_PERISHABLE AS IS_PERISHABLE,
  BILLING_METHOD AS BILLING_METHOD,
  ASSIGNED_CARRIER_CODE AS ASSIGNED_CARRIER_CODE,
  TRANS_RESP_CODE AS TRANS_RESP_CODE,
  CURRENCY_CODE AS CURRENCY_CODE,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  NUM_STOPS AS NUM_STOPS,
  NUM_DOCKS AS NUM_DOCKS,
  HAS_NOTES AS HAS_NOTES,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_IMPORT_ERROR AS HAS_IMPORT_ERROR,
  HAS_SOFT_CHECK_ERROR AS HAS_SOFT_CHECK_ERROR,
  HAS_TRACKING_MSG AS HAS_TRACKING_MSG,
  TRACKING_MSG_PROBLEM AS TRACKING_MSG_PROBLEM,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  O_STOP_LOCATION_NAME AS O_STOP_LOCATION_NAME,
  D_STOP_LOCATION_NAME AS D_STOP_LOCATION_NAME,
  USE_BROKER_AS_CARRIER AS USE_BROKER_AS_CARRIER,
  STATUS_CHANGE_DTTM AS STATUS_CHANGE_DTTM,
  REPORTED_COST AS REPORTED_COST,
  IS_AUTO_DELIVERED AS IS_AUTO_DELIVERED,
  SHIPMENT_TYPE AS SHIPMENT_TYPE,
  IS_SHIPMENT_RECONCILED AS IS_SHIPMENT_RECONCILED,
  DELIVERY_REQ AS DELIVERY_REQ,
  WAYPOINT_TOTAL_COST AS WAYPOINT_TOTAL_COST,
  WAYPOINT_HANDLING_COST AS WAYPOINT_HANDLING_COST,
  IS_MANUAL_ASSIGN AS IS_MANUAL_ASSIGN,
  PRIORITY_TYPE AS PRIORITY_TYPE,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  SHIPMENT_LEG_TYPE AS SHIPMENT_LEG_TYPE,
  SHIPMENT_CLOSED_INDICATOR AS SHIPMENT_CLOSED_INDICATOR,
  NUM_CHARGE_LAYOVERS AS NUM_CHARGE_LAYOVERS,
  PICK_START_DTTM AS PICK_START_DTTM,
  TOTAL_TIME AS TOTAL_TIME,
  RETAIN_CONSOLIDATOR_TIMES AS RETAIN_CONSOLIDATOR_TIMES,
  EVENT_IND_TYPEID AS EVENT_IND_TYPEID,
  DELAY_TYPE AS DELAY_TYPE,
  ASSIGNED_CARRIER_ID AS ASSIGNED_CARRIER_ID,
  HAS_EM_NOTIFY_FLAG AS HAS_EM_NOTIFY_FLAG,
  REGION_ID AS REGION_ID,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  SHIPMENT_WIN_ADJ_FLAG AS SHIPMENT_WIN_ADJ_FLAG,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TOTAL_COST AS TOTAL_COST,
  ORDER_QTY AS ORDER_QTY,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_SHIPMENT_PRE"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_OMS_SHIPMENT_PRE_DDS_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_OMS_SHIPMENT_PRE_3


query_3 = f"""SELECT
  SHIPMENT_ID AS SHIPMENT_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  TC_SHIPMENT_ID AS TC_SHIPMENT_ID,
  SHIPMENT_STATUS AS SHIPMENT_STATUS,
  UPDATE_SENT AS UPDATE_SENT,
  CREATION_TYPE AS CREATION_TYPE,
  IS_CANCELLED AS IS_CANCELLED,
  AVAILABLE_DTTM AS AVAILABLE_DTTM,
  O_FACILITY_NUMBER AS O_FACILITY_NUMBER,
  O_FACILITY_ID AS O_FACILITY_ID,
  O_ADDRESS AS O_ADDRESS,
  O_CITY AS O_CITY,
  O_STATE_PROV AS O_STATE_PROV,
  O_POSTAL_CODE AS O_POSTAL_CODE,
  O_COUNTRY_CODE AS O_COUNTRY_CODE,
  D_ADDRESS AS D_ADDRESS,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CODE AS D_POSTAL_CODE,
  D_COUNTRY_CODE AS D_COUNTRY_CODE,
  IS_PERISHABLE AS IS_PERISHABLE,
  BILLING_METHOD AS BILLING_METHOD,
  ASSIGNED_CARRIER_CODE AS ASSIGNED_CARRIER_CODE,
  TRANS_RESP_CODE AS TRANS_RESP_CODE,
  CURRENCY_CODE AS CURRENCY_CODE,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  NUM_STOPS AS NUM_STOPS,
  NUM_DOCKS AS NUM_DOCKS,
  HAS_NOTES AS HAS_NOTES,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_IMPORT_ERROR AS HAS_IMPORT_ERROR,
  HAS_SOFT_CHECK_ERROR AS HAS_SOFT_CHECK_ERROR,
  HAS_TRACKING_MSG AS HAS_TRACKING_MSG,
  TRACKING_MSG_PROBLEM AS TRACKING_MSG_PROBLEM,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  O_STOP_LOCATION_NAME AS O_STOP_LOCATION_NAME,
  D_STOP_LOCATION_NAME AS D_STOP_LOCATION_NAME,
  USE_BROKER_AS_CARRIER AS USE_BROKER_AS_CARRIER,
  STATUS_CHANGE_DTTM AS STATUS_CHANGE_DTTM,
  REPORTED_COST AS REPORTED_COST,
  IS_AUTO_DELIVERED AS IS_AUTO_DELIVERED,
  SHIPMENT_TYPE AS SHIPMENT_TYPE,
  IS_SHIPMENT_RECONCILED AS IS_SHIPMENT_RECONCILED,
  DELIVERY_REQ AS DELIVERY_REQ,
  WAYPOINT_TOTAL_COST AS WAYPOINT_TOTAL_COST,
  WAYPOINT_HANDLING_COST AS WAYPOINT_HANDLING_COST,
  IS_MANUAL_ASSIGN AS IS_MANUAL_ASSIGN,
  PRIORITY_TYPE AS PRIORITY_TYPE,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  SHIPMENT_LEG_TYPE AS SHIPMENT_LEG_TYPE,
  SHIPMENT_CLOSED_INDICATOR AS SHIPMENT_CLOSED_INDICATOR,
  NUM_CHARGE_LAYOVERS AS NUM_CHARGE_LAYOVERS,
  PICK_START_DTTM AS PICK_START_DTTM,
  TOTAL_TIME AS TOTAL_TIME,
  RETAIN_CONSOLIDATOR_TIMES AS RETAIN_CONSOLIDATOR_TIMES,
  EVENT_IND_TYPEID AS EVENT_IND_TYPEID,
  DELAY_TYPE AS DELAY_TYPE,
  ASSIGNED_CARRIER_ID AS ASSIGNED_CARRIER_ID,
  HAS_EM_NOTIFY_FLAG AS HAS_EM_NOTIFY_FLAG,
  REGION_ID AS REGION_ID,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  SHIPMENT_WIN_ADJ_FLAG AS SHIPMENT_WIN_ADJ_FLAG,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TOTAL_COST AS TOTAL_COST,
  ORDER_QTY AS ORDER_QTY,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_OMS_SHIPMENT_PRE_DDS_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_OMS_SHIPMENT_PRE_3")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_SHIPMENT_4


query_4 = f"""SELECT
  DETAIL.SHIPMENT_ID AS SHIPMENT_ID,
  DETAIL.TC_COMPANY_ID AS TC_COMPANY_ID,
  DETAIL.TC_SHIPMENT_ID AS TC_SHIPMENT_ID,
  DETAIL.SHIPMENT_STATUS AS SHIPMENT_STATUS,
  DETAIL.UPDATE_SENT AS UPDATE_SENT,
  DETAIL.CREATION_TYPE AS CREATION_TYPE,
  DETAIL.IS_CANCELLED AS IS_CANCELLED,
  DETAIL.AVAILABLE_DTTM AS AVAILABLE_DTTM,
  DETAIL.O_FACILITY_NUMBER AS O_FACILITY_NUMBER,
  DETAIL.O_FACILITY_ID AS O_FACILITY_ID,
  DETAIL.O_ADDRESS AS O_ADDRESS,
  DETAIL.O_CITY AS O_CITY,
  DETAIL.O_STATE_PROV AS O_STATE_PROV,
  DETAIL.O_POSTAL_CODE AS O_POSTAL_CODE,
  DETAIL.O_COUNTRY_CODE AS O_COUNTRY_CODE,
  DETAIL.D_ADDRESS AS D_ADDRESS,
  DETAIL.D_CITY AS D_CITY,
  DETAIL.D_STATE_PROV AS D_STATE_PROV,
  DETAIL.D_POSTAL_CODE AS D_POSTAL_CODE,
  DETAIL.D_COUNTRY_CODE AS D_COUNTRY_CODE,
  DETAIL.IS_PERISHABLE AS IS_PERISHABLE,
  DETAIL.BILLING_METHOD AS BILLING_METHOD,
  DETAIL.ASSIGNED_CARRIER_CODE AS ASSIGNED_CARRIER_CODE,
  DETAIL.TRANS_RESP_CODE AS TRANS_RESP_CODE,
  DETAIL.CURRENCY_CODE AS CURRENCY_CODE,
  DETAIL.PICKUP_START_DTTM AS PICKUP_START_DTTM,
  DETAIL.PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DETAIL.DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DETAIL.DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  DETAIL.NUM_STOPS AS NUM_STOPS,
  DETAIL.NUM_DOCKS AS NUM_DOCKS,
  DETAIL.HAS_NOTES AS HAS_NOTES,
  DETAIL.HAS_ALERTS AS HAS_ALERTS,
  DETAIL.HAS_IMPORT_ERROR AS HAS_IMPORT_ERROR,
  DETAIL.HAS_SOFT_CHECK_ERROR AS HAS_SOFT_CHECK_ERROR,
  DETAIL.HAS_TRACKING_MSG AS HAS_TRACKING_MSG,
  DETAIL.TRACKING_MSG_PROBLEM AS TRACKING_MSG_PROBLEM,
  DETAIL.PICKUP_TZ AS PICKUP_TZ,
  DETAIL.DELIVERY_TZ AS DELIVERY_TZ,
  DETAIL.O_STOP_LOCATION_NAME AS O_STOP_LOCATION_NAME,
  DETAIL.D_STOP_LOCATION_NAME AS D_STOP_LOCATION_NAME,
  DETAIL.USE_BROKER_AS_CARRIER AS USE_BROKER_AS_CARRIER,
  DETAIL.STATUS_CHANGE_DTTM AS STATUS_CHANGE_DTTM,
  DETAIL.REPORTED_COST AS REPORTED_COST,
  DETAIL.IS_AUTO_DELIVERED AS IS_AUTO_DELIVERED,
  DETAIL.SHIPMENT_TYPE AS SHIPMENT_TYPE,
  DETAIL.IS_SHIPMENT_RECONCILED AS IS_SHIPMENT_RECONCILED,
  DETAIL.DELIVERY_REQ AS DELIVERY_REQ,
  DETAIL.WAYPOINT_TOTAL_COST AS WAYPOINT_TOTAL_COST,
  DETAIL.WAYPOINT_HANDLING_COST AS WAYPOINT_HANDLING_COST,
  DETAIL.IS_MANUAL_ASSIGN AS IS_MANUAL_ASSIGN,
  DETAIL.PRIORITY_TYPE AS PRIORITY_TYPE,
  DETAIL.MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  DETAIL.SHIPMENT_LEG_TYPE AS SHIPMENT_LEG_TYPE,
  DETAIL.SHIPMENT_CLOSED_INDICATOR AS SHIPMENT_CLOSED_INDICATOR,
  DETAIL.NUM_CHARGE_LAYOVERS AS NUM_CHARGE_LAYOVERS,
  DETAIL.PICK_START_DTTM AS PICK_START_DTTM,
  DETAIL.TOTAL_TIME AS TOTAL_TIME,
  DETAIL.RETAIN_CONSOLIDATOR_TIMES AS RETAIN_CONSOLIDATOR_TIMES,
  DETAIL.EVENT_IND_TYPEID AS EVENT_IND_TYPEID,
  DETAIL.DELAY_TYPE AS DELAY_TYPE,
  DETAIL.ASSIGNED_CARRIER_ID AS ASSIGNED_CARRIER_ID,
  DETAIL.HAS_EM_NOTIFY_FLAG AS HAS_EM_NOTIFY_FLAG,
  DETAIL.REGION_ID AS REGION_ID,
  DETAIL.INBOUND_REGION_ID AS INBOUND_REGION_ID,
  DETAIL.OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  DETAIL.SHIPMENT_WIN_ADJ_FLAG AS SHIPMENT_WIN_ADJ_FLAG,
  DETAIL.CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  DETAIL.CREATED_SOURCE AS CREATED_SOURCE,
  DETAIL.CREATED_DTTM AS CREATED_DTTM,
  DETAIL.LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  DETAIL.LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  DETAIL.LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  DETAIL.TOTAL_COST AS TOTAL_COST,
  DETAIL.ORDER_QTY AS ORDER_QTY,
  MASTER.OMS_SHIPMENT_ID AS lkp_OMS_SHIPMENT_ID,
  MASTER.OMS_TC_COMPANY_ID AS lkp_OMS_TC_COMPANY_ID,
  MASTER.OMS_TC_SHIPMENT_ID AS lkp_OMS_TC_SHIPMENT_ID,
  MASTER.OMS_SHIPMENT_TYPE_CD AS lkp_OMS_SHIPMENT_TYPE_CD,
  MASTER.OMS_SHIPMENT_STATUS_ID AS lkp_OMS_SHIPMENT_STATUS_ID,
  MASTER.SHIPMENT_CLOSED_IND AS lkp_SHIPMENT_CLOSED_IND,
  MASTER.OMS_STATUS_CHANGE_TSTMP AS lkp_OMS_STATUS_CHANGE_TSTMP,
  MASTER.OMS_CREATION_TYPE_ID AS lkp_OMS_CREATION_TYPE_ID,
  MASTER.CANCELLED_FLAG AS lkp_CANCELLED_FLAG,
  MASTER.AUTO_DELIVERED_FLAG AS lkp_AUTO_DELIVERED_FLAG,
  MASTER.SHIPMENT_RECONCILED_FLAG AS lkp_SHIPMENT_RECONCILED_FLAG,
  MASTER.OMS_SHIPMENT_LEG_TYPE_ID AS lkp_OMS_SHIPMENT_LEG_TYPE_ID,
  MASTER.DELIVERY_REQ AS lkp_DELIVERY_REQ1,
  MASTER.OMS_AVAILABLE_TSTMP AS lkp_OMS_AVAILABLE_TSTMP,
  MASTER.OMS_REGION_ID AS lkp_OMS_REGION_ID,
  MASTER.OMS_INBOUND_REGION_ID AS lkp_OMS_INBOUND_REGION_ID,
  MASTER.OMS_OUTBOUND_REGION_ID AS lkp_OMS_OUTBOUND_REGION_ID,
  MASTER.OMS_O_FACILITY_NBR AS lkp_OMS_O_FACILITY_NBR,
  MASTER.OMS_O_FACILITY_ID AS lkp_OMS_O_FACILITY_ID,
  MASTER.O_STOP_LOCATION_NAME AS lkp_O_STOP_LOCATION_NAME1,
  MASTER.D_STOP_LOCATION_NAME AS lkp_D_STOP_LOCATION_NAME1,
  MASTER.O_ADDR AS lkp_O_ADDR,
  MASTER.O_CITY AS lkp_O_CITY1,
  MASTER.O_STATE_PROV AS lkp_O_STATE_PROV1,
  MASTER.O_POSTAL_CD AS lkp_O_POSTAL_CD,
  MASTER.O_COUNTRY_CD AS lkp_O_COUNTRY_CD,
  MASTER.D_ADDR AS lkp_D_ADDR,
  MASTER.D_CITY AS lkp_D_CITY1,
  MASTER.D_STATE_PROV AS lkp_D_STATE_PROV1,
  MASTER.D_POSTAL_CD AS lkp_D_POSTAL_CD,
  MASTER.D_COUNTRY_CD AS lkp_D_COUNTRY_CD,
  MASTER.PERISHABLE_FLAG AS lkp_PERISHABLE_FLAG,
  MASTER.HAS_NOTES_FLAG AS lkp_HAS_NOTES_FLAG,
  MASTER.HAS_ALERTS_FLAG AS lkp_HAS_ALERTS_FLAG,
  MASTER.HAS_EM_NOTIFY_FLAG AS lkp_HAS_EM_NOTIFY_FLAG1,
  MASTER.SHIPMENT_WIN_ADJ_FLAG AS lkp_SHIPMENT_WIN_ADJ_FLAG1,
  MASTER.HAS_IMPORT_ERROR_FLAG AS lkp_HAS_IMPORT_ERROR_FLAG,
  MASTER.HAS_SOFT_CHECK_ERROR_FLAG AS lkp_HAS_SOFT_CHECK_ERROR_FLAG,
  MASTER.HAS_TRACKING_MSG_FLAG AS lkp_HAS_TRACKING_MSG_FLAG,
  MASTER.TRACKING_MSG_PROBLEM_FLAG AS lkp_TRACKING_MSG_PROBLEM_FLAG,
  MASTER.USE_BROKER_AS_CARRIER_FLAG AS lkp_USE_BROKER_AS_CARRIER_FLAG,
  MASTER.UPDATE_SENT_FLAG AS lkp_UPDATE_SENT_FLAG,
  MASTER.MANUAL_ASSIGN_FLAG AS lkp_MANUAL_ASSIGN_FLAG,
  MASTER.OMS_PRIORITY_TYPE_ID AS lkp_OMS_PRIORITY_TYPE_ID,
  MASTER.RETAIN_CONSOLIDATOR_TIMES_FLAG AS lkp_RETAIN_CONSOLIDATOR_TIMES_FLAG,
  MASTER.OMS_EVENT_IND_TYPE_ID AS lkp_OMS_EVENT_IND_TYPE_ID,
  MASTER.OMS_DELAY_TYPE_ID AS lkp_OMS_DELAY_TYPE_ID,
  MASTER.OMS_ASSIGNED_CARRIER_ID AS lkp_OMS_ASSIGNED_CARRIER_ID,
  MASTER.OMS_ASSIGNED_CARRIER_CD AS lkp_OMS_ASSIGNED_CARRIER_CD,
  MASTER.OMS_BILLING_METHOD_ID AS lkp_OMS_BILLING_METHOD_ID,
  MASTER.OMS_TRANS_RESP_CD AS lkp_OMS_TRANS_RESP_CD,
  MASTER.OMS_PICK_START_TSTMP AS lkp_OMS_PICK_START_TSTMP,
  MASTER.OMS_PICKUP_START_TSTMP AS lkp_OMS_PICKUP_START_TSTMP,
  MASTER.OMS_PICKUP_END_TSTMP AS lkp_OMS_PICKUP_END_TSTMP,
  MASTER.OMS_PICKUP_TZ_ID AS lkp_OMS_PICKUP_TZ_ID,
  MASTER.OMS_DELIVERY_START_TSTMP AS lkp_OMS_DELIVERY_START_TSTMP,
  MASTER.OMS_DELIVERY_END_TSTMP AS lkp_OMS_DELIVERY_END_TSTMP,
  MASTER.OMS_DELIVERY_TZ_ID AS lkp_OMS_DELIVERY_TZ_ID,
  MASTER.NUM_CHARGE_LAYOVERS AS lkp_NUM_CHARGE_LAYOVERS1,
  MASTER.NUM_STOPS AS lkp_NUM_STOPS1,
  MASTER.NUM_DOCKS AS lkp_NUM_DOCKS1,
  MASTER.TOTAL_TIME AS lkp_TOTAL_TIME1,
  MASTER.ORDER_QTY AS lkp_ORDER_QTY1,
  MASTER.REPORTED_COST AS lkp_REPORTED_COST1,
  MASTER.WAYPOINT_TOTAL_COST AS lkp_WAYPOINT_TOTAL_COST1,
  MASTER.WAYPOINT_HANDLING_COST AS lkp_WAYPOINT_HANDLING_COST1,
  MASTER.TOTAL_COST AS lkp_TOTAL_COST1,
  MASTER.CURRENCY_CD AS lkp_CURRENCY_CD,
  MASTER.MV_CURRENCY_CD AS lkp_MV_CURRENCY_CD,
  MASTER.OMS_CREATED_SOURCE_TYPE_ID AS lkp_OMS_CREATED_SOURCE_TYPE_ID,
  MASTER.OMS_CREATED_SOURCE AS lkp_OMS_CREATED_SOURCE,
  MASTER.OMS_CREATED_TSTMP AS lkp_OMS_CREATED_TSTMP,
  MASTER.OMS_LAST_UPDATED_SOURCE_TYPE_ID AS lkp_OMS_LAST_UPDATED_SOURCE_TYPE_ID,
  MASTER.OMS_LAST_UPDATED_SOURCE AS lkp_OMS_LAST_UPDATED_SOURCE,
  MASTER.OMS_LAST_UPDATED_TSTMP AS lkp_OMS_LAST_UPDATED_TSTMP,
  MASTER.LOAD_TSTMP AS lkp_LOAD_TSTMP,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_OMS_SHIPMENT_DDS_1 MASTER
  RIGHT JOIN SQ_Shortcut_to_OMS_SHIPMENT_PRE_3 DETAIL ON MASTER.OMS_SHIPMENT_ID = DETAIL.SHIPMENT_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_OMS_SHIPMENT_4")

# COMMAND ----------
# DBTITLE 1, EXP_FLAG_5


query_5 = f"""SELECT
  SHIPMENT_ID AS SHIPMENT_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  TC_SHIPMENT_ID AS TC_SHIPMENT_ID,
  SHIPMENT_STATUS AS SHIPMENT_STATUS,
  UPDATE_SENT AS UPDATE_SENT,
  CREATION_TYPE AS CREATION_TYPE,
  IS_CANCELLED AS IS_CANCELLED,
  AVAILABLE_DTTM AS AVAILABLE_DTTM,
  O_FACILITY_NUMBER AS O_FACILITY_NUMBER,
  O_FACILITY_ID AS O_FACILITY_ID,
  O_ADDRESS AS O_ADDRESS,
  O_CITY AS O_CITY,
  O_STATE_PROV AS O_STATE_PROV,
  O_POSTAL_CODE AS O_POSTAL_CODE,
  O_COUNTRY_CODE AS O_COUNTRY_CODE,
  D_ADDRESS AS D_ADDRESS,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CODE AS D_POSTAL_CODE,
  D_COUNTRY_CODE AS D_COUNTRY_CODE,
  IS_PERISHABLE AS IS_PERISHABLE,
  BILLING_METHOD AS BILLING_METHOD,
  ASSIGNED_CARRIER_CODE AS ASSIGNED_CARRIER_CODE,
  TRANS_RESP_CODE AS TRANS_RESP_CODE,
  CURRENCY_CODE AS CURRENCY_CODE,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  NUM_STOPS AS NUM_STOPS,
  NUM_DOCKS AS NUM_DOCKS,
  HAS_NOTES AS HAS_NOTES,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_IMPORT_ERROR AS HAS_IMPORT_ERROR,
  HAS_SOFT_CHECK_ERROR AS HAS_SOFT_CHECK_ERROR,
  HAS_TRACKING_MSG AS HAS_TRACKING_MSG,
  TRACKING_MSG_PROBLEM AS TRACKING_MSG_PROBLEM,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  O_STOP_LOCATION_NAME AS O_STOP_LOCATION_NAME,
  D_STOP_LOCATION_NAME AS D_STOP_LOCATION_NAME,
  USE_BROKER_AS_CARRIER AS USE_BROKER_AS_CARRIER,
  STATUS_CHANGE_DTTM AS STATUS_CHANGE_DTTM,
  REPORTED_COST AS REPORTED_COST,
  IS_AUTO_DELIVERED AS IS_AUTO_DELIVERED,
  SHIPMENT_TYPE AS SHIPMENT_TYPE,
  IS_SHIPMENT_RECONCILED AS IS_SHIPMENT_RECONCILED,
  DELIVERY_REQ AS DELIVERY_REQ,
  WAYPOINT_TOTAL_COST AS WAYPOINT_TOTAL_COST,
  WAYPOINT_HANDLING_COST AS WAYPOINT_HANDLING_COST,
  IS_MANUAL_ASSIGN AS IS_MANUAL_ASSIGN,
  PRIORITY_TYPE AS PRIORITY_TYPE,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  SHIPMENT_LEG_TYPE AS SHIPMENT_LEG_TYPE,
  SHIPMENT_CLOSED_INDICATOR AS SHIPMENT_CLOSED_INDICATOR,
  NUM_CHARGE_LAYOVERS AS NUM_CHARGE_LAYOVERS,
  PICK_START_DTTM AS PICK_START_DTTM,
  TOTAL_TIME AS TOTAL_TIME,
  RETAIN_CONSOLIDATOR_TIMES AS RETAIN_CONSOLIDATOR_TIMES,
  EVENT_IND_TYPEID AS EVENT_IND_TYPEID,
  DELAY_TYPE AS DELAY_TYPE,
  ASSIGNED_CARRIER_ID AS ASSIGNED_CARRIER_ID,
  HAS_EM_NOTIFY_FLAG AS HAS_EM_NOTIFY_FLAG,
  REGION_ID AS REGION_ID,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  SHIPMENT_WIN_ADJ_FLAG AS SHIPMENT_WIN_ADJ_FLAG,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TOTAL_COST AS TOTAL_COST,
  ORDER_QTY AS ORDER_QTY,
  IFF(
    ISNULL(lkp_OMS_SHIPMENT_ID),
    1,
    IFF(
      (
        NOT ISNULL(lkp_OMS_SHIPMENT_ID)
        AND (
          (
            IFF(
              ISNULL(STATUS_CHANGE_DTTM),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              STATUS_CHANGE_DTTM
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_STATUS_CHANGE_TSTMP),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              lkp_OMS_STATUS_CHANGE_TSTMP
            )
          )
          OR (
            IFF(
              ISNULL(AVAILABLE_DTTM),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              AVAILABLE_DTTM
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_AVAILABLE_TSTMP),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              lkp_OMS_AVAILABLE_TSTMP
            )
          )
          OR (
            IFF(
              ISNULL(PICK_START_DTTM),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              PICK_START_DTTM
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_PICK_START_TSTMP),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              lkp_OMS_PICK_START_TSTMP
            )
          )
          OR (
            IFF(
              ISNULL(PICKUP_START_DTTM),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              PICKUP_START_DTTM
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_PICKUP_START_TSTMP),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              lkp_OMS_PICKUP_START_TSTMP
            )
          )
          OR (
            IFF(
              ISNULL(PICKUP_END_DTTM),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              PICKUP_END_DTTM
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_PICKUP_END_TSTMP),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              lkp_OMS_PICKUP_END_TSTMP
            )
          )
          OR (
            IFF(
              ISNULL(DELIVERY_START_DTTM),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              DELIVERY_START_DTTM
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_DELIVERY_START_TSTMP),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              lkp_OMS_DELIVERY_START_TSTMP
            )
          )
          OR (
            IFF(
              ISNULL(DELIVERY_END_DTTM),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              DELIVERY_END_DTTM
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_DELIVERY_END_TSTMP),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              lkp_OMS_DELIVERY_END_TSTMP
            )
          )
          OR (
            IFF(
              ISNULL(CREATED_DTTM),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              CREATED_DTTM
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_CREATED_TSTMP),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              lkp_OMS_CREATED_TSTMP
            )
          )
          OR (
            IFF(
              ISNULL(LAST_UPDATED_DTTM),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              LAST_UPDATED_DTTM
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_LAST_UPDATED_TSTMP),
              To_DATE('9999-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
              lkp_OMS_LAST_UPDATED_TSTMP
            )
          )
          OR (IFF(ISNULL(SHIPMENT_ID), 99, SHIPMENT_ID)) != (
            IFF(
              ISNULL(lkp_OMS_SHIPMENT_ID),
              99,
              lkp_OMS_SHIPMENT_ID
            )
          )
          OR (IFF(ISNULL(TC_COMPANY_ID), 99, TC_COMPANY_ID)) != (
            IFF(
              ISNULL(lkp_OMS_TC_COMPANY_ID),
              99,
              lkp_OMS_TC_COMPANY_ID
            )
          )
          OR (IFF(ISNULL(SHIPMENT_STATUS), 99, SHIPMENT_STATUS)) != (
            IFF(
              ISNULL(lkp_OMS_SHIPMENT_STATUS_ID),
              99,
              lkp_OMS_SHIPMENT_STATUS_ID
            )
          )
          OR (
            IFF(
              ISNULL(SHIPMENT_CLOSED_INDICATOR),
              99,
              SHIPMENT_CLOSED_INDICATOR
            )
          ) != (
            IFF(
              ISNULL(lkp_SHIPMENT_CLOSED_IND),
              99,
              lkp_SHIPMENT_CLOSED_IND
            )
          )
          OR (IFF(ISNULL(CREATION_TYPE), 99, CREATION_TYPE)) != (
            IFF(
              ISNULL(lkp_OMS_CREATION_TYPE_ID),
              99,
              lkp_OMS_CREATION_TYPE_ID
            )
          )
          OR (IFF(ISNULL(IS_CANCELLED), 99, IS_CANCELLED)) != (
            IFF(ISNULL(lkp_CANCELLED_FLAG), 99, lkp_CANCELLED_FLAG)
          )
          OR (
            IFF(ISNULL(IS_AUTO_DELIVERED), 99, IS_AUTO_DELIVERED)
          ) != (
            IFF(
              ISNULL(lkp_AUTO_DELIVERED_FLAG),
              99,
              lkp_AUTO_DELIVERED_FLAG
            )
          )
          OR (
            IFF(
              ISNULL(IS_SHIPMENT_RECONCILED),
              99,
              IS_SHIPMENT_RECONCILED
            )
          ) != (
            IFF(
              ISNULL(lkp_SHIPMENT_RECONCILED_FLAG),
              99,
              lkp_SHIPMENT_RECONCILED_FLAG
            )
          )
          OR (
            IFF(ISNULL(SHIPMENT_LEG_TYPE), 99, SHIPMENT_LEG_TYPE)
          ) != (
            IFF(
              ISNULL(lkp_OMS_SHIPMENT_LEG_TYPE_ID),
              99,
              lkp_OMS_SHIPMENT_LEG_TYPE_ID
            )
          )
          OR (IFF(ISNULL(REGION_ID), 99, REGION_ID)) != (
            IFF(ISNULL(lkp_OMS_REGION_ID), 99, lkp_OMS_REGION_ID)
          )
          OR (
            IFF(ISNULL(INBOUND_REGION_ID), 99, INBOUND_REGION_ID)
          ) != (
            IFF(
              ISNULL(lkp_OMS_INBOUND_REGION_ID),
              99,
              lkp_OMS_INBOUND_REGION_ID
            )
          )
          OR (
            IFF(ISNULL(OUTBOUND_REGION_ID), 99, OUTBOUND_REGION_ID)
          ) != (
            IFF(
              ISNULL(lkp_OMS_OUTBOUND_REGION_ID),
              99,
              lkp_OMS_OUTBOUND_REGION_ID
            )
          )
          OR (
            IFF(ISNULL(O_FACILITY_NUMBER), 99, O_FACILITY_NUMBER)
          ) != (
            IFF(
              ISNULL(lkp_OMS_O_FACILITY_NBR),
              99,
              lkp_OMS_O_FACILITY_NBR
            )
          )
          OR (IFF(ISNULL(IS_PERISHABLE), 99, IS_PERISHABLE)) != (
            IFF(
              ISNULL(lkp_PERISHABLE_FLAG),
              99,
              lkp_PERISHABLE_FLAG
            )
          )
          OR (IFF(ISNULL(HAS_NOTES), 99, HAS_NOTES)) != (
            IFF(ISNULL(lkp_HAS_NOTES_FLAG), 99, lkp_HAS_NOTES_FLAG)
          )
          OR (IFF(ISNULL(HAS_ALERTS), 99, HAS_ALERTS)) != (
            IFF(
              ISNULL(lkp_HAS_ALERTS_FLAG),
              99,
              lkp_HAS_ALERTS_FLAG
            )
          )
          OR (
            IFF(ISNULL(HAS_EM_NOTIFY_FLAG), 99, HAS_EM_NOTIFY_FLAG)
          ) != (
            IFF(
              ISNULL(lkp_HAS_EM_NOTIFY_FLAG1),
              99,
              lkp_HAS_EM_NOTIFY_FLAG1
            )
          )
          OR (
            IFF(
              ISNULL(SHIPMENT_WIN_ADJ_FLAG),
              99,
              SHIPMENT_WIN_ADJ_FLAG
            )
          ) != (
            IFF(
              ISNULL(lkp_SHIPMENT_WIN_ADJ_FLAG1),
              99,
              lkp_SHIPMENT_WIN_ADJ_FLAG1
            )
          )
          OR (
            IFF(ISNULL(HAS_IMPORT_ERROR), 99, HAS_IMPORT_ERROR)
          ) != (
            IFF(
              ISNULL(lkp_HAS_IMPORT_ERROR_FLAG),
              99,
              lkp_HAS_IMPORT_ERROR_FLAG
            )
          )
          OR (
            IFF(
              ISNULL(HAS_SOFT_CHECK_ERROR),
              99,
              HAS_SOFT_CHECK_ERROR
            )
          ) != (
            IFF(
              ISNULL(lkp_HAS_SOFT_CHECK_ERROR_FLAG),
              99,
              lkp_HAS_SOFT_CHECK_ERROR_FLAG
            )
          )
          OR (
            IFF(ISNULL(HAS_TRACKING_MSG), 99, HAS_TRACKING_MSG)
          ) != (
            IFF(
              ISNULL(lkp_HAS_TRACKING_MSG_FLAG),
              99,
              lkp_HAS_TRACKING_MSG_FLAG
            )
          )
          OR (
            IFF(
              ISNULL(TRACKING_MSG_PROBLEM),
              99,
              TRACKING_MSG_PROBLEM
            )
          ) != (
            IFF(
              ISNULL(lkp_TRACKING_MSG_PROBLEM_FLAG),
              99,
              lkp_TRACKING_MSG_PROBLEM_FLAG
            )
          )
          OR (
            IFF(
              ISNULL(USE_BROKER_AS_CARRIER),
              99,
              USE_BROKER_AS_CARRIER
            )
          ) != (
            IFF(
              ISNULL(lkp_USE_BROKER_AS_CARRIER_FLAG),
              99,
              lkp_USE_BROKER_AS_CARRIER_FLAG
            )
          )
          OR (IFF(ISNULL(UPDATE_SENT), 99, UPDATE_SENT)) != (
            IFF(
              ISNULL(lkp_UPDATE_SENT_FLAG),
              99,
              lkp_UPDATE_SENT_FLAG
            )
          )
          OR (
            IFF(ISNULL(IS_MANUAL_ASSIGN), 99, IS_MANUAL_ASSIGN)
          ) != (
            IFF(
              ISNULL(lkp_MANUAL_ASSIGN_FLAG),
              99,
              lkp_MANUAL_ASSIGN_FLAG
            )
          )
          OR (IFF(ISNULL(PRIORITY_TYPE), 99, PRIORITY_TYPE)) != (
            IFF(
              ISNULL(lkp_OMS_PRIORITY_TYPE_ID),
              99,
              lkp_OMS_PRIORITY_TYPE_ID
            )
          )
          OR (
            IFF(
              ISNULL(RETAIN_CONSOLIDATOR_TIMES),
              99,
              RETAIN_CONSOLIDATOR_TIMES
            )
          ) != (
            IFF(
              ISNULL(lkp_RETAIN_CONSOLIDATOR_TIMES_FLAG),
              99,
              lkp_RETAIN_CONSOLIDATOR_TIMES_FLAG
            )
          )
          OR (
            IFF(ISNULL(EVENT_IND_TYPEID), 99, EVENT_IND_TYPEID)
          ) != (
            IFF(
              ISNULL(lkp_OMS_EVENT_IND_TYPE_ID),
              99,
              lkp_OMS_EVENT_IND_TYPE_ID
            )
          )
          OR (IFF(ISNULL(DELAY_TYPE), 99, DELAY_TYPE)) != (
            IFF(
              ISNULL(lkp_OMS_DELAY_TYPE_ID),
              99,
              lkp_OMS_DELAY_TYPE_ID
            )
          )
          OR (
            IFF(
              ISNULL(ASSIGNED_CARRIER_ID),
              99,
              ASSIGNED_CARRIER_ID
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_ASSIGNED_CARRIER_ID),
              99,
              lkp_OMS_ASSIGNED_CARRIER_ID
            )
          )
          OR (IFF(ISNULL(BILLING_METHOD), 99, BILLING_METHOD)) != (
            IFF(
              ISNULL(lkp_OMS_BILLING_METHOD_ID),
              99,
              lkp_OMS_BILLING_METHOD_ID
            )
          )
          OR (IFF(ISNULL(PICKUP_TZ), 99, PICKUP_TZ)) != (
            IFF(
              ISNULL(lkp_OMS_PICKUP_TZ_ID),
              99,
              lkp_OMS_PICKUP_TZ_ID
            )
          )
          OR (IFF(ISNULL(DELIVERY_TZ), 99, DELIVERY_TZ)) != (
            IFF(
              ISNULL(lkp_OMS_DELIVERY_TZ_ID),
              99,
              lkp_OMS_DELIVERY_TZ_ID
            )
          )
          OR (
            IFF(
              ISNULL(NUM_CHARGE_LAYOVERS),
              99,
              NUM_CHARGE_LAYOVERS
            )
          ) != (
            IFF(
              ISNULL(lkp_NUM_CHARGE_LAYOVERS1),
              99,
              lkp_NUM_CHARGE_LAYOVERS1
            )
          )
          OR (IFF(ISNULL(NUM_STOPS), 99, NUM_STOPS)) != (IFF(ISNULL(lkp_NUM_STOPS1), 99, lkp_NUM_STOPS1))
          OR (IFF(ISNULL(NUM_DOCKS), 99, NUM_DOCKS)) != (IFF(ISNULL(lkp_NUM_DOCKS1), 99, lkp_NUM_DOCKS1))
          OR (IFF(ISNULL(TOTAL_TIME), 99, TOTAL_TIME)) != (IFF(ISNULL(lkp_TOTAL_TIME1), 99, lkp_TOTAL_TIME1))
          OR (IFF(ISNULL(REPORTED_COST), 99, REPORTED_COST)) != (IFF(ISNULL(lkp_ORDER_QTY1), 99, lkp_ORDER_QTY1))
          OR (IFF(ISNULL(ORDER_QTY), 99, ORDER_QTY)) != (
            IFF(ISNULL(lkp_REPORTED_COST1), 99, lkp_REPORTED_COST1)
          )
          OR (
            IFF(
              ISNULL(WAYPOINT_TOTAL_COST),
              99,
              WAYPOINT_TOTAL_COST
            )
          ) != (
            IFF(
              ISNULL(lkp_WAYPOINT_TOTAL_COST1),
              99,
              lkp_WAYPOINT_TOTAL_COST1
            )
          )
          OR (
            IFF(
              ISNULL(WAYPOINT_HANDLING_COST),
              99,
              WAYPOINT_HANDLING_COST
            )
          ) != (
            IFF(
              ISNULL(lkp_WAYPOINT_HANDLING_COST1),
              99,
              lkp_WAYPOINT_HANDLING_COST1
            )
          )
          OR (IFF(ISNULL(TOTAL_COST), 99, TOTAL_COST)) != (IFF(ISNULL(lkp_TOTAL_COST1), 99, lkp_TOTAL_COST1))
          OR (
            IFF(
              ISNULL(CREATED_SOURCE_TYPE),
              99,
              CREATED_SOURCE_TYPE
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_CREATED_SOURCE_TYPE_ID),
              99,
              lkp_OMS_CREATED_SOURCE_TYPE_ID
            )
          )
          OR (
            IFF(
              ISNULL(LAST_UPDATED_SOURCE_TYPE),
              99,
              LAST_UPDATED_SOURCE_TYPE
            )
          ) != (
            IFF(
              ISNULL(lkp_OMS_LAST_UPDATED_SOURCE_TYPE_ID),
              99,
              lkp_OMS_LAST_UPDATED_SOURCE_TYPE_ID
            )
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(TC_SHIPMENT_ID), ' ', TC_SHIPMENT_ID))
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_OMS_TC_SHIPMENT_ID),
                ' ',
                lkp_OMS_TC_SHIPMENT_ID
              )
            )
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(SHIPMENT_TYPE), ' ', SHIPMENT_TYPE))
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_OMS_SHIPMENT_TYPE_CD),
                ' ',
                lkp_OMS_SHIPMENT_TYPE_CD
              )
            )
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(DELIVERY_REQ), ' ', DELIVERY_REQ))
          ) != LTRIM(
            RTRIM(
              IFF(ISNULL(lkp_DELIVERY_REQ1), ' ', lkp_DELIVERY_REQ1)
            )
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(O_FACILITY_ID), ' ', O_FACILITY_ID))
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_OMS_O_FACILITY_ID),
                ' ',
                lkp_OMS_O_FACILITY_ID
              )
            )
          )
          OR LTRIM(
            RTRIM(
              IFF(
                ISNULL(O_STOP_LOCATION_NAME),
                ' ',
                O_STOP_LOCATION_NAME
              )
            )
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_O_STOP_LOCATION_NAME1),
                ' ',
                lkp_O_STOP_LOCATION_NAME1
              )
            )
          )
          OR LTRIM(
            RTRIM(
              IFF(
                ISNULL(D_STOP_LOCATION_NAME),
                ' ',
                D_STOP_LOCATION_NAME
              )
            )
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_D_STOP_LOCATION_NAME1),
                ' ',
                lkp_D_STOP_LOCATION_NAME1
              )
            )
          )
          OR LTRIM(RTRIM(IFF(ISNULL(O_ADDRESS), ' ', O_ADDRESS))) != LTRIM(RTRIM(IFF(ISNULL(lkp_O_ADDR), ' ', lkp_O_ADDR)))
          OR LTRIM(RTRIM(IFF(ISNULL(O_CITY), ' ', O_CITY))) != LTRIM(RTRIM(IFF(ISNULL(lkp_O_CITY1), ' ', lkp_O_CITY1)))
          OR LTRIM(
            RTRIM(IFF(ISNULL(O_STATE_PROV), ' ', O_STATE_PROV))
          ) != LTRIM(
            RTRIM(
              IFF(ISNULL(lkp_O_STATE_PROV1), ' ', lkp_O_STATE_PROV1)
            )
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(O_POSTAL_CODE), ' ', O_POSTAL_CODE))
          ) != LTRIM(
            RTRIM(IFF(ISNULL(lkp_O_POSTAL_CD), ' ', lkp_O_POSTAL_CD))
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(O_COUNTRY_CODE), ' ', O_COUNTRY_CODE))
          ) != LTRIM(
            RTRIM(
              IFF(ISNULL(lkp_O_COUNTRY_CD), ' ', lkp_O_COUNTRY_CD)
            )
          )
          OR LTRIM(RTRIM(IFF(ISNULL(D_ADDRESS), ' ', D_ADDRESS))) != LTRIM(RTRIM(IFF(ISNULL(lkp_D_ADDR), ' ', lkp_D_ADDR)))
          OR LTRIM(RTRIM(IFF(ISNULL(D_CITY), ' ', D_CITY))) != LTRIM(RTRIM(IFF(ISNULL(lkp_D_CITY1), ' ', lkp_D_CITY1)))
          OR LTRIM(
            RTRIM(IFF(ISNULL(D_STATE_PROV), ' ', D_STATE_PROV))
          ) != LTRIM(
            RTRIM(
              IFF(ISNULL(lkp_D_STATE_PROV1), ' ', lkp_D_STATE_PROV1)
            )
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(D_POSTAL_CODE), ' ', D_POSTAL_CODE))
          ) != LTRIM(
            RTRIM(IFF(ISNULL(lkp_D_POSTAL_CD), ' ', lkp_D_POSTAL_CD))
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(D_COUNTRY_CODE), ' ', D_COUNTRY_CODE))
          ) != LTRIM(
            RTRIM(
              IFF(ISNULL(lkp_D_COUNTRY_CD), ' ', lkp_D_COUNTRY_CD)
            )
          )
          OR LTRIM(
            RTRIM(
              IFF(
                ISNULL(ASSIGNED_CARRIER_CODE),
                ' ',
                ASSIGNED_CARRIER_CODE
              )
            )
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_OMS_ASSIGNED_CARRIER_CD),
                ' ',
                lkp_OMS_ASSIGNED_CARRIER_CD
              )
            )
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(TRANS_RESP_CODE), ' ', TRANS_RESP_CODE))
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_OMS_TRANS_RESP_CD),
                ' ',
                lkp_OMS_TRANS_RESP_CD
              )
            )
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(CURRENCY_CODE), ' ', CURRENCY_CODE))
          ) != LTRIM(
            RTRIM(IFF(ISNULL(lkp_CURRENCY_CD), ' ', lkp_CURRENCY_CD))
          )
          OR LTRIM(
            RTRIM(
              IFF(ISNULL(MV_CURRENCY_CODE), ' ', MV_CURRENCY_CODE)
            )
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_MV_CURRENCY_CD),
                ' ',
                lkp_MV_CURRENCY_CD
              )
            )
          )
          OR LTRIM(
            RTRIM(IFF(ISNULL(CREATED_SOURCE), ' ', CREATED_SOURCE))
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_OMS_CREATED_SOURCE),
                ' ',
                lkp_OMS_CREATED_SOURCE
              )
            )
          )
          OR LTRIM(
            RTRIM(
              IFF(
                ISNULL(LAST_UPDATED_SOURCE),
                ' ',
                LAST_UPDATED_SOURCE
              )
            )
          ) != LTRIM(
            RTRIM(
              IFF(
                ISNULL(lkp_OMS_LAST_UPDATED_SOURCE),
                ' ',
                lkp_OMS_LAST_UPDATED_SOURCE
              )
            )
          )
        )
      ),
      2,
      3
    )
  ) AS o_UPDATE_FLAG,
  now() AS o_UPDATE_TSTMP,
  IFF(ISNULL(lkp_LOAD_TSTMP), now(), lkp_LOAD_TSTMP) AS o_LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_SHIPMENT_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("EXP_FLAG_5")

# COMMAND ----------
# DBTITLE 1, FIL_FLAG_6


query_6 = f"""SELECT
  SHIPMENT_ID AS SHIPMENT_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  TC_SHIPMENT_ID AS TC_SHIPMENT_ID,
  SHIPMENT_STATUS AS SHIPMENT_STATUS,
  UPDATE_SENT AS UPDATE_SENT,
  CREATION_TYPE AS CREATION_TYPE,
  IS_CANCELLED AS IS_CANCELLED,
  AVAILABLE_DTTM AS AVAILABLE_DTTM,
  O_FACILITY_NUMBER AS O_FACILITY_NUMBER,
  O_FACILITY_ID AS O_FACILITY_ID,
  O_ADDRESS AS O_ADDRESS,
  O_CITY AS O_CITY,
  O_STATE_PROV AS O_STATE_PROV,
  O_POSTAL_CODE AS O_POSTAL_CODE,
  O_COUNTRY_CODE AS O_COUNTRY_CODE,
  D_ADDRESS AS D_ADDRESS,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CODE AS D_POSTAL_CODE,
  D_COUNTRY_CODE AS D_COUNTRY_CODE,
  IS_PERISHABLE AS IS_PERISHABLE,
  BILLING_METHOD AS BILLING_METHOD,
  ASSIGNED_CARRIER_CODE AS ASSIGNED_CARRIER_CODE,
  TRANS_RESP_CODE AS TRANS_RESP_CODE,
  CURRENCY_CODE AS CURRENCY_CODE,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  NUM_STOPS AS NUM_STOPS,
  NUM_DOCKS AS NUM_DOCKS,
  HAS_NOTES AS HAS_NOTES,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_IMPORT_ERROR AS HAS_IMPORT_ERROR,
  HAS_SOFT_CHECK_ERROR AS HAS_SOFT_CHECK_ERROR,
  HAS_TRACKING_MSG AS HAS_TRACKING_MSG,
  TRACKING_MSG_PROBLEM AS TRACKING_MSG_PROBLEM,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  O_STOP_LOCATION_NAME AS O_STOP_LOCATION_NAME,
  D_STOP_LOCATION_NAME AS D_STOP_LOCATION_NAME,
  USE_BROKER_AS_CARRIER AS USE_BROKER_AS_CARRIER,
  STATUS_CHANGE_DTTM AS STATUS_CHANGE_DTTM,
  REPORTED_COST AS REPORTED_COST,
  IS_AUTO_DELIVERED AS IS_AUTO_DELIVERED,
  SHIPMENT_TYPE AS SHIPMENT_TYPE,
  IS_SHIPMENT_RECONCILED AS IS_SHIPMENT_RECONCILED,
  DELIVERY_REQ AS DELIVERY_REQ,
  WAYPOINT_TOTAL_COST AS WAYPOINT_TOTAL_COST,
  WAYPOINT_HANDLING_COST AS WAYPOINT_HANDLING_COST,
  IS_MANUAL_ASSIGN AS IS_MANUAL_ASSIGN,
  PRIORITY_TYPE AS PRIORITY_TYPE,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  SHIPMENT_LEG_TYPE AS SHIPMENT_LEG_TYPE,
  SHIPMENT_CLOSED_INDICATOR AS SHIPMENT_CLOSED_INDICATOR,
  NUM_CHARGE_LAYOVERS AS NUM_CHARGE_LAYOVERS,
  PICK_START_DTTM AS PICK_START_DTTM,
  TOTAL_TIME AS TOTAL_TIME,
  RETAIN_CONSOLIDATOR_TIMES AS RETAIN_CONSOLIDATOR_TIMES,
  EVENT_IND_TYPEID AS EVENT_IND_TYPEID,
  DELAY_TYPE AS DELAY_TYPE,
  ASSIGNED_CARRIER_ID AS ASSIGNED_CARRIER_ID,
  HAS_EM_NOTIFY_FLAG AS HAS_EM_NOTIFY_FLAG,
  REGION_ID AS REGION_ID,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  SHIPMENT_WIN_ADJ_FLAG AS SHIPMENT_WIN_ADJ_FLAG,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TOTAL_COST AS TOTAL_COST,
  ORDER_QTY AS ORDER_QTY,
  o_UPDATE_FLAG AS o_UPDATE_FLAG,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_FLAG_5
WHERE
  IN(o_UPDATE_FLAG, 1, 2)"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("FIL_FLAG_6")

# COMMAND ----------
# DBTITLE 1, UPD_INSERT_UPDATE_7


query_7 = f"""SELECT
  SHIPMENT_ID AS SHIPMENT_ID,
  TC_COMPANY_ID AS TC_COMPANY_ID,
  TC_SHIPMENT_ID AS TC_SHIPMENT_ID,
  SHIPMENT_STATUS AS SHIPMENT_STATUS,
  UPDATE_SENT AS UPDATE_SENT,
  CREATION_TYPE AS CREATION_TYPE,
  IS_CANCELLED AS IS_CANCELLED,
  AVAILABLE_DTTM AS AVAILABLE_DTTM,
  O_FACILITY_NUMBER AS O_FACILITY_NUMBER,
  O_FACILITY_ID AS O_FACILITY_ID,
  O_ADDRESS AS O_ADDRESS,
  O_CITY AS O_CITY,
  O_STATE_PROV AS O_STATE_PROV,
  O_POSTAL_CODE AS O_POSTAL_CODE,
  O_COUNTRY_CODE AS O_COUNTRY_CODE,
  D_ADDRESS AS D_ADDRESS,
  D_CITY AS D_CITY,
  D_STATE_PROV AS D_STATE_PROV,
  D_POSTAL_CODE AS D_POSTAL_CODE,
  D_COUNTRY_CODE AS D_COUNTRY_CODE,
  IS_PERISHABLE AS IS_PERISHABLE,
  BILLING_METHOD AS BILLING_METHOD,
  ASSIGNED_CARRIER_CODE AS ASSIGNED_CARRIER_CODE,
  TRANS_RESP_CODE AS TRANS_RESP_CODE,
  CURRENCY_CODE AS CURRENCY_CODE,
  PICKUP_START_DTTM AS PICKUP_START_DTTM,
  PICKUP_END_DTTM AS PICKUP_END_DTTM,
  DELIVERY_START_DTTM AS DELIVERY_START_DTTM,
  DELIVERY_END_DTTM AS DELIVERY_END_DTTM,
  NUM_STOPS AS NUM_STOPS,
  NUM_DOCKS AS NUM_DOCKS,
  HAS_NOTES AS HAS_NOTES,
  HAS_ALERTS AS HAS_ALERTS,
  HAS_IMPORT_ERROR AS HAS_IMPORT_ERROR,
  HAS_SOFT_CHECK_ERROR AS HAS_SOFT_CHECK_ERROR,
  HAS_TRACKING_MSG AS HAS_TRACKING_MSG,
  TRACKING_MSG_PROBLEM AS TRACKING_MSG_PROBLEM,
  PICKUP_TZ AS PICKUP_TZ,
  DELIVERY_TZ AS DELIVERY_TZ,
  O_STOP_LOCATION_NAME AS O_STOP_LOCATION_NAME,
  D_STOP_LOCATION_NAME AS D_STOP_LOCATION_NAME,
  USE_BROKER_AS_CARRIER AS USE_BROKER_AS_CARRIER,
  STATUS_CHANGE_DTTM AS STATUS_CHANGE_DTTM,
  REPORTED_COST AS REPORTED_COST,
  IS_AUTO_DELIVERED AS IS_AUTO_DELIVERED,
  SHIPMENT_TYPE AS SHIPMENT_TYPE,
  IS_SHIPMENT_RECONCILED AS IS_SHIPMENT_RECONCILED,
  DELIVERY_REQ AS DELIVERY_REQ,
  WAYPOINT_TOTAL_COST AS WAYPOINT_TOTAL_COST,
  WAYPOINT_HANDLING_COST AS WAYPOINT_HANDLING_COST,
  IS_MANUAL_ASSIGN AS IS_MANUAL_ASSIGN,
  PRIORITY_TYPE AS PRIORITY_TYPE,
  MV_CURRENCY_CODE AS MV_CURRENCY_CODE,
  SHIPMENT_LEG_TYPE AS SHIPMENT_LEG_TYPE,
  SHIPMENT_CLOSED_INDICATOR AS SHIPMENT_CLOSED_INDICATOR,
  NUM_CHARGE_LAYOVERS AS NUM_CHARGE_LAYOVERS,
  PICK_START_DTTM AS PICK_START_DTTM,
  TOTAL_TIME AS TOTAL_TIME,
  RETAIN_CONSOLIDATOR_TIMES AS RETAIN_CONSOLIDATOR_TIMES,
  EVENT_IND_TYPEID AS EVENT_IND_TYPEID,
  DELAY_TYPE AS DELAY_TYPE,
  ASSIGNED_CARRIER_ID AS ASSIGNED_CARRIER_ID,
  HAS_EM_NOTIFY_FLAG AS HAS_EM_NOTIFY_FLAG,
  REGION_ID AS REGION_ID,
  INBOUND_REGION_ID AS INBOUND_REGION_ID,
  OUTBOUND_REGION_ID AS OUTBOUND_REGION_ID,
  SHIPMENT_WIN_ADJ_FLAG AS SHIPMENT_WIN_ADJ_FLAG,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  TOTAL_COST AS TOTAL_COST,
  ORDER_QTY AS ORDER_QTY,
  o_UPDATE_FLAG AS o_UPDATE_FLAG,
  o_UPDATE_TSTMP AS o_UPDATE_TSTMP,
  o_LOAD_TSTMP AS o_LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
  DECODE(o_UPDATE_FLAG, 1, 'DD_INSERT', 2, 'DD_UPDATE') AS UPDATE_STRATEGY_FLAG
FROM
  FIL_FLAG_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("UPD_INSERT_UPDATE_7")

# COMMAND ----------
# DBTITLE 1, OMS_SHIPMENT


spark.sql("""MERGE INTO OMS_SHIPMENT AS TARGET
USING
  UPD_INSERT_UPDATE_7 AS SOURCE ON TARGET.OMS_SHIPMENT_ID = SOURCE.SHIPMENT_ID
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_UPDATE" THEN
UPDATE
SET
  TARGET.OMS_SHIPMENT_ID = SOURCE.SHIPMENT_ID,
  TARGET.OMS_TC_COMPANY_ID = SOURCE.TC_COMPANY_ID,
  TARGET.OMS_TC_SHIPMENT_ID = SOURCE.TC_SHIPMENT_ID,
  TARGET.OMS_SHIPMENT_TYPE_CD = SOURCE.SHIPMENT_TYPE,
  TARGET.OMS_SHIPMENT_STATUS_ID = SOURCE.SHIPMENT_STATUS,
  TARGET.SHIPMENT_CLOSED_IND = SOURCE.SHIPMENT_CLOSED_INDICATOR,
  TARGET.OMS_STATUS_CHANGE_TSTMP = SOURCE.STATUS_CHANGE_DTTM,
  TARGET.OMS_CREATION_TYPE_ID = SOURCE.CREATION_TYPE,
  TARGET.CANCELLED_FLAG = SOURCE.IS_CANCELLED,
  TARGET.AUTO_DELIVERED_FLAG = SOURCE.IS_AUTO_DELIVERED,
  TARGET.SHIPMENT_RECONCILED_FLAG = SOURCE.IS_SHIPMENT_RECONCILED,
  TARGET.OMS_SHIPMENT_LEG_TYPE_ID = SOURCE.SHIPMENT_LEG_TYPE,
  TARGET.DELIVERY_REQ = SOURCE.DELIVERY_REQ,
  TARGET.OMS_AVAILABLE_TSTMP = SOURCE.AVAILABLE_DTTM,
  TARGET.OMS_REGION_ID = SOURCE.REGION_ID,
  TARGET.OMS_INBOUND_REGION_ID = SOURCE.INBOUND_REGION_ID,
  TARGET.OMS_OUTBOUND_REGION_ID = SOURCE.OUTBOUND_REGION_ID,
  TARGET.OMS_O_FACILITY_NBR = SOURCE.O_FACILITY_NUMBER,
  TARGET.OMS_O_FACILITY_ID = SOURCE.O_FACILITY_ID,
  TARGET.O_STOP_LOCATION_NAME = SOURCE.O_STOP_LOCATION_NAME,
  TARGET.D_STOP_LOCATION_NAME = SOURCE.D_STOP_LOCATION_NAME,
  TARGET.O_ADDR = SOURCE.O_ADDRESS,
  TARGET.O_CITY = SOURCE.O_CITY,
  TARGET.O_STATE_PROV = SOURCE.O_STATE_PROV,
  TARGET.O_POSTAL_CD = SOURCE.O_POSTAL_CODE,
  TARGET.O_COUNTRY_CD = SOURCE.O_COUNTRY_CODE,
  TARGET.D_ADDR = SOURCE.D_ADDRESS,
  TARGET.D_CITY = SOURCE.D_CITY,
  TARGET.D_STATE_PROV = SOURCE.D_STATE_PROV,
  TARGET.D_POSTAL_CD = SOURCE.D_POSTAL_CODE,
  TARGET.D_COUNTRY_CD = SOURCE.D_COUNTRY_CODE,
  TARGET.PERISHABLE_FLAG = SOURCE.IS_PERISHABLE,
  TARGET.HAS_NOTES_FLAG = SOURCE.HAS_NOTES,
  TARGET.HAS_ALERTS_FLAG = SOURCE.HAS_ALERTS,
  TARGET.HAS_EM_NOTIFY_FLAG = SOURCE.HAS_EM_NOTIFY_FLAG,
  TARGET.SHIPMENT_WIN_ADJ_FLAG = SOURCE.SHIPMENT_WIN_ADJ_FLAG,
  TARGET.HAS_IMPORT_ERROR_FLAG = SOURCE.HAS_IMPORT_ERROR,
  TARGET.HAS_SOFT_CHECK_ERROR_FLAG = SOURCE.HAS_SOFT_CHECK_ERROR,
  TARGET.HAS_TRACKING_MSG_FLAG = SOURCE.HAS_TRACKING_MSG,
  TARGET.TRACKING_MSG_PROBLEM_FLAG = SOURCE.TRACKING_MSG_PROBLEM,
  TARGET.USE_BROKER_AS_CARRIER_FLAG = SOURCE.USE_BROKER_AS_CARRIER,
  TARGET.UPDATE_SENT_FLAG = SOURCE.UPDATE_SENT,
  TARGET.MANUAL_ASSIGN_FLAG = SOURCE.IS_MANUAL_ASSIGN,
  TARGET.OMS_PRIORITY_TYPE_ID = SOURCE.PRIORITY_TYPE,
  TARGET.RETAIN_CONSOLIDATOR_TIMES_FLAG = SOURCE.RETAIN_CONSOLIDATOR_TIMES,
  TARGET.OMS_EVENT_IND_TYPE_ID = SOURCE.EVENT_IND_TYPEID,
  TARGET.OMS_DELAY_TYPE_ID = SOURCE.DELAY_TYPE,
  TARGET.OMS_ASSIGNED_CARRIER_ID = SOURCE.ASSIGNED_CARRIER_ID,
  TARGET.OMS_ASSIGNED_CARRIER_CD = SOURCE.ASSIGNED_CARRIER_CODE,
  TARGET.OMS_BILLING_METHOD_ID = SOURCE.BILLING_METHOD,
  TARGET.OMS_TRANS_RESP_CD = SOURCE.TRANS_RESP_CODE,
  TARGET.OMS_PICK_START_TSTMP = SOURCE.PICK_START_DTTM,
  TARGET.OMS_PICKUP_START_TSTMP = SOURCE.PICKUP_START_DTTM,
  TARGET.OMS_PICKUP_END_TSTMP = SOURCE.PICKUP_END_DTTM,
  TARGET.OMS_PICKUP_TZ_ID = SOURCE.PICKUP_TZ,
  TARGET.OMS_DELIVERY_START_TSTMP = SOURCE.DELIVERY_START_DTTM,
  TARGET.OMS_DELIVERY_END_TSTMP = SOURCE.DELIVERY_END_DTTM,
  TARGET.OMS_DELIVERY_TZ_ID = SOURCE.DELIVERY_TZ,
  TARGET.NUM_CHARGE_LAYOVERS = SOURCE.NUM_CHARGE_LAYOVERS,
  TARGET.NUM_STOPS = SOURCE.NUM_STOPS,
  TARGET.NUM_DOCKS = SOURCE.NUM_DOCKS,
  TARGET.TOTAL_TIME = SOURCE.TOTAL_TIME,
  TARGET.ORDER_QTY = SOURCE.ORDER_QTY,
  TARGET.REPORTED_COST = SOURCE.REPORTED_COST,
  TARGET.WAYPOINT_TOTAL_COST = SOURCE.WAYPOINT_TOTAL_COST,
  TARGET.WAYPOINT_HANDLING_COST = SOURCE.WAYPOINT_HANDLING_COST,
  TARGET.TOTAL_COST = SOURCE.TOTAL_COST,
  TARGET.CURRENCY_CD = SOURCE.CURRENCY_CODE,
  TARGET.MV_CURRENCY_CD = SOURCE.MV_CURRENCY_CODE,
  TARGET.OMS_CREATED_SOURCE_TYPE_ID = SOURCE.CREATED_SOURCE_TYPE,
  TARGET.OMS_CREATED_SOURCE = SOURCE.CREATED_SOURCE,
  TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM,
  TARGET.OMS_LAST_UPDATED_SOURCE_TYPE_ID = SOURCE.LAST_UPDATED_SOURCE_TYPE,
  TARGET.OMS_LAST_UPDATED_SOURCE = SOURCE.LAST_UPDATED_SOURCE,
  TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM,
  TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP,
  TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP
  WHEN MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_DELETE"
  AND TARGET.OMS_TC_COMPANY_ID = SOURCE.TC_COMPANY_ID
  AND TARGET.OMS_TC_SHIPMENT_ID = SOURCE.TC_SHIPMENT_ID
  AND TARGET.OMS_SHIPMENT_TYPE_CD = SOURCE.SHIPMENT_TYPE
  AND TARGET.OMS_SHIPMENT_STATUS_ID = SOURCE.SHIPMENT_STATUS
  AND TARGET.SHIPMENT_CLOSED_IND = SOURCE.SHIPMENT_CLOSED_INDICATOR
  AND TARGET.OMS_STATUS_CHANGE_TSTMP = SOURCE.STATUS_CHANGE_DTTM
  AND TARGET.OMS_CREATION_TYPE_ID = SOURCE.CREATION_TYPE
  AND TARGET.CANCELLED_FLAG = SOURCE.IS_CANCELLED
  AND TARGET.AUTO_DELIVERED_FLAG = SOURCE.IS_AUTO_DELIVERED
  AND TARGET.SHIPMENT_RECONCILED_FLAG = SOURCE.IS_SHIPMENT_RECONCILED
  AND TARGET.OMS_SHIPMENT_LEG_TYPE_ID = SOURCE.SHIPMENT_LEG_TYPE
  AND TARGET.DELIVERY_REQ = SOURCE.DELIVERY_REQ
  AND TARGET.OMS_AVAILABLE_TSTMP = SOURCE.AVAILABLE_DTTM
  AND TARGET.OMS_REGION_ID = SOURCE.REGION_ID
  AND TARGET.OMS_INBOUND_REGION_ID = SOURCE.INBOUND_REGION_ID
  AND TARGET.OMS_OUTBOUND_REGION_ID = SOURCE.OUTBOUND_REGION_ID
  AND TARGET.OMS_O_FACILITY_NBR = SOURCE.O_FACILITY_NUMBER
  AND TARGET.OMS_O_FACILITY_ID = SOURCE.O_FACILITY_ID
  AND TARGET.O_STOP_LOCATION_NAME = SOURCE.O_STOP_LOCATION_NAME
  AND TARGET.D_STOP_LOCATION_NAME = SOURCE.D_STOP_LOCATION_NAME
  AND TARGET.O_ADDR = SOURCE.O_ADDRESS
  AND TARGET.O_CITY = SOURCE.O_CITY
  AND TARGET.O_STATE_PROV = SOURCE.O_STATE_PROV
  AND TARGET.O_POSTAL_CD = SOURCE.O_POSTAL_CODE
  AND TARGET.O_COUNTRY_CD = SOURCE.O_COUNTRY_CODE
  AND TARGET.D_ADDR = SOURCE.D_ADDRESS
  AND TARGET.D_CITY = SOURCE.D_CITY
  AND TARGET.D_STATE_PROV = SOURCE.D_STATE_PROV
  AND TARGET.D_POSTAL_CD = SOURCE.D_POSTAL_CODE
  AND TARGET.D_COUNTRY_CD = SOURCE.D_COUNTRY_CODE
  AND TARGET.PERISHABLE_FLAG = SOURCE.IS_PERISHABLE
  AND TARGET.HAS_NOTES_FLAG = SOURCE.HAS_NOTES
  AND TARGET.HAS_ALERTS_FLAG = SOURCE.HAS_ALERTS
  AND TARGET.HAS_EM_NOTIFY_FLAG = SOURCE.HAS_EM_NOTIFY_FLAG
  AND TARGET.SHIPMENT_WIN_ADJ_FLAG = SOURCE.SHIPMENT_WIN_ADJ_FLAG
  AND TARGET.HAS_IMPORT_ERROR_FLAG = SOURCE.HAS_IMPORT_ERROR
  AND TARGET.HAS_SOFT_CHECK_ERROR_FLAG = SOURCE.HAS_SOFT_CHECK_ERROR
  AND TARGET.HAS_TRACKING_MSG_FLAG = SOURCE.HAS_TRACKING_MSG
  AND TARGET.TRACKING_MSG_PROBLEM_FLAG = SOURCE.TRACKING_MSG_PROBLEM
  AND TARGET.USE_BROKER_AS_CARRIER_FLAG = SOURCE.USE_BROKER_AS_CARRIER
  AND TARGET.UPDATE_SENT_FLAG = SOURCE.UPDATE_SENT
  AND TARGET.MANUAL_ASSIGN_FLAG = SOURCE.IS_MANUAL_ASSIGN
  AND TARGET.OMS_PRIORITY_TYPE_ID = SOURCE.PRIORITY_TYPE
  AND TARGET.RETAIN_CONSOLIDATOR_TIMES_FLAG = SOURCE.RETAIN_CONSOLIDATOR_TIMES
  AND TARGET.OMS_EVENT_IND_TYPE_ID = SOURCE.EVENT_IND_TYPEID
  AND TARGET.OMS_DELAY_TYPE_ID = SOURCE.DELAY_TYPE
  AND TARGET.OMS_ASSIGNED_CARRIER_ID = SOURCE.ASSIGNED_CARRIER_ID
  AND TARGET.OMS_ASSIGNED_CARRIER_CD = SOURCE.ASSIGNED_CARRIER_CODE
  AND TARGET.OMS_BILLING_METHOD_ID = SOURCE.BILLING_METHOD
  AND TARGET.OMS_TRANS_RESP_CD = SOURCE.TRANS_RESP_CODE
  AND TARGET.OMS_PICK_START_TSTMP = SOURCE.PICK_START_DTTM
  AND TARGET.OMS_PICKUP_START_TSTMP = SOURCE.PICKUP_START_DTTM
  AND TARGET.OMS_PICKUP_END_TSTMP = SOURCE.PICKUP_END_DTTM
  AND TARGET.OMS_PICKUP_TZ_ID = SOURCE.PICKUP_TZ
  AND TARGET.OMS_DELIVERY_START_TSTMP = SOURCE.DELIVERY_START_DTTM
  AND TARGET.OMS_DELIVERY_END_TSTMP = SOURCE.DELIVERY_END_DTTM
  AND TARGET.OMS_DELIVERY_TZ_ID = SOURCE.DELIVERY_TZ
  AND TARGET.NUM_CHARGE_LAYOVERS = SOURCE.NUM_CHARGE_LAYOVERS
  AND TARGET.NUM_STOPS = SOURCE.NUM_STOPS
  AND TARGET.NUM_DOCKS = SOURCE.NUM_DOCKS
  AND TARGET.TOTAL_TIME = SOURCE.TOTAL_TIME
  AND TARGET.ORDER_QTY = SOURCE.ORDER_QTY
  AND TARGET.REPORTED_COST = SOURCE.REPORTED_COST
  AND TARGET.WAYPOINT_TOTAL_COST = SOURCE.WAYPOINT_TOTAL_COST
  AND TARGET.WAYPOINT_HANDLING_COST = SOURCE.WAYPOINT_HANDLING_COST
  AND TARGET.TOTAL_COST = SOURCE.TOTAL_COST
  AND TARGET.CURRENCY_CD = SOURCE.CURRENCY_CODE
  AND TARGET.MV_CURRENCY_CD = SOURCE.MV_CURRENCY_CODE
  AND TARGET.OMS_CREATED_SOURCE_TYPE_ID = SOURCE.CREATED_SOURCE_TYPE
  AND TARGET.OMS_CREATED_SOURCE = SOURCE.CREATED_SOURCE
  AND TARGET.OMS_CREATED_TSTMP = SOURCE.CREATED_DTTM
  AND TARGET.OMS_LAST_UPDATED_SOURCE_TYPE_ID = SOURCE.LAST_UPDATED_SOURCE_TYPE
  AND TARGET.OMS_LAST_UPDATED_SOURCE = SOURCE.LAST_UPDATED_SOURCE
  AND TARGET.OMS_LAST_UPDATED_TSTMP = SOURCE.LAST_UPDATED_DTTM
  AND TARGET.UPDATE_TSTMP = SOURCE.o_UPDATE_TSTMP
  AND TARGET.LOAD_TSTMP = SOURCE.o_LOAD_TSTMP THEN DELETE
  WHEN NOT MATCHED
  AND SOURCE.UPDATE_STRATEGY_FLAG = "DD_INSERT" THEN
INSERT
  (
    TARGET.OMS_SHIPMENT_ID,
    TARGET.OMS_TC_COMPANY_ID,
    TARGET.OMS_TC_SHIPMENT_ID,
    TARGET.OMS_SHIPMENT_TYPE_CD,
    TARGET.OMS_SHIPMENT_STATUS_ID,
    TARGET.SHIPMENT_CLOSED_IND,
    TARGET.OMS_STATUS_CHANGE_TSTMP,
    TARGET.OMS_CREATION_TYPE_ID,
    TARGET.CANCELLED_FLAG,
    TARGET.AUTO_DELIVERED_FLAG,
    TARGET.SHIPMENT_RECONCILED_FLAG,
    TARGET.OMS_SHIPMENT_LEG_TYPE_ID,
    TARGET.DELIVERY_REQ,
    TARGET.OMS_AVAILABLE_TSTMP,
    TARGET.OMS_REGION_ID,
    TARGET.OMS_INBOUND_REGION_ID,
    TARGET.OMS_OUTBOUND_REGION_ID,
    TARGET.OMS_O_FACILITY_NBR,
    TARGET.OMS_O_FACILITY_ID,
    TARGET.O_STOP_LOCATION_NAME,
    TARGET.D_STOP_LOCATION_NAME,
    TARGET.O_ADDR,
    TARGET.O_CITY,
    TARGET.O_STATE_PROV,
    TARGET.O_POSTAL_CD,
    TARGET.O_COUNTRY_CD,
    TARGET.D_ADDR,
    TARGET.D_CITY,
    TARGET.D_STATE_PROV,
    TARGET.D_POSTAL_CD,
    TARGET.D_COUNTRY_CD,
    TARGET.PERISHABLE_FLAG,
    TARGET.HAS_NOTES_FLAG,
    TARGET.HAS_ALERTS_FLAG,
    TARGET.HAS_EM_NOTIFY_FLAG,
    TARGET.SHIPMENT_WIN_ADJ_FLAG,
    TARGET.HAS_IMPORT_ERROR_FLAG,
    TARGET.HAS_SOFT_CHECK_ERROR_FLAG,
    TARGET.HAS_TRACKING_MSG_FLAG,
    TARGET.TRACKING_MSG_PROBLEM_FLAG,
    TARGET.USE_BROKER_AS_CARRIER_FLAG,
    TARGET.UPDATE_SENT_FLAG,
    TARGET.MANUAL_ASSIGN_FLAG,
    TARGET.OMS_PRIORITY_TYPE_ID,
    TARGET.RETAIN_CONSOLIDATOR_TIMES_FLAG,
    TARGET.OMS_EVENT_IND_TYPE_ID,
    TARGET.OMS_DELAY_TYPE_ID,
    TARGET.OMS_ASSIGNED_CARRIER_ID,
    TARGET.OMS_ASSIGNED_CARRIER_CD,
    TARGET.OMS_BILLING_METHOD_ID,
    TARGET.OMS_TRANS_RESP_CD,
    TARGET.OMS_PICK_START_TSTMP,
    TARGET.OMS_PICKUP_START_TSTMP,
    TARGET.OMS_PICKUP_END_TSTMP,
    TARGET.OMS_PICKUP_TZ_ID,
    TARGET.OMS_DELIVERY_START_TSTMP,
    TARGET.OMS_DELIVERY_END_TSTMP,
    TARGET.OMS_DELIVERY_TZ_ID,
    TARGET.NUM_CHARGE_LAYOVERS,
    TARGET.NUM_STOPS,
    TARGET.NUM_DOCKS,
    TARGET.TOTAL_TIME,
    TARGET.ORDER_QTY,
    TARGET.REPORTED_COST,
    TARGET.WAYPOINT_TOTAL_COST,
    TARGET.WAYPOINT_HANDLING_COST,
    TARGET.TOTAL_COST,
    TARGET.CURRENCY_CD,
    TARGET.MV_CURRENCY_CD,
    TARGET.OMS_CREATED_SOURCE_TYPE_ID,
    TARGET.OMS_CREATED_SOURCE,
    TARGET.OMS_CREATED_TSTMP,
    TARGET.OMS_LAST_UPDATED_SOURCE_TYPE_ID,
    TARGET.OMS_LAST_UPDATED_SOURCE,
    TARGET.OMS_LAST_UPDATED_TSTMP,
    TARGET.UPDATE_TSTMP,
    TARGET.LOAD_TSTMP
  )
VALUES
  (
    SOURCE.SHIPMENT_ID,
    SOURCE.TC_COMPANY_ID,
    SOURCE.TC_SHIPMENT_ID,
    SOURCE.SHIPMENT_TYPE,
    SOURCE.SHIPMENT_STATUS,
    SOURCE.SHIPMENT_CLOSED_INDICATOR,
    SOURCE.STATUS_CHANGE_DTTM,
    SOURCE.CREATION_TYPE,
    SOURCE.IS_CANCELLED,
    SOURCE.IS_AUTO_DELIVERED,
    SOURCE.IS_SHIPMENT_RECONCILED,
    SOURCE.SHIPMENT_LEG_TYPE,
    SOURCE.DELIVERY_REQ,
    SOURCE.AVAILABLE_DTTM,
    SOURCE.REGION_ID,
    SOURCE.INBOUND_REGION_ID,
    SOURCE.OUTBOUND_REGION_ID,
    SOURCE.O_FACILITY_NUMBER,
    SOURCE.O_FACILITY_ID,
    SOURCE.O_STOP_LOCATION_NAME,
    SOURCE.D_STOP_LOCATION_NAME,
    SOURCE.O_ADDRESS,
    SOURCE.O_CITY,
    SOURCE.O_STATE_PROV,
    SOURCE.O_POSTAL_CODE,
    SOURCE.O_COUNTRY_CODE,
    SOURCE.D_ADDRESS,
    SOURCE.D_CITY,
    SOURCE.D_STATE_PROV,
    SOURCE.D_POSTAL_CODE,
    SOURCE.D_COUNTRY_CODE,
    SOURCE.IS_PERISHABLE,
    SOURCE.HAS_NOTES,
    SOURCE.HAS_ALERTS,
    SOURCE.HAS_EM_NOTIFY_FLAG,
    SOURCE.SHIPMENT_WIN_ADJ_FLAG,
    SOURCE.HAS_IMPORT_ERROR,
    SOURCE.HAS_SOFT_CHECK_ERROR,
    SOURCE.HAS_TRACKING_MSG,
    SOURCE.TRACKING_MSG_PROBLEM,
    SOURCE.USE_BROKER_AS_CARRIER,
    SOURCE.UPDATE_SENT,
    SOURCE.IS_MANUAL_ASSIGN,
    SOURCE.PRIORITY_TYPE,
    SOURCE.RETAIN_CONSOLIDATOR_TIMES,
    SOURCE.EVENT_IND_TYPEID,
    SOURCE.DELAY_TYPE,
    SOURCE.ASSIGNED_CARRIER_ID,
    SOURCE.ASSIGNED_CARRIER_CODE,
    SOURCE.BILLING_METHOD,
    SOURCE.TRANS_RESP_CODE,
    SOURCE.PICK_START_DTTM,
    SOURCE.PICKUP_START_DTTM,
    SOURCE.PICKUP_END_DTTM,
    SOURCE.PICKUP_TZ,
    SOURCE.DELIVERY_START_DTTM,
    SOURCE.DELIVERY_END_DTTM,
    SOURCE.DELIVERY_TZ,
    SOURCE.NUM_CHARGE_LAYOVERS,
    SOURCE.NUM_STOPS,
    SOURCE.NUM_DOCKS,
    SOURCE.TOTAL_TIME,
    SOURCE.ORDER_QTY,
    SOURCE.REPORTED_COST,
    SOURCE.WAYPOINT_TOTAL_COST,
    SOURCE.WAYPOINT_HANDLING_COST,
    SOURCE.TOTAL_COST,
    SOURCE.CURRENCY_CODE,
    SOURCE.MV_CURRENCY_CODE,
    SOURCE.CREATED_SOURCE_TYPE,
    SOURCE.CREATED_SOURCE,
    SOURCE.CREATED_DTTM,
    SOURCE.LAST_UPDATED_SOURCE_TYPE,
    SOURCE.LAST_UPDATED_SOURCE,
    SOURCE.LAST_UPDATED_DTTM,
    SOURCE.o_UPDATE_TSTMP,
    SOURCE.o_LOAD_TSTMP
  )""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_Shipment")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_Shipment", mainWorkflowId, parentName)
