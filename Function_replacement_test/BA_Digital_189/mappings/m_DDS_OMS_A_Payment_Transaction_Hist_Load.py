# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Payment_Transaction_Hist_Load")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DDS_OMS_A_Payment_Transaction_Hist_Load", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, SRC_Oracle_A_PAYMENT_TRANSACTION_0


query_0 = f"""SELECT
  PAYMENT_TRANSACTION_ID AS PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED
FROM
  A_PAYMENT_TRANSACTION"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("SRC_Oracle_A_PAYMENT_TRANSACTION_0")

# COMMAND ----------
# DBTITLE 1, SQ_Oracle_A_PAYMENT_TRANSACTION_1


query_1 = f"""SELECT
  PAYMENT_TRANSACTION_ID AS PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  CREATED_DTTM AS CREATED_DTTM,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  LAST_UPDATED_DTTM AS LAST_UPDATED_DTTM,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  SRC_Oracle_A_PAYMENT_TRANSACTION_0
WHERE
  (
    SRC_Oracle_A_PAYMENT_TRANSACTION_0.TRANSACTION_DTTM >= now() - 120
  )
  OR (
    SRC_Oracle_A_PAYMENT_TRANSACTION_0.CREATED_DTTM >= now() - 120
  )"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Oracle_A_PAYMENT_TRANSACTION_1")

# COMMAND ----------
# DBTITLE 1, SRC_NZ_OMS_A_PAYMENT_TRANSACTION_2


query_2 = f"""SELECT
  OMS_PAYMENT_TRANSACTION_ID AS OMS_PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  OMS_CREATED_DTTM AS OMS_CREATED_DTTM,
  OMS_LAST_UPDATED_DTTM AS OMS_LAST_UPDATED_DTTM,
  UPDATED_DTTM AS UPDATED_DTTM,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  OMS_A_PAYMENT_TRANSACTION"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("SRC_NZ_OMS_A_PAYMENT_TRANSACTION_2")

# COMMAND ----------
# DBTITLE 1, SQ_NZ_OMS_A_PAYMENT_TRANSACTION_3


query_3 = f"""SELECT
  OMS_PAYMENT_TRANSACTION_ID AS OMS_PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  OMS_CREATED_DTTM AS OMS_CREATED_DTTM,
  OMS_LAST_UPDATED_DTTM AS OMS_LAST_UPDATED_DTTM,
  UPDATED_DTTM AS UPDATED_DTTM,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  SRC_NZ_OMS_A_PAYMENT_TRANSACTION_2"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_NZ_OMS_A_PAYMENT_TRANSACTION_3")

# COMMAND ----------
# DBTITLE 1, JNR_OMS_A_Payment_Transaction_4


query_4 = f"""SELECT
  DETAIL.PAYMENT_TRANSACTION_ID AS PRE_PAYMENT_TRANSACTION_ID,
  DETAIL.EXTERNAL_PAYMENT_TRANS_ID AS PRE_EXTERNAL_PAYMENT_TRANS_ID,
  DETAIL.COMPANY_ID AS PRE_COMPANY_ID,
  DETAIL.PAYMENT_TRANS_TYPE AS PRE_PAYMENT_TRANS_TYPE,
  DETAIL.PAYMENT_DETAIL_ID AS PRE_PAYMENT_DETAIL_ID,
  DETAIL.MERCH_ID AS PRE_MERCH_ID,
  DETAIL.MERCH_PASSWORD AS PRE_MERCH_PASSWORD,
  DETAIL.REQUESTED_AMOUNT AS PRE_REQUESTED_AMOUNT,
  DETAIL.REQUEST_ID AS PRE_REQUEST_ID,
  DETAIL.REQUEST_TOKEN AS PRE_REQUEST_TOKEN,
  DETAIL.REQUESTED_DTTM AS PRE_REQUESTED_DTTM,
  DETAIL.FOLLOW_ON_ID AS PRE_FOLLOW_ON_ID,
  DETAIL.FOLLOW_ON_TOKEN AS PRE_FOLLOW_ON_TOKEN,
  DETAIL.PROCESSED_AMOUNT AS PRE_PROCESSED_AMOUNT,
  DETAIL.TRANSACTION_DTTM AS PRE_TRANSACTION_DTTM,
  DETAIL.TRANSACTION_EXP_DATE AS PRE_TRANSACTION_EXP_DATE,
  DETAIL.NO_OF_TRIES_LEFT AS PRE_NO_OF_TRIES_LEFT,
  DETAIL.RECONCILLATION_ID AS PRE_RECONCILLATION_ID,
  DETAIL.TRANS_RESP_DECISION AS PRE_TRANS_RESP_DECISION,
  DETAIL.TRANS_RESP_DECISION_DESC AS PRE_TRANS_RESP_DECISION_DESC,
  DETAIL.EXTERNAL_RESPONSE_CODE AS PRE_EXTERNAL_RESPONSE_CODE,
  DETAIL.EXTERNAL_RESPONSE_MSG AS PRE_EXTERNAL_RESPONSE_MSG,
  DETAIL.RECORD_STATUS AS PRE_RECORD_STATUS,
  DETAIL.PROCESS_COUNT AS PRE_PROCESS_COUNT,
  DETAIL.CREATED_SOURCE AS PRE_CREATED_SOURCE,
  DETAIL.CREATED_SOURCE_TYPE AS PRE_CREATED_SOURCE_TYPE,
  DETAIL.CREATED_DTTM AS PRE_CREATED_DTTM,
  DETAIL.LAST_UPDATED_SOURCE AS PRE_LAST_UPDATED_SOURCE,
  DETAIL.LAST_UPDATED_SOURCE_TYPE AS PRE_LAST_UPDATED_SOURCE_TYPE,
  DETAIL.LAST_UPDATED_DTTM AS PRE_LAST_UPDATED_DTTM,
  DETAIL.IS_DELETED AS PRE_IS_DELETED,
  DETAIL.COMBO_REQUESTED_ID AS PRE_COMBO_REQUESTED_ID,
  DETAIL.COMBO_REQUESTED_TOKEN AS PRE_COMBO_REQUESTED_TOKEN,
  DETAIL.PAYMENT_PROCESS_PARAMETER AS PRE_PAYMENT_PROCESS_PARAMETER,
  DETAIL.BYPASS AS PRE_BYPASS,
  DETAIL.LAST_UPDATED_PROCESS AS PRE_LAST_UPDATED_PROCESS,
  DETAIL.TRANS_RESP_DECISION_CODE AS PRE_TRANS_RESP_DECISION_CODE,
  DETAIL.MERCH_SIGNATURE AS PRE_MERCH_SIGNATURE,
  DETAIL.FD_BANK_RESPONSE_CODE AS PRE_FD_BANK_RESPONSE_CODE,
  DETAIL.IS_AUTHORIZED AS PRE_IS_AUTHORIZED,
  MASTER.OMS_PAYMENT_TRANSACTION_ID AS TGT_OMS_PAYMENT_TRANSACTION_ID,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_NZ_OMS_A_PAYMENT_TRANSACTION_3 MASTER
  RIGHT JOIN SQ_Oracle_A_PAYMENT_TRANSACTION_1 DETAIL ON MASTER.OMS_PAYMENT_TRANSACTION_ID = DETAIL.PAYMENT_TRANSACTION_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("JNR_OMS_A_Payment_Transaction_4")

# COMMAND ----------
# DBTITLE 1, FLT_Insert_Update_Records_5


query_5 = f"""SELECT
  PRE_PAYMENT_TRANSACTION_ID AS PRE_PAYMENT_TRANSACTION_ID,
  PRE_EXTERNAL_PAYMENT_TRANS_ID AS PRE_EXTERNAL_PAYMENT_TRANS_ID,
  PRE_COMPANY_ID AS PRE_COMPANY_ID,
  PRE_PAYMENT_TRANS_TYPE AS PRE_PAYMENT_TRANS_TYPE,
  PRE_PAYMENT_DETAIL_ID AS PRE_PAYMENT_DETAIL_ID,
  PRE_MERCH_ID AS PRE_MERCH_ID,
  PRE_MERCH_PASSWORD AS PRE_MERCH_PASSWORD,
  PRE_REQUESTED_AMOUNT AS PRE_REQUESTED_AMOUNT,
  PRE_REQUEST_ID AS PRE_REQUEST_ID,
  PRE_REQUEST_TOKEN AS PRE_REQUEST_TOKEN,
  PRE_REQUESTED_DTTM AS PRE_REQUESTED_DTTM,
  PRE_FOLLOW_ON_ID AS PRE_FOLLOW_ON_ID,
  PRE_FOLLOW_ON_TOKEN AS PRE_FOLLOW_ON_TOKEN,
  PRE_PROCESSED_AMOUNT AS PRE_PROCESSED_AMOUNT,
  PRE_TRANSACTION_DTTM AS PRE_TRANSACTION_DTTM,
  PRE_TRANSACTION_EXP_DATE AS PRE_TRANSACTION_EXP_DATE,
  PRE_NO_OF_TRIES_LEFT AS PRE_NO_OF_TRIES_LEFT,
  PRE_RECONCILLATION_ID AS PRE_RECONCILLATION_ID,
  PRE_TRANS_RESP_DECISION AS PRE_TRANS_RESP_DECISION,
  PRE_TRANS_RESP_DECISION_DESC AS PRE_TRANS_RESP_DECISION_DESC,
  PRE_EXTERNAL_RESPONSE_CODE AS PRE_EXTERNAL_RESPONSE_CODE,
  PRE_EXTERNAL_RESPONSE_MSG AS PRE_EXTERNAL_RESPONSE_MSG,
  PRE_RECORD_STATUS AS PRE_RECORD_STATUS,
  PRE_PROCESS_COUNT AS PRE_PROCESS_COUNT,
  PRE_CREATED_SOURCE AS PRE_CREATED_SOURCE,
  PRE_CREATED_SOURCE_TYPE AS PRE_CREATED_SOURCE_TYPE,
  PRE_CREATED_DTTM AS PRE_CREATED_DTTM,
  PRE_LAST_UPDATED_SOURCE AS PRE_LAST_UPDATED_SOURCE,
  PRE_LAST_UPDATED_SOURCE_TYPE AS PRE_LAST_UPDATED_SOURCE_TYPE,
  PRE_LAST_UPDATED_DTTM AS PRE_LAST_UPDATED_DTTM,
  PRE_IS_DELETED AS PRE_IS_DELETED,
  PRE_COMBO_REQUESTED_ID AS PRE_COMBO_REQUESTED_ID,
  PRE_COMBO_REQUESTED_TOKEN AS PRE_COMBO_REQUESTED_TOKEN,
  PRE_PAYMENT_PROCESS_PARAMETER AS PRE_PAYMENT_PROCESS_PARAMETER,
  PRE_BYPASS AS PRE_BYPASS,
  PRE_LAST_UPDATED_PROCESS AS PRE_LAST_UPDATED_PROCESS,
  PRE_TRANS_RESP_DECISION_CODE AS PRE_TRANS_RESP_DECISION_CODE,
  PRE_MERCH_SIGNATURE AS PRE_MERCH_SIGNATURE,
  PRE_FD_BANK_RESPONSE_CODE AS PRE_FD_BANK_RESPONSE_CODE,
  PRE_IS_AUTHORIZED AS PRE_IS_AUTHORIZED,
  TGT_OMS_PAYMENT_TRANSACTION_ID AS TGT_OMS_PAYMENT_TRANSACTION_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_OMS_A_Payment_Transaction_4
WHERE
  ISNULL(TGT_OMS_PAYMENT_TRANSACTION_ID)"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("FLT_Insert_Update_Records_5")

# COMMAND ----------
# DBTITLE 1, EXP_OMS_A_Payment_Transaction_6


query_6 = f"""SELECT
  PRE_PAYMENT_TRANSACTION_ID AS PAYMENT_TRANSACTION_ID,
  PRE_EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  PRE_COMPANY_ID AS COMPANY_ID,
  PRE_PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PRE_PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  PRE_MERCH_ID AS MERCH_ID,
  PRE_MERCH_PASSWORD AS MERCH_PASSWORD,
  PRE_REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  PRE_REQUEST_ID AS REQUEST_ID,
  PRE_REQUEST_TOKEN AS REQUEST_TOKEN,
  PRE_REQUESTED_DTTM AS REQUESTED_DTTM,
  PRE_FOLLOW_ON_ID AS FOLLOW_ON_ID,
  PRE_FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PRE_PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  PRE_TRANSACTION_DTTM AS TRANSACTION_DTTM,
  PRE_TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  PRE_NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  PRE_RECONCILLATION_ID AS RECONCILLATION_ID,
  PRE_TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  PRE_TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  PRE_EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  PRE_EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  PRE_RECORD_STATUS AS RECORD_STATUS,
  PRE_PROCESS_COUNT AS PROCESS_COUNT,
  PRE_CREATED_SOURCE AS CREATED_SOURCE,
  PRE_CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  PRE_LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  PRE_LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  PRE_IS_DELETED AS IS_DELETED,
  PRE_COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  PRE_COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PRE_PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  PRE_BYPASS AS BYPASS,
  PRE_LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  PRE_TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  PRE_MERCH_SIGNATURE AS MERCH_SIGNATURE,
  PRE_FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  PRE_IS_AUTHORIZED AS IS_AUTHORIZED,
  PRE_CREATED_DTTM AS OMS_CREATED_DTTM,
  PRE_LAST_UPDATED_DTTM AS OMS_LAST_UPDATED_DTTM,
  now() AS UPDATED_DTTM,
  now() AS LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FLT_Insert_Update_Records_5"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("EXP_OMS_A_Payment_Transaction_6")

# COMMAND ----------
# DBTITLE 1, UPD_Insert_Update_Records_7


query_7 = f"""SELECT
  PAYMENT_TRANSACTION_ID AS PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  OMS_CREATED_DTTM AS OMS_CREATED_DTTM,
  OMS_LAST_UPDATED_DTTM AS OMS_LAST_UPDATED_DTTM,
  UPDATED_DTTM AS UPDATED_DTTM,
  LOAD_TSTMP AS LOAD_TSTMP,
  NULL AS RECORD_TYPE,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_OMS_A_Payment_Transaction_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("UPD_Insert_Update_Records_7")

# COMMAND ----------
# DBTITLE 1, OMS_A_PAYMENT_TRANSACTION


spark.sql("""INSERT INTO
  OMS_A_PAYMENT_TRANSACTION
SELECT
  PAYMENT_TRANSACTION_ID AS OMS_PAYMENT_TRANSACTION_ID,
  EXTERNAL_PAYMENT_TRANS_ID AS EXTERNAL_PAYMENT_TRANS_ID,
  COMPANY_ID AS COMPANY_ID,
  PAYMENT_TRANS_TYPE AS PAYMENT_TRANS_TYPE,
  PAYMENT_DETAIL_ID AS PAYMENT_DETAIL_ID,
  MERCH_ID AS MERCH_ID,
  MERCH_PASSWORD AS MERCH_PASSWORD,
  REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  REQUEST_ID AS REQUEST_ID,
  REQUEST_TOKEN AS REQUEST_TOKEN,
  REQUESTED_DTTM AS REQUESTED_DTTM,
  FOLLOW_ON_ID AS FOLLOW_ON_ID,
  FOLLOW_ON_TOKEN AS FOLLOW_ON_TOKEN,
  PROCESSED_AMOUNT AS PROCESSED_AMOUNT,
  TRANSACTION_DTTM AS TRANSACTION_DTTM,
  TRANSACTION_EXP_DATE AS TRANSACTION_EXP_DATE,
  NO_OF_TRIES_LEFT AS NO_OF_TRIES_LEFT,
  RECONCILLATION_ID AS RECONCILLATION_ID,
  TRANS_RESP_DECISION AS TRANS_RESP_DECISION,
  TRANS_RESP_DECISION_DESC AS TRANS_RESP_DECISION_DESC,
  EXTERNAL_RESPONSE_CODE AS EXTERNAL_RESPONSE_CODE,
  EXTERNAL_RESPONSE_MSG AS EXTERNAL_RESPONSE_MSG,
  RECORD_STATUS AS RECORD_STATUS,
  PROCESS_COUNT AS PROCESS_COUNT,
  CREATED_SOURCE AS CREATED_SOURCE,
  CREATED_SOURCE_TYPE AS CREATED_SOURCE_TYPE,
  LAST_UPDATED_SOURCE AS LAST_UPDATED_SOURCE,
  LAST_UPDATED_SOURCE_TYPE AS LAST_UPDATED_SOURCE_TYPE,
  IS_DELETED AS IS_DELETED,
  COMBO_REQUESTED_ID AS COMBO_REQUESTED_ID,
  COMBO_REQUESTED_TOKEN AS COMBO_REQUESTED_TOKEN,
  PAYMENT_PROCESS_PARAMETER AS PAYMENT_PROCESS_PARAMETER,
  BYPASS AS BYPASS,
  LAST_UPDATED_PROCESS AS LAST_UPDATED_PROCESS,
  TRANS_RESP_DECISION_CODE AS TRANS_RESP_DECISION_CODE,
  MERCH_SIGNATURE AS MERCH_SIGNATURE,
  FD_BANK_RESPONSE_CODE AS FD_BANK_RESPONSE_CODE,
  IS_AUTHORIZED AS IS_AUTHORIZED,
  OMS_CREATED_DTTM AS OMS_CREATED_DTTM,
  OMS_LAST_UPDATED_DTTM AS OMS_LAST_UPDATED_DTTM,
  UPDATED_DTTM AS UPDATED_DTTM,
  LOAD_TSTMP AS LOAD_TSTMP FROMUPD_Insert_Update_Records_7""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DDS_OMS_A_Payment_Transaction_Hist_Load")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DDS_OMS_A_Payment_Transaction_Hist_Load", mainWorkflowId, parentName)
