# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ../WorkflowUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DD_MarketPlace_Invoice_Hist")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_DD_MarketPlace_Invoice_Hist", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_POS_TXN_TAX_0


query_0 = f"""SELECT
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  TXN_KEY_GID AS TXN_KEY_GID,
  TAX_TYPE_ID AS TAX_TYPE_ID,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  VOID_TYPE_CD AS VOID_TYPE_CD,
  TAX_PCT AS TAX_PCT,
  TAX_AMT AS TAX_AMT,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  LOAD_DT AS LOAD_DT
FROM
  POS_TXN_TAX"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_POS_TXN_TAX_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_POS_TXN_TAX_1


query_1 = f"""SELECT
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  TXN_KEY_GID AS TXN_KEY_GID,
  TAX_TYPE_ID AS TAX_TYPE_ID,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  VOID_TYPE_CD AS VOID_TYPE_CD,
  TAX_PCT AS TAX_PCT,
  TAX_AMT AS TAX_AMT,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  LOAD_DT AS LOAD_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_POS_TXN_TAX_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_POS_TXN_TAX_1")

# COMMAND ----------
# DBTITLE 1, FIL_POS_2


query_2 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  VOID_TYPE_CD AS VOID_TYPE_CD,
  TAX_AMT AS TAX_AMT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_POS_TXN_TAX_1
WHERE
  VOID_TYPE_CD = 'N'"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("FIL_POS_2")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW_3


query_3 = f"""SELECT
  DAY_DT AS DAY_DT,
  TXN_TSTMP AS TXN_TSTMP,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  TREATS_ID AS TREATS_ID,
  ACTING_CARD_FIRST_SIX AS ACTING_CARD_FIRST_SIX,
  ACTING_CARD_LAST_FOUR AS ACTING_CARD_LAST_FOUR,
  APPROVAL_CD AS APPROVAL_CD,
  TXN_AMT AS TXN_AMT,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DD_LOAD_TSTMP AS DD_LOAD_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT
FROM
  DD_MARKETPLACE_SETTLED_TXN_SALES_VW"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW_3")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW_4


query_4 = f"""SELECT
  DAY_DT AS DAY_DT,
  TXN_TSTMP AS TXN_TSTMP,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  TREATS_ID AS TREATS_ID,
  ACTING_CARD_FIRST_SIX AS ACTING_CARD_FIRST_SIX,
  ACTING_CARD_LAST_FOUR AS ACTING_CARD_LAST_FOUR,
  APPROVAL_CD AS APPROVAL_CD,
  TXN_AMT AS TXN_AMT,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DD_LOAD_TSTMP AS DD_LOAD_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW_3"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW_4")

# COMMAND ----------
# DBTITLE 1, EXP_S_VW_5


query_5 = f"""SELECT
  SALES_INSTANCE_ID AS VW_SALES_INSTANCE_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("EXP_S_VW_5")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW1_6


query_6 = f"""SELECT
  DAY_DT AS DAY_DT,
  TXN_TSTMP AS TXN_TSTMP,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  TREATS_ID AS TREATS_ID,
  ACTING_CARD_FIRST_SIX AS ACTING_CARD_FIRST_SIX,
  ACTING_CARD_LAST_FOUR AS ACTING_CARD_LAST_FOUR,
  APPROVAL_CD AS APPROVAL_CD,
  TXN_AMT AS TXN_AMT,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DD_LOAD_TSTMP AS DD_LOAD_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT
FROM
  DD_MARKETPLACE_SETTLED_TXN_SALES_VW"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW1_6")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW1_7


query_7 = f"""SELECT
  DAY_DT AS DAY_DT,
  TXN_TSTMP AS TXN_TSTMP,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  TREATS_ID AS TREATS_ID,
  ACTING_CARD_FIRST_SIX AS ACTING_CARD_FIRST_SIX,
  ACTING_CARD_LAST_FOUR AS ACTING_CARD_LAST_FOUR,
  APPROVAL_CD AS APPROVAL_CD,
  TXN_AMT AS TXN_AMT,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DD_LOAD_TSTMP AS DD_LOAD_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW1_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW1_7")

# COMMAND ----------
# DBTITLE 1, JNR_VW_POS_8


query_8 = f"""SELECT
  DETAIL.SALES_INSTANCE_ID AS VW_SALES_INSTANCE_ID,
  MASTER.SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  MASTER.TAX_AMT AS TAX_AMT,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_POS_2 MASTER
  INNER JOIN SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW1_7 DETAIL ON MASTER.SALES_INSTANCE_ID = DETAIL.SALES_INSTANCE_ID"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("JNR_VW_POS_8")

# COMMAND ----------
# DBTITLE 1, AGG_VW_POS_9


query_9 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  SUM(TAX_AMT) AS O_TAX_AMT,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  JNR_VW_POS_8
GROUP BY
  SALES_INSTANCE_ID"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("AGG_VW_POS_9")

# COMMAND ----------
# DBTITLE 1, EXP_T_10


query_10 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  O_TAX_AMT AS O_TAX_AMT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  AGG_VW_POS_9"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("EXP_T_10")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW2_11


query_11 = f"""SELECT
  DAY_DT AS DAY_DT,
  TXN_TSTMP AS TXN_TSTMP,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  TREATS_ID AS TREATS_ID,
  ACTING_CARD_FIRST_SIX AS ACTING_CARD_FIRST_SIX,
  ACTING_CARD_LAST_FOUR AS ACTING_CARD_LAST_FOUR,
  APPROVAL_CD AS APPROVAL_CD,
  TXN_AMT AS TXN_AMT,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DD_LOAD_TSTMP AS DD_LOAD_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT
FROM
  DD_MARKETPLACE_SETTLED_TXN_SALES_VW"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW2_11")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW2_12


query_12 = f"""SELECT
  DAY_DT AS DAY_DT,
  TXN_TSTMP AS TXN_TSTMP,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  TREATS_ID AS TREATS_ID,
  ACTING_CARD_FIRST_SIX AS ACTING_CARD_FIRST_SIX,
  ACTING_CARD_LAST_FOUR AS ACTING_CARD_LAST_FOUR,
  APPROVAL_CD AS APPROVAL_CD,
  TXN_AMT AS TXN_AMT,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DD_LOAD_TSTMP AS DD_LOAD_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW2_11"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW2_12")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW21_13


query_13 = f"""SELECT
  DAY_DT AS DAY_DT,
  TXN_TSTMP AS TXN_TSTMP,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  TREATS_ID AS TREATS_ID,
  ACTING_CARD_FIRST_SIX AS ACTING_CARD_FIRST_SIX,
  ACTING_CARD_LAST_FOUR AS ACTING_CARD_LAST_FOUR,
  APPROVAL_CD AS APPROVAL_CD,
  TXN_AMT AS TXN_AMT,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DD_LOAD_TSTMP AS DD_LOAD_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT
FROM
  DD_MARKETPLACE_SETTLED_TXN_SALES_VW"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW21_13")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW21_14


query_14 = f"""SELECT
  DAY_DT AS DAY_DT,
  TXN_TSTMP AS TXN_TSTMP,
  LOCATION_ID AS LOCATION_ID,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  TREATS_ID AS TREATS_ID,
  ACTING_CARD_FIRST_SIX AS ACTING_CARD_FIRST_SIX,
  ACTING_CARD_LAST_FOUR AS ACTING_CARD_LAST_FOUR,
  APPROVAL_CD AS APPROVAL_CD,
  TXN_AMT AS TXN_AMT,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DD_LOAD_TSTMP AS DD_LOAD_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW21_13"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW21_14")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DD_MARKETPLACE_SKU_EXCL_15


query_15 = f"""SELECT
  SKU_NBR AS SKU_NBR,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  DD_MARKETPLACE_SKU_EXCL"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("Shortcut_to_DD_MARKETPLACE_SKU_EXCL_15")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_DD_MARKETPLACE_SKU_EXCL_16


query_16 = f"""SELECT
  SKU_NBR AS SKU_NBR,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_DD_MARKETPLACE_SKU_EXCL_15"""

df_16 = spark.sql(query_16)

df_16.createOrReplaceTempView("SQ_Shortcut_to_DD_MARKETPLACE_SKU_EXCL_16")

# COMMAND ----------
# DBTITLE 1, EXP_DD_MARKET_SKU_EXCL_17


query_17 = f"""SELECT
  SKU_NBR AS SKU_NBR,
  LOAD_TSTMP AS LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_DD_MARKETPLACE_SKU_EXCL_16"""

df_17 = spark.sql(query_17)

df_17.createOrReplaceTempView("EXP_DD_MARKET_SKU_EXCL_17")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DD_MARKETPLACE_INVOICE_HIST_18


query_18 = f"""SELECT
  TXN_DT AS TXN_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  DD_INVOICE_NBR AS DD_INVOICE_NBR,
  COMPANY_ID AS COMPANY_ID,
  LOYALTY_NBR AS LOYALTY_NBR,
  CURRENCY_CD AS CURRENCY_CD,
  TOTAL_SALES_AMT AS TOTAL_SALES_AMT,
  TOTAL_TAX_AMT AS TOTAL_TAX_AMT,
  TOTAL_EXCL_SALES_AMT AS TOTAL_EXCL_SALES_AMT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  DD_MARKETPLACE_INVOICE_HIST"""

df_18 = spark.sql(query_18)

df_18.createOrReplaceTempView("Shortcut_to_DD_MARKETPLACE_INVOICE_HIST_18")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_DD_MARKETPLACE_INVOICE_HIST_19


query_19 = f"""SELECT
  TXN_DT AS TXN_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  DD_INVOICE_NBR AS DD_INVOICE_NBR,
  COMPANY_ID AS COMPANY_ID,
  LOYALTY_NBR AS LOYALTY_NBR,
  CURRENCY_CD AS CURRENCY_CD,
  TOTAL_SALES_AMT AS TOTAL_SALES_AMT,
  TOTAL_TAX_AMT AS TOTAL_TAX_AMT,
  TOTAL_EXCL_SALES_AMT AS TOTAL_EXCL_SALES_AMT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_DD_MARKETPLACE_INVOICE_HIST_18"""

df_19 = spark.sql(query_19)

df_19.createOrReplaceTempView("SQ_Shortcut_to_DD_MARKETPLACE_INVOICE_HIST_19")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_SALES_TRANS_PAYMENT_20


query_20 = f"""SELECT
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  PAYMENT_TYPE_ID AS PAYMENT_TYPE_ID,
  TRANS_ACCT_NBR AS TRANS_ACCT_NBR,
  AUTH_APPROVAL_CODE AS AUTH_APPROVAL_CODE,
  POS_TXN_SEQ_NBR AS POS_TXN_SEQ_NBR,
  VOID_TYPE_CD AS VOID_TYPE_CD,
  SALES_TYPE_ID AS SALES_TYPE_ID,
  TENDER_UID AS TENDER_UID,
  CUST_TRANS_ID AS CUST_TRANS_ID,
  TENDER_TSTMP AS TENDER_TSTMP,
  CASHIER_NBR AS CASHIER_NBR,
  KEYED_FLAG AS KEYED_FLAG,
  AUTH_APPR_CONTEXT_ID AS AUTH_APPR_CONTEXT_ID,
  TENDER_EXPIRE_DT AS TENDER_EXPIRE_DT,
  GC_INVOICE_NBR AS GC_INVOICE_NBR,
  AUTH_RESPONSE_ID AS AUTH_RESPONSE_ID,
  RECHARGE_FLAG AS RECHARGE_FLAG,
  ABA_NUMBER AS ABA_NUMBER,
  CUST_PO_NAME AS CUST_PO_NAME,
  CUST_FIRST_NAME AS CUST_FIRST_NAME,
  CUST_LAST_NAME AS CUST_LAST_NAME,
  GS1_CPN_BAR_CD AS GS1_CPN_BAR_CD,
  GS1_CPN_DATE_STATUS_ID AS GS1_CPN_DATE_STATUS_ID,
  FC_EXCHANGE_RATE AS FC_EXCHANGE_RATE,
  SALES_TRANS_AMT AS SALES_TRANS_AMT,
  RETURN_TRANS_AMT AS RETURN_TRANS_AMT,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DATE_LOADED AS DATE_LOADED,
  TOKEN_NBR AS TOKEN_NBR,
  MERCHANT_ID AS MERCHANT_ID
FROM
  SALES_TRANS_PAYMENT"""

df_20 = spark.sql(query_20)

df_20.createOrReplaceTempView("Shortcut_to_SALES_TRANS_PAYMENT_20")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_SALES_TRANS_PAYMENT_21


query_21 = f"""SELECT
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  PAYMENT_TYPE_ID AS PAYMENT_TYPE_ID,
  TRANS_ACCT_NBR AS TRANS_ACCT_NBR,
  AUTH_APPROVAL_CODE AS AUTH_APPROVAL_CODE,
  POS_TXN_SEQ_NBR AS POS_TXN_SEQ_NBR,
  VOID_TYPE_CD AS VOID_TYPE_CD,
  SALES_TYPE_ID AS SALES_TYPE_ID,
  TENDER_UID AS TENDER_UID,
  CUST_TRANS_ID AS CUST_TRANS_ID,
  TENDER_TSTMP AS TENDER_TSTMP,
  CASHIER_NBR AS CASHIER_NBR,
  KEYED_FLAG AS KEYED_FLAG,
  AUTH_APPR_CONTEXT_ID AS AUTH_APPR_CONTEXT_ID,
  TENDER_EXPIRE_DT AS TENDER_EXPIRE_DT,
  GC_INVOICE_NBR AS GC_INVOICE_NBR,
  AUTH_RESPONSE_ID AS AUTH_RESPONSE_ID,
  RECHARGE_FLAG AS RECHARGE_FLAG,
  ABA_NUMBER AS ABA_NUMBER,
  CUST_PO_NAME AS CUST_PO_NAME,
  CUST_FIRST_NAME AS CUST_FIRST_NAME,
  CUST_LAST_NAME AS CUST_LAST_NAME,
  GS1_CPN_BAR_CD AS GS1_CPN_BAR_CD,
  GS1_CPN_DATE_STATUS_ID AS GS1_CPN_DATE_STATUS_ID,
  FC_EXCHANGE_RATE AS FC_EXCHANGE_RATE,
  SALES_TRANS_AMT AS SALES_TRANS_AMT,
  RETURN_TRANS_AMT AS RETURN_TRANS_AMT,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  DATE_LOADED AS DATE_LOADED,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_SALES_TRANS_PAYMENT_20"""

df_21 = spark.sql(query_21)

df_21.createOrReplaceTempView("SQ_Shortcut_to_SALES_TRANS_PAYMENT_21")

# COMMAND ----------
# DBTITLE 1, FIL_S_T_PYMT_22


query_22 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  PAYMENT_TYPE_ID AS PAYMENT_TYPE_ID,
  VOID_TYPE_CD AS VOID_TYPE_CD,
  SALES_TRANS_AMT AS SALES_TRANS_AMT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_SALES_TRANS_PAYMENT_21
WHERE
  VOID_TYPE_CD = 'N'
  AND PAYMENT_TYPE_ID = 7"""

df_22 = spark.sql(query_22)

df_22.createOrReplaceTempView("FIL_S_T_PYMT_22")

# COMMAND ----------
# DBTITLE 1, JNR_VW_S_T_PYMT_23


query_23 = f"""SELECT
  DETAIL.SALES_INSTANCE_ID AS VW_SALES_INSTANCE_ID,
  MASTER.SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  MASTER.SALES_TRANS_AMT AS SALES_TRANS_AMT,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_S_T_PYMT_22 MASTER
  INNER JOIN SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW2_12 DETAIL ON MASTER.SALES_INSTANCE_ID = DETAIL.SALES_INSTANCE_ID"""

df_23 = spark.sql(query_23)

df_23.createOrReplaceTempView("JNR_VW_S_T_PYMT_23")

# COMMAND ----------
# DBTITLE 1, AGG_VW_S_T_PYMT_24


query_24 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  SUM(SALES_TRANS_AMT) AS O_MFT_CPN_SLS_AMT,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  JNR_VW_S_T_PYMT_23
GROUP BY
  SALES_INSTANCE_ID"""

df_24 = spark.sql(query_24)

df_24.createOrReplaceTempView("AGG_VW_S_T_PYMT_24")

# COMMAND ----------
# DBTITLE 1, EXP_M_25


query_25 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  O_MFT_CPN_SLS_AMT AS O_MFT_CPN_SLS_AMT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  AGG_VW_S_T_PYMT_24"""

df_25 = spark.sql(query_25)

df_25.createOrReplaceTempView("EXP_M_25")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_SKU_PROFILE_26


query_26 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  SKU_TYPE AS SKU_TYPE,
  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  STATUS_ID AS STATUS_ID,
  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SKU_DESC AS SKU_DESC,
  ALT_DESC AS ALT_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  COUNTRY_CD AS COUNTRY_CD,
  IMPORT_FLAG AS IMPORT_FLAG,
  HTS_CODE_ID AS HTS_CODE_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SIZE_DESC AS SIZE_DESC,
  BUM_QTY AS BUM_QTY,
  UOM_CD AS UOM_CD,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  BUYER_ID AS BUYER_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_COST_AMT AS PURCH_COST_AMT,
  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  BRAND_CD AS BRAND_CD,
  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  STATELINE_FLAG AS STATELINE_FLAG,
  SIGN_TYPE_CD AS SIGN_TYPE_CD,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  INIT_MKDN_DT AS INIT_MKDN_DT,
  DISC_START_DT AS DISC_START_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  FIRST_SALE_DT AS FIRST_SALE_DT,
  LAST_SALE_DT AS LAST_SALE_DT,
  FIRST_INV_DT AS FIRST_INV_DT,
  LAST_INV_DT AS LAST_INV_DT,
  LOAD_DT AS LOAD_DT,
  BASE_NBR AS BASE_NBR,
  BP_COLOR_ID AS BP_COLOR_ID,
  BP_SIZE_ID AS BP_SIZE_ID,
  BP_BREED_ID AS BP_BREED_ID,
  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  RTV_DEPT_CD AS RTV_DEPT_CD,
  GL_ACCT_NBR AS GL_ACCT_NBR,
  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  COMPONENT_FLAG AS COMPONENT_FLAG,
  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  ZDISCO_PID_DT AS ZDISCO_PID_DT,
  ZDISCO_START_DT AS ZDISCO_START_DT,
  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  ZDISCO_DC_DT AS ZDISCO_DC_DT,
  ZDISCO_STR_DT AS ZDISCO_STR_DT,
  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT
FROM
  SKU_PROFILE"""

df_26 = spark.sql(query_26)

df_26.createOrReplaceTempView("Shortcut_to_SKU_PROFILE_26")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_SKU_PROFILE_27


query_27 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  SKU_TYPE AS SKU_TYPE,
  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  STATUS_ID AS STATUS_ID,
  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SKU_DESC AS SKU_DESC,
  ALT_DESC AS ALT_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  COUNTRY_CD AS COUNTRY_CD,
  IMPORT_FLAG AS IMPORT_FLAG,
  HTS_CODE_ID AS HTS_CODE_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SIZE_DESC AS SIZE_DESC,
  BUM_QTY AS BUM_QTY,
  UOM_CD AS UOM_CD,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  BUYER_ID AS BUYER_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_COST_AMT AS PURCH_COST_AMT,
  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  BRAND_CD AS BRAND_CD,
  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  STATELINE_FLAG AS STATELINE_FLAG,
  SIGN_TYPE_CD AS SIGN_TYPE_CD,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  INIT_MKDN_DT AS INIT_MKDN_DT,
  DISC_START_DT AS DISC_START_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  FIRST_SALE_DT AS FIRST_SALE_DT,
  LAST_SALE_DT AS LAST_SALE_DT,
  FIRST_INV_DT AS FIRST_INV_DT,
  LAST_INV_DT AS LAST_INV_DT,
  LOAD_DT AS LOAD_DT,
  BASE_NBR AS BASE_NBR,
  BP_COLOR_ID AS BP_COLOR_ID,
  BP_SIZE_ID AS BP_SIZE_ID,
  BP_BREED_ID AS BP_BREED_ID,
  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  RTV_DEPT_CD AS RTV_DEPT_CD,
  GL_ACCT_NBR AS GL_ACCT_NBR,
  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  COMPONENT_FLAG AS COMPONENT_FLAG,
  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  ZDISCO_PID_DT AS ZDISCO_PID_DT,
  ZDISCO_START_DT AS ZDISCO_START_DT,
  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  ZDISCO_DC_DT AS ZDISCO_DC_DT,
  ZDISCO_STR_DT AS ZDISCO_STR_DT,
  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_SKU_PROFILE_26"""

df_27 = spark.sql(query_27)

df_27.createOrReplaceTempView("SQ_Shortcut_to_SKU_PROFILE_27")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_SITE_PROFILE_28


query_28 = f"""SELECT
  LOCATION_ID AS LOCATION_ID,
  LOCATION_TYPE_ID AS LOCATION_TYPE_ID,
  STORE_NBR AS STORE_NBR,
  STORE_NAME AS STORE_NAME,
  STORE_TYPE_ID AS STORE_TYPE_ID,
  STORE_OPEN_CLOSE_FLAG AS STORE_OPEN_CLOSE_FLAG,
  COMPANY_ID AS COMPANY_ID,
  REGION_ID AS REGION_ID,
  DISTRICT_ID AS DISTRICT_ID,
  PRICE_ZONE_ID AS PRICE_ZONE_ID,
  PRICE_AD_ZONE_ID AS PRICE_AD_ZONE_ID,
  REPL_DC_NBR AS REPL_DC_NBR,
  REPL_FISH_DC_NBR AS REPL_FISH_DC_NBR,
  REPL_FWD_DC_NBR AS REPL_FWD_DC_NBR,
  SQ_FEET_RETAIL AS SQ_FEET_RETAIL,
  SQ_FEET_TOTAL AS SQ_FEET_TOTAL,
  SITE_ADDRESS AS SITE_ADDRESS,
  SITE_CITY AS SITE_CITY,
  STATE_CD AS STATE_CD,
  COUNTRY_CD AS COUNTRY_CD,
  POSTAL_CD AS POSTAL_CD,
  SITE_MAIN_TELE_NO AS SITE_MAIN_TELE_NO,
  SITE_GROOM_TELE_NO AS SITE_GROOM_TELE_NO,
  SITE_EMAIL_ADDRESS AS SITE_EMAIL_ADDRESS,
  SITE_SALES_FLAG AS SITE_SALES_FLAG,
  EQUINE_MERCH_ID AS EQUINE_MERCH_ID,
  EQUINE_SITE_ID AS EQUINE_SITE_ID,
  EQUINE_SITE_OPEN_DT AS EQUINE_SITE_OPEN_DT,
  GEO_LATITUDE_NBR AS GEO_LATITUDE_NBR,
  GEO_LONGITUDE_NBR AS GEO_LONGITUDE_NBR,
  PETSMART_DMA_CD AS PETSMART_DMA_CD,
  LOYALTY_PGM_TYPE_ID AS LOYALTY_PGM_TYPE_ID,
  LOYALTY_PGM_STATUS_ID AS LOYALTY_PGM_STATUS_ID,
  LOYALTY_PGM_START_DT AS LOYALTY_PGM_START_DT,
  LOYALTY_PGM_CHANGE_DT AS LOYALTY_PGM_CHANGE_DT,
  BP_COMPANY_NBR AS BP_COMPANY_NBR,
  BP_GL_ACCT AS BP_GL_ACCT,
  TP_LOC_FLAG AS TP_LOC_FLAG,
  TP_ACTIVE_CNT AS TP_ACTIVE_CNT,
  PROMO_LABEL_CD AS PROMO_LABEL_CD,
  PARENT_LOCATION_ID AS PARENT_LOCATION_ID,
  LOCATION_NBR AS LOCATION_NBR,
  TIME_ZONE_ID AS TIME_ZONE_ID,
  DELV_SERVICE_CLASS_ID AS DELV_SERVICE_CLASS_ID,
  PICK_SERVICE_CLASS_ID AS PICK_SERVICE_CLASS_ID,
  SITE_LOGIN_ID AS SITE_LOGIN_ID,
  SITE_MANAGER_ID AS SITE_MANAGER_ID,
  SITE_OPEN_YRS_AMT AS SITE_OPEN_YRS_AMT,
  HOTEL_FLAG AS HOTEL_FLAG,
  DAYCAMP_FLAG AS DAYCAMP_FLAG,
  VET_FLAG AS VET_FLAG,
  DIST_MGR_NAME AS DIST_MGR_NAME,
  DIST_SVC_MGR_NAME AS DIST_SVC_MGR_NAME,
  REGION_VP_NAME AS REGION_VP_NAME,
  REGION_TRAINER_NAME AS REGION_TRAINER_NAME,
  ASSET_PROTECT_NAME AS ASSET_PROTECT_NAME,
  SITE_COUNTY AS SITE_COUNTY,
  SITE_FAX_NO AS SITE_FAX_NO,
  SFT_OPEN_DT AS SFT_OPEN_DT,
  DM_EMAIL_ADDRESS AS DM_EMAIL_ADDRESS,
  DSM_EMAIL_ADDRESS AS DSM_EMAIL_ADDRESS,
  RVP_EMAIL_ADDRESS AS RVP_EMAIL_ADDRESS,
  TRADE_AREA AS TRADE_AREA,
  FDLPS_NAME AS FDLPS_NAME,
  FDLPS_EMAIL AS FDLPS_EMAIL,
  OVERSITE_MGR_NAME AS OVERSITE_MGR_NAME,
  OVERSITE_MGR_EMAIL AS OVERSITE_MGR_EMAIL,
  SAFETY_DIRECTOR_NAME AS SAFETY_DIRECTOR_NAME,
  SAFETY_DIRECTOR_EMAIL AS SAFETY_DIRECTOR_EMAIL,
  RETAIL_MANAGER_SAFETY_NAME AS RETAIL_MANAGER_SAFETY_NAME,
  RETAIL_MANAGER_SAFETY_EMAIL AS RETAIL_MANAGER_SAFETY_EMAIL,
  AREA_DIRECTOR_NAME AS AREA_DIRECTOR_NAME,
  AREA_DIRECTOR_EMAIL AS AREA_DIRECTOR_EMAIL,
  DC_GENERAL_MANAGER_NAME AS DC_GENERAL_MANAGER_NAME,
  DC_GENERAL_MANAGER_EMAIL AS DC_GENERAL_MANAGER_EMAIL,
  ASST_DC_GENERAL_MANAGER_NAME1 AS ASST_DC_GENERAL_MANAGER_NAME1,
  ASST_DC_GENERAL_MANAGER_EMAIL1 AS ASST_DC_GENERAL_MANAGER_EMAIL1,
  ASST_DC_GENERAL_MANAGER_NAME2 AS ASST_DC_GENERAL_MANAGER_NAME2,
  ASST_DC_GENERAL_MANAGER_EMAIL2 AS ASST_DC_GENERAL_MANAGER_EMAIL2,
  REGIONAL_DC_SAFETY_MGR_NAME AS REGIONAL_DC_SAFETY_MGR_NAME,
  REGIONAL_DC_SAFETY_MGR_EMAIL AS REGIONAL_DC_SAFETY_MGR_EMAIL,
  DC_PEOPLE_SUPERVISOR_NAME AS DC_PEOPLE_SUPERVISOR_NAME,
  DC_PEOPLE_SUPERVISOR_EMAIL AS DC_PEOPLE_SUPERVISOR_EMAIL,
  PEOPLE_MANAGER_NAME AS PEOPLE_MANAGER_NAME,
  PEOPLE_MANAGER_EMAIL AS PEOPLE_MANAGER_EMAIL,
  ASSET_PROT_DIR_NAME AS ASSET_PROT_DIR_NAME,
  ASSET_PROT_DIR_EMAIL AS ASSET_PROT_DIR_EMAIL,
  SR_REG_ASSET_PROT_MGR_NAME AS SR_REG_ASSET_PROT_MGR_NAME,
  SR_REG_ASSET_PROT_MGR_EMAIL AS SR_REG_ASSET_PROT_MGR_EMAIL,
  REG_ASSET_PROT_MGR_NAME AS REG_ASSET_PROT_MGR_NAME,
  REG_ASSET_PROT_MGR_EMAIL AS REG_ASSET_PROT_MGR_EMAIL,
  ASSET_PROTECT_EMAIL AS ASSET_PROTECT_EMAIL,
  TP_START_DT AS TP_START_DT,
  OPEN_DT AS OPEN_DT,
  GR_OPEN_DT AS GR_OPEN_DT,
  CLOSE_DT AS CLOSE_DT,
  HOTEL_OPEN_DT AS HOTEL_OPEN_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  SITE_PROFILE"""

df_28 = spark.sql(query_28)

df_28.createOrReplaceTempView("Shortcut_to_SITE_PROFILE_28")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_SITE_PROFILE_29


query_29 = f"""SELECT
  LOCATION_ID AS LOCATION_ID,
  LOCATION_TYPE_ID AS LOCATION_TYPE_ID,
  STORE_NBR AS STORE_NBR,
  STORE_NAME AS STORE_NAME,
  STORE_TYPE_ID AS STORE_TYPE_ID,
  STORE_OPEN_CLOSE_FLAG AS STORE_OPEN_CLOSE_FLAG,
  COMPANY_ID AS COMPANY_ID,
  REGION_ID AS REGION_ID,
  DISTRICT_ID AS DISTRICT_ID,
  PRICE_ZONE_ID AS PRICE_ZONE_ID,
  PRICE_AD_ZONE_ID AS PRICE_AD_ZONE_ID,
  REPL_DC_NBR AS REPL_DC_NBR,
  REPL_FISH_DC_NBR AS REPL_FISH_DC_NBR,
  REPL_FWD_DC_NBR AS REPL_FWD_DC_NBR,
  SQ_FEET_RETAIL AS SQ_FEET_RETAIL,
  SQ_FEET_TOTAL AS SQ_FEET_TOTAL,
  SITE_ADDRESS AS SITE_ADDRESS,
  SITE_CITY AS SITE_CITY,
  STATE_CD AS STATE_CD,
  COUNTRY_CD AS COUNTRY_CD,
  POSTAL_CD AS POSTAL_CD,
  SITE_MAIN_TELE_NO AS SITE_MAIN_TELE_NO,
  SITE_GROOM_TELE_NO AS SITE_GROOM_TELE_NO,
  SITE_EMAIL_ADDRESS AS SITE_EMAIL_ADDRESS,
  SITE_SALES_FLAG AS SITE_SALES_FLAG,
  EQUINE_MERCH_ID AS EQUINE_MERCH_ID,
  EQUINE_SITE_ID AS EQUINE_SITE_ID,
  EQUINE_SITE_OPEN_DT AS EQUINE_SITE_OPEN_DT,
  GEO_LATITUDE_NBR AS GEO_LATITUDE_NBR,
  GEO_LONGITUDE_NBR AS GEO_LONGITUDE_NBR,
  PETSMART_DMA_CD AS PETSMART_DMA_CD,
  LOYALTY_PGM_TYPE_ID AS LOYALTY_PGM_TYPE_ID,
  LOYALTY_PGM_STATUS_ID AS LOYALTY_PGM_STATUS_ID,
  LOYALTY_PGM_START_DT AS LOYALTY_PGM_START_DT,
  LOYALTY_PGM_CHANGE_DT AS LOYALTY_PGM_CHANGE_DT,
  BP_COMPANY_NBR AS BP_COMPANY_NBR,
  BP_GL_ACCT AS BP_GL_ACCT,
  TP_LOC_FLAG AS TP_LOC_FLAG,
  TP_ACTIVE_CNT AS TP_ACTIVE_CNT,
  PROMO_LABEL_CD AS PROMO_LABEL_CD,
  PARENT_LOCATION_ID AS PARENT_LOCATION_ID,
  LOCATION_NBR AS LOCATION_NBR,
  TIME_ZONE_ID AS TIME_ZONE_ID,
  DELV_SERVICE_CLASS_ID AS DELV_SERVICE_CLASS_ID,
  PICK_SERVICE_CLASS_ID AS PICK_SERVICE_CLASS_ID,
  SITE_LOGIN_ID AS SITE_LOGIN_ID,
  SITE_MANAGER_ID AS SITE_MANAGER_ID,
  SITE_OPEN_YRS_AMT AS SITE_OPEN_YRS_AMT,
  HOTEL_FLAG AS HOTEL_FLAG,
  DAYCAMP_FLAG AS DAYCAMP_FLAG,
  VET_FLAG AS VET_FLAG,
  DIST_MGR_NAME AS DIST_MGR_NAME,
  DIST_SVC_MGR_NAME AS DIST_SVC_MGR_NAME,
  REGION_VP_NAME AS REGION_VP_NAME,
  REGION_TRAINER_NAME AS REGION_TRAINER_NAME,
  ASSET_PROTECT_NAME AS ASSET_PROTECT_NAME,
  SITE_COUNTY AS SITE_COUNTY,
  SITE_FAX_NO AS SITE_FAX_NO,
  SFT_OPEN_DT AS SFT_OPEN_DT,
  DM_EMAIL_ADDRESS AS DM_EMAIL_ADDRESS,
  DSM_EMAIL_ADDRESS AS DSM_EMAIL_ADDRESS,
  RVP_EMAIL_ADDRESS AS RVP_EMAIL_ADDRESS,
  TRADE_AREA AS TRADE_AREA,
  FDLPS_NAME AS FDLPS_NAME,
  FDLPS_EMAIL AS FDLPS_EMAIL,
  OVERSITE_MGR_NAME AS OVERSITE_MGR_NAME,
  OVERSITE_MGR_EMAIL AS OVERSITE_MGR_EMAIL,
  SAFETY_DIRECTOR_NAME AS SAFETY_DIRECTOR_NAME,
  SAFETY_DIRECTOR_EMAIL AS SAFETY_DIRECTOR_EMAIL,
  RETAIL_MANAGER_SAFETY_NAME AS RETAIL_MANAGER_SAFETY_NAME,
  RETAIL_MANAGER_SAFETY_EMAIL AS RETAIL_MANAGER_SAFETY_EMAIL,
  AREA_DIRECTOR_NAME AS AREA_DIRECTOR_NAME,
  AREA_DIRECTOR_EMAIL AS AREA_DIRECTOR_EMAIL,
  DC_GENERAL_MANAGER_NAME AS DC_GENERAL_MANAGER_NAME,
  DC_GENERAL_MANAGER_EMAIL AS DC_GENERAL_MANAGER_EMAIL,
  ASST_DC_GENERAL_MANAGER_NAME1 AS ASST_DC_GENERAL_MANAGER_NAME1,
  ASST_DC_GENERAL_MANAGER_EMAIL1 AS ASST_DC_GENERAL_MANAGER_EMAIL1,
  ASST_DC_GENERAL_MANAGER_NAME2 AS ASST_DC_GENERAL_MANAGER_NAME2,
  ASST_DC_GENERAL_MANAGER_EMAIL2 AS ASST_DC_GENERAL_MANAGER_EMAIL2,
  REGIONAL_DC_SAFETY_MGR_NAME AS REGIONAL_DC_SAFETY_MGR_NAME,
  REGIONAL_DC_SAFETY_MGR_EMAIL AS REGIONAL_DC_SAFETY_MGR_EMAIL,
  DC_PEOPLE_SUPERVISOR_NAME AS DC_PEOPLE_SUPERVISOR_NAME,
  DC_PEOPLE_SUPERVISOR_EMAIL AS DC_PEOPLE_SUPERVISOR_EMAIL,
  PEOPLE_MANAGER_NAME AS PEOPLE_MANAGER_NAME,
  PEOPLE_MANAGER_EMAIL AS PEOPLE_MANAGER_EMAIL,
  ASSET_PROT_DIR_NAME AS ASSET_PROT_DIR_NAME,
  ASSET_PROT_DIR_EMAIL AS ASSET_PROT_DIR_EMAIL,
  SR_REG_ASSET_PROT_MGR_NAME AS SR_REG_ASSET_PROT_MGR_NAME,
  SR_REG_ASSET_PROT_MGR_EMAIL AS SR_REG_ASSET_PROT_MGR_EMAIL,
  REG_ASSET_PROT_MGR_NAME AS REG_ASSET_PROT_MGR_NAME,
  REG_ASSET_PROT_MGR_EMAIL AS REG_ASSET_PROT_MGR_EMAIL,
  ASSET_PROTECT_EMAIL AS ASSET_PROTECT_EMAIL,
  TP_START_DT AS TP_START_DT,
  OPEN_DT AS OPEN_DT,
  GR_OPEN_DT AS GR_OPEN_DT,
  CLOSE_DT AS CLOSE_DT,
  HOTEL_OPEN_DT AS HOTEL_OPEN_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_SITE_PROFILE_28"""

df_29 = spark.sql(query_29)

df_29.createOrReplaceTempView("SQ_Shortcut_to_SITE_PROFILE_29")

# COMMAND ----------
# DBTITLE 1, JNR_VW_S_Profile_30


query_30 = f"""SELECT
  DETAIL.DAY_DT AS DAY_DT,
  DETAIL.LOCATION_ID AS LOCATION_ID,
  DETAIL.DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DETAIL.DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  DETAIL.SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  MASTER.LOCATION_ID AS S_Profile_LOCATION_ID,
  MASTER.COMPANY_ID AS COMPANY_ID,
  DETAIL.DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DETAIL.SLS_LOAD_DT AS SLS_LOAD_DT,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_SITE_PROFILE_29 MASTER
  INNER JOIN SQ_Shortcut_to_DD_MARKETPLACE_SETTLED_TXN_SALES_VW21_14 DETAIL ON MASTER.LOCATION_ID = DETAIL.LOCATION_ID"""

df_30 = spark.sql(query_30)

df_30.createOrReplaceTempView("JNR_VW_S_Profile_30")

# COMMAND ----------
# DBTITLE 1, EXP_VW_S_Profile_31


query_31 = f"""SELECT
  DAY_DT AS DAY_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  COMPANY_ID AS COMPANY_ID,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_VW_S_Profile_30"""

df_31 = spark.sql(query_31)

df_31.createOrReplaceTempView("EXP_VW_S_Profile_31")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_SALES_TRANS_SKU_32


query_32 = f"""SELECT
  DAY_DT AS DAY_DT,
  SALES_INSTANCE_ID_DIST_KEY AS SALES_INSTANCE_ID_DIST_KEY,
  PRODUCT_ID AS PRODUCT_ID,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  LOCATION_ID AS LOCATION_ID,
  SALES_TYPE_ID AS SALES_TYPE_ID,
  VOID_TYPE_CD AS VOID_TYPE_CD,
  TXN_WAS_POST_VOIDED_FLAG AS TXN_WAS_POST_VOIDED_FLAG,
  ORDER_NBR AS ORDER_NBR,
  ORDER_SEQ_NBR AS ORDER_SEQ_NBR,
  ORDER_CHANNEL AS ORDER_CHANNEL,
  ORDER_ASSIST_LOCATION_ID AS ORDER_ASSIST_LOCATION_ID,
  ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  ORDER_CREATION_DEVICE_TYPE AS ORDER_CREATION_DEVICE_TYPE,
  ORDER_CREATION_DEVICE_WIDTH AS ORDER_CREATION_DEVICE_WIDTH,
  TXN_SEGMENT AS TXN_SEGMENT,
  PAYMENT_DEVICE_TYPE AS PAYMENT_DEVICE_TYPE,
  TRANS_TSTMP AS TRANS_TSTMP,
  LOYALTY_NBR AS LOYALTY_NBR,
  LOYALTY_REDEMPTION_ID AS LOYALTY_REDEMPTION_ID,
  LUID AS LUID,
  CUST_TRANS_ID AS CUST_TRANS_ID,
  CUSTOMER_EID AS CUSTOMER_EID,
  CUSTOMER_GID AS CUSTOMER_GID,
  SALES_CUSTOMER_LINK_EXCL_TYPE_ID AS SALES_CUSTOMER_LINK_EXCL_TYPE_ID,
  SPECIAL_SALES_FLAG AS SPECIAL_SALES_FLAG,
  RECEIPTLESS_RETURN_FLAG AS RECEIPTLESS_RETURN_FLAG,
  TRAINING_START_DT AS TRAINING_START_DT,
  TRAINER_NAME AS TRAINER_NAME,
  SALES_AMT AS SALES_AMT,
  SALES_COST AS SALES_COST,
  SALES_QTY AS SALES_QTY,
  SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,
  SPECIAL_SALES_QTY AS SPECIAL_SALES_QTY,
  RETURN_AMT AS RETURN_AMT,
  RETURN_COST AS RETURN_COST,
  RETURN_QTY AS RETURN_QTY,
  CLEARANCE_AMT AS CLEARANCE_AMT,
  CLEARANCE_QTY AS CLEARANCE_QTY,
  CLEARANCE_RETURN_AMT AS CLEARANCE_RETURN_AMT,
  CLEARANCE_RETURN_QTY AS CLEARANCE_RETURN_QTY,
  SPECIAL_RETURN_AMT AS SPECIAL_RETURN_AMT,
  SPECIAL_RETURN_QTY AS SPECIAL_RETURN_QTY,
  SPECIAL_SRVC_AMT AS SPECIAL_SRVC_AMT,
  DISCOUNT_AMT AS DISCOUNT_AMT,
  DISCOUNT_QTY AS DISCOUNT_QTY,
  DISCOUNT_RETURN_AMT AS DISCOUNT_RETURN_AMT,
  DISCOUNT_RETURN_QTY AS DISCOUNT_RETURN_QTY,
  POS_COUPON_AMT AS POS_COUPON_AMT,
  POS_COUPON_QTY AS POS_COUPON_QTY,
  POS_COUPON_ALLOC_AMT AS POS_COUPON_ALLOC_AMT,
  POS_COUPON_ALLOC_QTY AS POS_COUPON_ALLOC_QTY,
  NET_SALES_AMT AS NET_SALES_AMT,
  NET_SALES_COST AS NET_SALES_COST,
  NET_SALES_QTY AS NET_SALES_QTY,
  MA_SALES_AMT AS MA_SALES_AMT,
  MA_SALES_QTY AS MA_SALES_QTY,
  MA_TRANS_AMT AS MA_TRANS_AMT,
  MA_TRANS_COST AS MA_TRANS_COST,
  MA_TRANS_QTY AS MA_TRANS_QTY,
  NET_MARGIN_AMT AS NET_MARGIN_AMT,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  SALES_TRANS_SKU"""

df_32 = spark.sql(query_32)

df_32.createOrReplaceTempView("Shortcut_to_SALES_TRANS_SKU_32")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_SALES_TRANS_SKU_33


query_33 = f"""SELECT
  DAY_DT AS DAY_DT,
  SALES_INSTANCE_ID_DIST_KEY AS SALES_INSTANCE_ID_DIST_KEY,
  PRODUCT_ID AS PRODUCT_ID,
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  LOCATION_ID AS LOCATION_ID,
  SALES_TYPE_ID AS SALES_TYPE_ID,
  VOID_TYPE_CD AS VOID_TYPE_CD,
  TXN_WAS_POST_VOIDED_FLAG AS TXN_WAS_POST_VOIDED_FLAG,
  ORDER_NBR AS ORDER_NBR,
  ORDER_SEQ_NBR AS ORDER_SEQ_NBR,
  ORDER_CHANNEL AS ORDER_CHANNEL,
  ORDER_ASSIST_LOCATION_ID AS ORDER_ASSIST_LOCATION_ID,
  ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,
  ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,
  ORDER_CREATION_DEVICE_TYPE AS ORDER_CREATION_DEVICE_TYPE,
  ORDER_CREATION_DEVICE_WIDTH AS ORDER_CREATION_DEVICE_WIDTH,
  TXN_SEGMENT AS TXN_SEGMENT,
  PAYMENT_DEVICE_TYPE AS PAYMENT_DEVICE_TYPE,
  TRANS_TSTMP AS TRANS_TSTMP,
  LOYALTY_NBR AS LOYALTY_NBR,
  LOYALTY_REDEMPTION_ID AS LOYALTY_REDEMPTION_ID,
  LUID AS LUID,
  CUST_TRANS_ID AS CUST_TRANS_ID,
  CUSTOMER_EID AS CUSTOMER_EID,
  CUSTOMER_GID AS CUSTOMER_GID,
  SALES_CUSTOMER_LINK_EXCL_TYPE_ID AS SALES_CUSTOMER_LINK_EXCL_TYPE_ID,
  SPECIAL_SALES_FLAG AS SPECIAL_SALES_FLAG,
  RECEIPTLESS_RETURN_FLAG AS RECEIPTLESS_RETURN_FLAG,
  TRAINING_START_DT AS TRAINING_START_DT,
  TRAINER_NAME AS TRAINER_NAME,
  SALES_AMT AS SALES_AMT,
  SALES_COST AS SALES_COST,
  SALES_QTY AS SALES_QTY,
  SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,
  SPECIAL_SALES_QTY AS SPECIAL_SALES_QTY,
  RETURN_AMT AS RETURN_AMT,
  RETURN_COST AS RETURN_COST,
  RETURN_QTY AS RETURN_QTY,
  CLEARANCE_AMT AS CLEARANCE_AMT,
  CLEARANCE_QTY AS CLEARANCE_QTY,
  CLEARANCE_RETURN_AMT AS CLEARANCE_RETURN_AMT,
  CLEARANCE_RETURN_QTY AS CLEARANCE_RETURN_QTY,
  SPECIAL_RETURN_AMT AS SPECIAL_RETURN_AMT,
  SPECIAL_RETURN_QTY AS SPECIAL_RETURN_QTY,
  SPECIAL_SRVC_AMT AS SPECIAL_SRVC_AMT,
  DISCOUNT_AMT AS DISCOUNT_AMT,
  DISCOUNT_QTY AS DISCOUNT_QTY,
  DISCOUNT_RETURN_AMT AS DISCOUNT_RETURN_AMT,
  DISCOUNT_RETURN_QTY AS DISCOUNT_RETURN_QTY,
  POS_COUPON_AMT AS POS_COUPON_AMT,
  POS_COUPON_QTY AS POS_COUPON_QTY,
  POS_COUPON_ALLOC_AMT AS POS_COUPON_ALLOC_AMT,
  POS_COUPON_ALLOC_QTY AS POS_COUPON_ALLOC_QTY,
  NET_SALES_AMT AS NET_SALES_AMT,
  NET_SALES_COST AS NET_SALES_COST,
  NET_SALES_QTY AS NET_SALES_QTY,
  MA_SALES_AMT AS MA_SALES_AMT,
  MA_SALES_QTY AS MA_SALES_QTY,
  MA_TRANS_AMT AS MA_TRANS_AMT,
  MA_TRANS_COST AS MA_TRANS_COST,
  MA_TRANS_QTY AS MA_TRANS_QTY,
  NET_MARGIN_AMT AS NET_MARGIN_AMT,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  UPDATE_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_SALES_TRANS_SKU_32"""

df_33 = spark.sql(query_33)

df_33.createOrReplaceTempView("SQ_Shortcut_to_SALES_TRANS_SKU_33")

# COMMAND ----------
# DBTITLE 1, EX_S_Trans_SKU_34


query_34 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  NET_SALES_AMT AS NET_SALES_AMT,
  SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,
  LOYALTY_NBR AS LOYALTY_NBR,
  PRODUCT_ID AS PRODUCT_ID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_SALES_TRANS_SKU_33"""

df_34 = spark.sql(query_34)

df_34.createOrReplaceTempView("EX_S_Trans_SKU_34")

# COMMAND ----------
# DBTITLE 1, JNR_VW_SALES_TRANS_SKU_35


query_35 = f"""SELECT
  DETAIL.VW_SALES_INSTANCE_ID AS VW_SALES_INSTANCE_ID,
  MASTER.SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  MASTER.NET_SALES_AMT AS NET_SALES_AMT,
  MASTER.SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,
  MASTER.LOYALTY_NBR AS LOYALTY_NBR,
  MASTER.PRODUCT_ID AS PRODUCT_ID,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EX_S_Trans_SKU_34 MASTER
  INNER JOIN EXP_S_VW_5 DETAIL ON MASTER.SALES_INSTANCE_ID = DETAIL.VW_SALES_INSTANCE_ID"""

df_35 = spark.sql(query_35)

df_35.createOrReplaceTempView("JNR_VW_SALES_TRANS_SKU_35")

# COMMAND ----------
# DBTITLE 1, JNR_VW_SALES_TRANS_SKU_PROFILE_36


query_36 = f"""SELECT
  DETAIL.SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  DETAIL.NET_SALES_AMT AS NET_SALES_AMT,
  DETAIL.SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,
  DETAIL.LOYALTY_NBR AS LOYALTY_NBR,
  DETAIL.PRODUCT_ID AS PRODUCT_ID,
  MASTER.PRODUCT_ID AS SKU_PROFILE_PRODUCT_ID,
  MASTER.SKU_NBR AS SKU_NBR,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_SKU_PROFILE_27 MASTER
  INNER JOIN JNR_VW_SALES_TRANS_SKU_35 DETAIL ON MASTER.PRODUCT_ID = DETAIL.PRODUCT_ID"""

df_36 = spark.sql(query_36)

df_36.createOrReplaceTempView("JNR_VW_SALES_TRANS_SKU_PROFILE_36")

# COMMAND ----------
# DBTITLE 1, JNR_VW_SALES_T_SKU_PROF_EXCL_37


query_37 = f"""SELECT
  DETAIL.SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  DETAIL.NET_SALES_AMT AS NET_SALES_AMT,
  DETAIL.SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,
  DETAIL.LOYALTY_NBR AS LOYALTY_NBR,
  DETAIL.SKU_NBR AS SKU_NBR,
  MASTER.SKU_NBR AS EXCL_SKU_NBR,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_DD_MARKET_SKU_EXCL_17 MASTER
  RIGHT JOIN JNR_VW_SALES_TRANS_SKU_PROFILE_36 DETAIL ON MASTER.SKU_NBR = DETAIL.SKU_NBR"""

df_37 = spark.sql(query_37)

df_37.createOrReplaceTempView("JNR_VW_SALES_T_SKU_PROF_EXCL_37")

# COMMAND ----------
# DBTITLE 1, EXP_VW_SALES_T_SKU_EXCL_38


query_38 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  IFF (ISNULL(EXCL_SKU_NBR), NET_SALES_AMT, 0.0) AS o_NS_AMT,
  IFF (NOT ISNULL(EXCL_SKU_NBR), NET_SALES_AMT, 0.0) AS o_EXCL_NS_AMT,
  SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,
  LOYALTY_NBR AS LOYALTY_NBR,
  SKU_NBR AS SKU_NBR,
  EXCL_SKU_NBR AS EXCL_SKU_NBR,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_VW_SALES_T_SKU_PROF_EXCL_37"""

df_38 = spark.sql(query_38)

df_38.createOrReplaceTempView("EXP_VW_SALES_T_SKU_EXCL_38")

# COMMAND ----------
# DBTITLE 1, AGG_VW_SALES_TRANS_SKU_PROFILE_39


query_39 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  SUM(o_NS_AMT) AS o_NS_AMT,
  SUM(o_EXCL_NS_AMT) AS o_EXCL_NS_AMT,
  SUM(SPECIAL_SALES_AMT) AS O_SPECIAL_SALES_AMT,
  MAX(LOYALTY_NBR) AS O_LOYALTY_NBR,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  EXP_VW_SALES_T_SKU_EXCL_38
GROUP BY
  SALES_INSTANCE_ID"""

df_39 = spark.sql(query_39)

df_39.createOrReplaceTempView("AGG_VW_SALES_TRANS_SKU_PROFILE_39")

# COMMAND ----------
# DBTITLE 1, EXP_S_40


query_40 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  o_NS_AMT AS o_NS_AMT,
  o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  O_SPECIAL_SALES_AMT AS O_SPECIAL_SALES_AMT,
  O_LOYALTY_NBR AS O_LOYALTY_NBR,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  AGG_VW_SALES_TRANS_SKU_PROFILE_39"""

df_40 = spark.sql(query_40)

df_40.createOrReplaceTempView("EXP_S_40")

# COMMAND ----------
# DBTITLE 1, JNR_VW_S_Profile_S_41


query_41 = f"""SELECT
  DETAIL.SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  DETAIL.o_NS_AMT AS o_NS_AMT,
  DETAIL.o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  DETAIL.O_SPECIAL_SALES_AMT AS O_SPECIAL_SALES_AMT,
  DETAIL.O_LOYALTY_NBR AS O_LOYALTY_NBR,
  MASTER.DAY_DT AS DAY_DT,
  MASTER.DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  MASTER.DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  MASTER.SALES_INSTANCE_ID AS S_SALES_INSTANCE_ID,
  MASTER.COMPANY_ID AS COMPANY_ID,
  MASTER.DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  MASTER.SLS_LOAD_DT AS SLS_LOAD_DT,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_VW_S_Profile_31 MASTER
  RIGHT JOIN EXP_S_40 DETAIL ON MASTER.SALES_INSTANCE_ID = DETAIL.SALES_INSTANCE_ID"""

df_41 = spark.sql(query_41)

df_41.createOrReplaceTempView("JNR_VW_S_Profile_S_41")

# COMMAND ----------
# DBTITLE 1, JNR_VW_S_Profile_S_T_42


query_42 = f"""SELECT
  DETAIL.S_SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  DETAIL.o_NS_AMT AS o_NS_AMT,
  DETAIL.o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  DETAIL.O_SPECIAL_SALES_AMT AS O_SPECIAL_SALES_AMT,
  DETAIL.O_LOYALTY_NBR AS O_LOYALTY_NBR,
  DETAIL.DAY_DT AS DAY_DT,
  DETAIL.DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DETAIL.DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  DETAIL.COMPANY_ID AS COMPANY_ID,
  DETAIL.DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DETAIL.SLS_LOAD_DT AS SLS_LOAD_DT,
  MASTER.SALES_INSTANCE_ID AS T_SALES_INSTANCE_ID,
  MASTER.O_TAX_AMT AS O_TAX_AMT,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_T_10 MASTER
  RIGHT JOIN JNR_VW_S_Profile_S_41 DETAIL ON MASTER.SALES_INSTANCE_ID = DETAIL.S_SALES_INSTANCE_ID"""

df_42 = spark.sql(query_42)

df_42.createOrReplaceTempView("JNR_VW_S_Profile_S_T_42")

# COMMAND ----------
# DBTITLE 1, JNR_VW_S_Profile_S_T_M_43


query_43 = f"""SELECT
  DETAIL.SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  DETAIL.o_NS_AMT AS o_NS_AMT,
  DETAIL.o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  DETAIL.O_SPECIAL_SALES_AMT AS O_SPECIAL_SALES_AMT,
  DETAIL.O_LOYALTY_NBR AS O_LOYALTY_NBR,
  DETAIL.DAY_DT AS DAY_DT,
  DETAIL.DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DETAIL.DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  DETAIL.COMPANY_ID AS COMPANY_ID,
  DETAIL.O_TAX_AMT AS O_TAX_AMT,
  DETAIL.DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DETAIL.SLS_LOAD_DT AS SLS_LOAD_DT,
  MASTER.SALES_INSTANCE_ID AS M_SALES_INSTANCE_ID,
  MASTER.O_MFT_CPN_SLS_AMT AS O_MFT_CPN_SLS_AMT,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_M_25 MASTER
  RIGHT JOIN JNR_VW_S_Profile_S_T_42 DETAIL ON MASTER.SALES_INSTANCE_ID = DETAIL.SALES_INSTANCE_ID"""

df_43 = spark.sql(query_43)

df_43.createOrReplaceTempView("JNR_VW_S_Profile_S_T_M_43")

# COMMAND ----------
# DBTITLE 1, EXP_Sequence_ID_44


query_44 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  o_NS_AMT AS o_NS_AMT,
  o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  O_SPECIAL_SALES_AMT AS O_SPECIAL_SALES_AMT,
  O_LOYALTY_NBR AS O_LOYALTY_NBR,
  DAY_DT AS DAY_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  COMPANY_ID AS COMPANY_ID,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT,
  O_TAX_AMT AS O_TAX_AMT,
  O_MFT_CPN_SLS_AMT AS O_MFT_CPN_SLS_AMT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_VW_S_Profile_S_T_M_43"""

df_44 = spark.sql(query_44)

df_44.createOrReplaceTempView("EXP_Sequence_ID_44")

# COMMAND ----------
# DBTITLE 1, JNR_Target_45


query_45 = f"""SELECT
  DETAIL.SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  DETAIL.o_NS_AMT AS o_NS_AMT,
  DETAIL.o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  DETAIL.O_SPECIAL_SALES_AMT AS O_SPECIAL_SALES_AMT,
  DETAIL.O_LOYALTY_NBR AS O_LOYALTY_NBR,
  DETAIL.DAY_DT AS DAY_DT,
  DETAIL.DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DETAIL.DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  DETAIL.COMPANY_ID AS COMPANY_ID,
  DETAIL.O_TAX_AMT AS O_TAX_AMT,
  DETAIL.O_MFT_CPN_SLS_AMT AS O_MFT_CPN_SLS_AMT,
  DETAIL.DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  DETAIL.SLS_LOAD_DT AS SLS_LOAD_DT,
  MASTER.DD_DELIVERY_UUID AS lkp_DD_DELIVERY_UUID,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_DD_MARKETPLACE_INVOICE_HIST_19 MASTER
  RIGHT JOIN EXP_Sequence_ID_44 DETAIL ON MASTER.DD_DELIVERY_UUID = DETAIL.DD_DELIVERY_UUID"""

df_45 = spark.sql(query_45)

df_45.createOrReplaceTempView("JNR_Target_45")

# COMMAND ----------
# DBTITLE 1, EXP_Fil_Target_46


query_46 = f"""SELECT
  SALES_INSTANCE_ID AS SALES_INSTANCE_ID,
  o_NS_AMT AS o_NS_AMT,
  o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  O_SPECIAL_SALES_AMT AS O_SPECIAL_SALES_AMT,
  O_LOYALTY_NBR AS O_LOYALTY_NBR,
  DAY_DT AS DAY_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  COMPANY_ID AS COMPANY_ID,
  O_TAX_AMT AS O_TAX_AMT,
  O_MFT_CPN_SLS_AMT AS O_MFT_CPN_SLS_AMT,
  DD_UPDATE_TSTMP AS DD_UPDATE_TSTMP,
  SLS_LOAD_DT AS SLS_LOAD_DT,
  IFF (
    (
      (
        DD_UPDATE_TSTMP >= ADD_TO_DATE(now(), 'DD', TO_INTEGER({DD}))
      )
      OR (
        SLS_LOAD_DT >= ADD_TO_DATE(now(), 'DD', TO_INTEGER({DD}))
      )
    )
    AND (ISNULL(lkp_DD_DELIVERY_UUID)),
    1,
    0
  ) AS o_Flag,
  lkp_DD_DELIVERY_UUID AS lkp_DD_DELIVERY_UUID,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_Target_45"""

df_46 = spark.sql(query_46)

df_46.createOrReplaceTempView("EXP_Fil_Target_46")

# COMMAND ----------
# DBTITLE 1, FIL_Curr_Data_47


query_47 = f"""SELECT
  o_NS_AMT AS o_NS_AMT,
  o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  O_SPECIAL_SALES_AMT AS O_SPECIAL_SALES_AMT,
  O_LOYALTY_NBR AS O_LOYALTY_NBR,
  DAY_DT AS DAY_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  COMPANY_ID AS COMPANY_ID,
  O_TAX_AMT AS O_TAX_AMT,
  O_MFT_CPN_SLS_AMT AS O_MFT_CPN_SLS_AMT,
  o_Flag AS o_Flag,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_Fil_Target_46
WHERE
  o_Flag = 1"""

df_47 = spark.sql(query_47)

df_47.createOrReplaceTempView("FIL_Curr_Data_47")

# COMMAND ----------
# DBTITLE 1, EXP_Inv_NBR_48


query_48 = f"""SELECT
  DAY_DT AS DAY_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  COMPANY_ID AS COMPANY_ID,
  O_LOYALTY_NBR AS O_LOYALTY_NBR,
  o_NS_AMT AS o_NS_AMT,
  O_SPECIAL_SALES_AMT AS O_SPECIAL_SALES_AMT,
  O_TAX_AMT AS O_TAX_AMT,
  O_MFT_CPN_SLS_AMT AS O_MFT_CPN_SLS_AMT,
  o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  FIL_Curr_Data_47"""

df_48 = spark.sql(query_48)

df_48.createOrReplaceTempView("EXP_Inv_NBR_48")

# COMMAND ----------
# DBTITLE 1, AGG_VW_S_T_M_49


query_49 = f"""SELECT
  DAY_DT AS DAY_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  MAX(DASHPASS_ORDER_FLAG) AS o_DASHPASS_ORDER_FLAG,
  MAX(COMPANY_ID) AS o_COMPANY_ID,
  MAX(O_LOYALTY_NBR) AS o_LOYALTY_NBR,
  IFF (MAX(COMPANY_ID) = 2000, 'CAD', 'USD') AS o_CURRENCY_CD,
  o_EXCL_NS_AMT AS o_EXCL_NS_AMT,
  SUM(
    o_NS_AMT - IFF(ISNULL(O_MFT_CPN_SLS_AMT), 0, O_MFT_CPN_SLS_AMT)
  ) AS o_TOTAL_SALES_AMT,
  SUM(IFF(ISNULL(O_TAX_AMT), 0, O_TAX_AMT)) AS o_TOTAL_TAX_AMT,
  SUM(o_EXCL_NS_AMT + O_SPECIAL_SALES_AMT) AS o_TOTAL_EXCL_SALES_AMT,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  EXP_Inv_NBR_48
GROUP BY
  DAY_DT,
  DD_DELIVERY_UUID"""

df_49 = spark.sql(query_49)

df_49.createOrReplaceTempView("AGG_VW_S_T_M_49")

# COMMAND ----------
# DBTITLE 1, EXP_VALID_FLAG_50


query_50 = f"""SELECT
  DAY_DT AS DAY_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  o_DASHPASS_ORDER_FLAG AS o_DASHPASS_ORDER_FLAG,
  NULL AS o_DD_INVOICE_NBR,
  o_COMPANY_ID AS o_COMPANY_ID,
  o_LOYALTY_NBR AS o_LOYALTY_NBR,
  o_CURRENCY_CD AS o_CURRENCY_CD,
  o_TOTAL_SALES_AMT AS o_TOTAL_SALES_AMT,
  o_TOTAL_TAX_AMT AS o_TOTAL_TAX_AMT,
  o_TOTAL_EXCL_SALES_AMT AS o_TOTAL_EXCL_SALES_AMT,
  SESSSTARTTIME AS LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  AGG_VW_S_T_M_49"""

df_50 = spark.sql(query_50)

df_50.createOrReplaceTempView("EXP_VALID_FLAG_50")

# COMMAND ----------
# DBTITLE 1, UPD_Insert_51


query_51 = f"""SELECT
  DAY_DT AS DAY_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  o_DASHPASS_ORDER_FLAG AS o_DASHPASS_ORDER_FLAG,
  o_DD_INVOICE_NBR AS o_DD_INVOICE_NBR,
  o_COMPANY_ID AS o_COMPANY_ID,
  o_LOYALTY_NBR AS o_LOYALTY_NBR,
  o_CURRENCY_CD AS o_CURRENCY_CD,
  o_TOTAL_SALES_AMT AS o_TOTAL_SALES_AMT,
  o_TOTAL_TAX_AMT AS o_TOTAL_TAX_AMT,
  o_TOTAL_EXCL_SALES_AMT AS o_TOTAL_EXCL_SALES_AMT,
  LOAD_TSTMP AS LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_VALID_FLAG_50"""

df_51 = spark.sql(query_51)

df_51.createOrReplaceTempView("UPD_Insert_51")

# COMMAND ----------
# DBTITLE 1, DD_MARKETPLACE_INVOICE_HIST


spark.sql("""INSERT INTO
  DD_MARKETPLACE_INVOICE_HIST
SELECT
  DAY_DT AS TXN_DT,
  DD_DELIVERY_UUID AS DD_DELIVERY_UUID,
  o_DASHPASS_ORDER_FLAG AS DASHPASS_ORDER_FLAG,
  o_DD_INVOICE_NBR AS DD_INVOICE_NBR,
  o_COMPANY_ID AS COMPANY_ID,
  o_LOYALTY_NBR AS LOYALTY_NBR,
  o_CURRENCY_CD AS CURRENCY_CD,
  o_TOTAL_SALES_AMT AS TOTAL_SALES_AMT,
  o_TOTAL_TAX_AMT AS TOTAL_TAX_AMT,
  o_TOTAL_EXCL_SALES_AMT AS TOTAL_EXCL_SALES_AMT,
  LOAD_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP FROMUPD_Insert_51""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_DD_MarketPlace_Invoice_Hist")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_DD_MarketPlace_Invoice_Hist", mainWorkflowId, parentName)
